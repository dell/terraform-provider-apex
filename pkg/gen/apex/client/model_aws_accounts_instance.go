/*
APEX Navigator for Multicloud Storage REST APIs

The public API definitions for APEX Navigator for Multicloud Storage

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the AwsAccountsInstance type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AwsAccountsInstance{}

// AwsAccountsInstance The object displays information about the customer AWS account.
type AwsAccountsInstance struct {
	// Customer's AWS account id
	Id *string `json:"id,omitempty"`
	// Customer's AWS account alias
	AwsAccountAlias *string `json:"aws_account_alias,omitempty"`
	// Describes the state of the AWS account that is being added for Dell to manage
	Status *string `json:"status,omitempty"`
	// Amazon Resource Name (ARN) for the role created by customer as part of establishing trust.
	RoleArn *string `json:"role_arn,omitempty"`
}

// NewAwsAccountsInstance instantiates a new AwsAccountsInstance object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAwsAccountsInstance() *AwsAccountsInstance {
	this := AwsAccountsInstance{}
	return &this
}

// NewAwsAccountsInstanceWithDefaults instantiates a new AwsAccountsInstance object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAwsAccountsInstanceWithDefaults() *AwsAccountsInstance {
	this := AwsAccountsInstance{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *AwsAccountsInstance) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsAccountsInstance) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *AwsAccountsInstance) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *AwsAccountsInstance) SetId(v string) {
	o.Id = &v
}

// GetAwsAccountAlias returns the AwsAccountAlias field value if set, zero value otherwise.
func (o *AwsAccountsInstance) GetAwsAccountAlias() string {
	if o == nil || IsNil(o.AwsAccountAlias) {
		var ret string
		return ret
	}
	return *o.AwsAccountAlias
}

// GetAwsAccountAliasOk returns a tuple with the AwsAccountAlias field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsAccountsInstance) GetAwsAccountAliasOk() (*string, bool) {
	if o == nil || IsNil(o.AwsAccountAlias) {
		return nil, false
	}
	return o.AwsAccountAlias, true
}

// HasAwsAccountAlias returns a boolean if a field has been set.
func (o *AwsAccountsInstance) HasAwsAccountAlias() bool {
	if o != nil && !IsNil(o.AwsAccountAlias) {
		return true
	}

	return false
}

// SetAwsAccountAlias gets a reference to the given string and assigns it to the AwsAccountAlias field.
func (o *AwsAccountsInstance) SetAwsAccountAlias(v string) {
	o.AwsAccountAlias = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *AwsAccountsInstance) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsAccountsInstance) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *AwsAccountsInstance) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *AwsAccountsInstance) SetStatus(v string) {
	o.Status = &v
}

// GetRoleArn returns the RoleArn field value if set, zero value otherwise.
func (o *AwsAccountsInstance) GetRoleArn() string {
	if o == nil || IsNil(o.RoleArn) {
		var ret string
		return ret
	}
	return *o.RoleArn
}

// GetRoleArnOk returns a tuple with the RoleArn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsAccountsInstance) GetRoleArnOk() (*string, bool) {
	if o == nil || IsNil(o.RoleArn) {
		return nil, false
	}
	return o.RoleArn, true
}

// HasRoleArn returns a boolean if a field has been set.
func (o *AwsAccountsInstance) HasRoleArn() bool {
	if o != nil && !IsNil(o.RoleArn) {
		return true
	}

	return false
}

// SetRoleArn gets a reference to the given string and assigns it to the RoleArn field.
func (o *AwsAccountsInstance) SetRoleArn(v string) {
	o.RoleArn = &v
}

func (o AwsAccountsInstance) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AwsAccountsInstance) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.AwsAccountAlias) {
		toSerialize["aws_account_alias"] = o.AwsAccountAlias
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.RoleArn) {
		toSerialize["role_arn"] = o.RoleArn
	}
	return toSerialize, nil
}

type NullableAwsAccountsInstance struct {
	value *AwsAccountsInstance
	isSet bool
}

func (v NullableAwsAccountsInstance) Get() *AwsAccountsInstance {
	return v.value
}

func (v *NullableAwsAccountsInstance) Set(val *AwsAccountsInstance) {
	v.value = val
	v.isSet = true
}

func (v NullableAwsAccountsInstance) IsSet() bool {
	return v.isSet
}

func (v *NullableAwsAccountsInstance) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAwsAccountsInstance(val *AwsAccountsInstance) *NullableAwsAccountsInstance {
	return &NullableAwsAccountsInstance{value: val, isSet: true}
}

func (v NullableAwsAccountsInstance) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAwsAccountsInstance) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


