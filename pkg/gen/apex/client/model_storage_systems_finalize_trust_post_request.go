/*
APEX Navigator for Multicloud Storage REST APIs

The public API definitions for APEX Navigator for Multicloud Storage

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the StorageSystemsFinalizeTrustPostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &StorageSystemsFinalizeTrustPostRequest{}

// StorageSystemsFinalizeTrustPostRequest Request object to finalize the trust between on-prem storage system and APEX Navigator for Multicloud Storage.
type StorageSystemsFinalizeTrustPostRequest struct {
	// Client name for establishing the trust between on-prem storage system and APEX Navigator for Multicloud Storage.
	Name *string `json:"name,omitempty"`
	// Client id for establishing the trust between on-prem storage system and APEX Navigator for Multicloud Storage.
	ClientId string `json:"client_id"`
	// Client secret for establishing the trust between on-prem storage system and APEX Navigator for Multicloud Storage.
	ClientSecret string `json:"client_secret"`
}

type _StorageSystemsFinalizeTrustPostRequest StorageSystemsFinalizeTrustPostRequest

// NewStorageSystemsFinalizeTrustPostRequest instantiates a new StorageSystemsFinalizeTrustPostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStorageSystemsFinalizeTrustPostRequest(clientId string, clientSecret string) *StorageSystemsFinalizeTrustPostRequest {
	this := StorageSystemsFinalizeTrustPostRequest{}
	this.ClientId = clientId
	this.ClientSecret = clientSecret
	return &this
}

// NewStorageSystemsFinalizeTrustPostRequestWithDefaults instantiates a new StorageSystemsFinalizeTrustPostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStorageSystemsFinalizeTrustPostRequestWithDefaults() *StorageSystemsFinalizeTrustPostRequest {
	this := StorageSystemsFinalizeTrustPostRequest{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *StorageSystemsFinalizeTrustPostRequest) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StorageSystemsFinalizeTrustPostRequest) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *StorageSystemsFinalizeTrustPostRequest) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *StorageSystemsFinalizeTrustPostRequest) SetName(v string) {
	o.Name = &v
}

// GetClientId returns the ClientId field value
func (o *StorageSystemsFinalizeTrustPostRequest) GetClientId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ClientId
}

// GetClientIdOk returns a tuple with the ClientId field value
// and a boolean to check if the value has been set.
func (o *StorageSystemsFinalizeTrustPostRequest) GetClientIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ClientId, true
}

// SetClientId sets field value
func (o *StorageSystemsFinalizeTrustPostRequest) SetClientId(v string) {
	o.ClientId = v
}

// GetClientSecret returns the ClientSecret field value
func (o *StorageSystemsFinalizeTrustPostRequest) GetClientSecret() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ClientSecret
}

// GetClientSecretOk returns a tuple with the ClientSecret field value
// and a boolean to check if the value has been set.
func (o *StorageSystemsFinalizeTrustPostRequest) GetClientSecretOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ClientSecret, true
}

// SetClientSecret sets field value
func (o *StorageSystemsFinalizeTrustPostRequest) SetClientSecret(v string) {
	o.ClientSecret = v
}

func (o StorageSystemsFinalizeTrustPostRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o StorageSystemsFinalizeTrustPostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	toSerialize["client_id"] = o.ClientId
	toSerialize["client_secret"] = o.ClientSecret
	return toSerialize, nil
}

func (o *StorageSystemsFinalizeTrustPostRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"client_id",
		"client_secret",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varStorageSystemsFinalizeTrustPostRequest := _StorageSystemsFinalizeTrustPostRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varStorageSystemsFinalizeTrustPostRequest)

	if err != nil {
		return err
	}

	*o = StorageSystemsFinalizeTrustPostRequest(varStorageSystemsFinalizeTrustPostRequest)

	return err
}

type NullableStorageSystemsFinalizeTrustPostRequest struct {
	value *StorageSystemsFinalizeTrustPostRequest
	isSet bool
}

func (v NullableStorageSystemsFinalizeTrustPostRequest) Get() *StorageSystemsFinalizeTrustPostRequest {
	return v.value
}

func (v *NullableStorageSystemsFinalizeTrustPostRequest) Set(val *StorageSystemsFinalizeTrustPostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableStorageSystemsFinalizeTrustPostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableStorageSystemsFinalizeTrustPostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStorageSystemsFinalizeTrustPostRequest(val *StorageSystemsFinalizeTrustPostRequest) *NullableStorageSystemsFinalizeTrustPostRequest {
	return &NullableStorageSystemsFinalizeTrustPostRequest{value: val, isSet: true}
}

func (v NullableStorageSystemsFinalizeTrustPostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStorageSystemsFinalizeTrustPostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


