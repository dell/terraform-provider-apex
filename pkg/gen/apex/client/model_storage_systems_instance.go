/*
APEX Navigator for Multicloud Storage REST APIs

The public API definitions for APEX Navigator for Multicloud Storage

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the StorageSystemsInstance type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &StorageSystemsInstance{}

// StorageSystemsInstance The storage system.
type StorageSystemsInstance struct {
	// Identifier for the storage system.
	Id string `json:"id"`
	// Unique identifier for the device or appliance.
	SystemId *string `json:"system_id,omitempty"`
	// Type of the system.
	SystemType *string `json:"system_type,omitempty"`
	// The system bandwidth. Aggregated for a rolling average over the last 24 hours - Unit: bytes/s
	Bandwidth *int64 `json:"bandwidth,omitempty"`
	// Impact point of highest impacting issue in the capacity health category.
	CapacityImpact *int64 `json:"capacity_impact,omitempty"`
	// Total number of issues in the capacity health category.
	CapacityIssueCount *int64 `json:"capacity_issue_count,omitempty"`
	// Storage efficiency ratio of data which has compression applied to it on the system.
	CirrusDeployed *bool `json:"cirrus_deployed,omitempty"`
	CompressionSavings *float64 `json:"compression_savings,omitempty"`
	// Impact point of highest impacting issue in the configuration health category.
	ConfigurationImpact *int64 `json:"configuration_impact,omitempty"`
	// Total number of issues in the configuration health category.
	ConfigurationIssueCount *int64 `json:"configuration_issue_count,omitempty"`
	// The configured size for this system - Unit: bytes
	ConfiguredSize *int64 `json:"configured_size,omitempty"`
	// Connectivity status.
	ConnectivityStatus *string `json:"connectivity_status,omitempty"`
	// Type of the license on the system.
	LicenseType *string `json:"license_type,omitempty"`
	// Expiration date for the license on the system.
	LicenseExpirationDateTimestamp *time.Time `json:"license_expiration_date_timestamp,omitempty"`
	// Type of the service contract of the system.
	ContractCoverageType *string `json:"contract_coverage_type,omitempty"`
	// Expiration date for the service contract of the system.
	ContractExpirationDateTimestamp *time.Time `json:"contract_expiration_date_timestamp,omitempty"`
	// Impact point of highest impacting issue in the data protection health category.
	DataProtectionImpact *int64 `json:"data_protection_impact,omitempty"`
	// Total number of issues in the data protection health category.
	DataProtectionIssueCount *int64 `json:"data_protection_issue_count,omitempty"`
	// Unique identifier for the system.
	DisplayIdentifier *string `json:"display_identifier,omitempty"`
	// The %free capacity.
	FreePercent *float64 `json:"free_percent,omitempty"`
	// The free size value - Unit: bytes
	FreeSize *int64 `json:"free_size,omitempty"`
	// Health connectivity status.
	HealthConnectivityStatus *string `json:"health_connectivity_status,omitempty"`
	// Total amount of health issues.
	HealthIssueCount *int64 `json:"health_issue_count,omitempty"`
	// The overall health score of the system.
	HealthScore *int64 `json:"health_score,omitempty"`
	// Health state of the system.
	HealthState *string `json:"health_state,omitempty"`
	// The IOPS for the system. Aggregated for a rolling average over the last 24 hours - Unit: IO/s
	Iops *int64 `json:"iops,omitempty"`
	// IPv4 address of the system.
	Ipv4Address *string `json:"ipv4_address,omitempty"`
	// IPv6 address of the system.
	Ipv6Address *string `json:"ipv6_address,omitempty"`
	// Last time that CloudIQ received data from the system.
	LastContactTimestamp *time.Time `json:"last_contact_timestamp,omitempty"`
	// The latency for the system. Aggregated for a rolling average over the last 24 hours - Unit: microseconds
	Latency *int64 `json:"latency,omitempty"`
	// The logical size written - Unit: bytes
	LogicalSize *int64 `json:"logical_size,omitempty"`
	// The model of the system.
	Model *string `json:"model,omitempty"`
	// The user-defined name of the system.
	Name *string `json:"name,omitempty"`
	// The overall system-level storage efficiency ratio based on Thin, Snapshots, Deduplication, and Data Reduction.
	OverallEfficiency *float64 `json:"overall_efficiency,omitempty"`
	// Impact point of highest impacting issue in the performance health category.
	PerformanceImpact *int64 `json:"performance_impact,omitempty"`
	// Total number of issues in the performance health category.
	PerformanceIssueCount *int64 `json:"performance_issue_count,omitempty"`
	// The serial number for this system.
	SerialNumber *string `json:"serial_number,omitempty"`
	// Name of the site where the system is registered to.
	SiteName *string `json:"site_name,omitempty"`
	// The snaps savings for this system.
	SnapsSavings *float64 `json:"snaps_savings,omitempty"`
	// Health impact for the system.
	SystemHealthImpact *int64 `json:"system_health_impact,omitempty"`
	// Total amount of health issues for the system.
	SystemHealthIssueCount *int64 `json:"system_health_issue_count,omitempty"`
	// The savings due to thin provisioning.
	ThinSavings *float64 `json:"thin_savings,omitempty"`
	// The total size of the system - Unit: bytes
	TotalSize *int64 `json:"total_size,omitempty"`
	// The unconfigured capacity for this system - Unit: bytes
	UnconfiguredSize *int64 `json:"unconfigured_size,omitempty"`
	// Percentage of capacity used for this system.
	UsedPercent *float64 `json:"used_percent,omitempty"`
	// The value of used capacity for this system - Unit: bytes
	UsedSize *int64 `json:"used_size,omitempty"`
	// Name of the vendor who makes the system.
	Vendor *string `json:"vendor,omitempty"`
	// Version identifier.
	Version *string `json:"version,omitempty"`
	DeploymentDetails *StorageSystemsInstanceDeploymentDetails `json:"deployment_details,omitempty"`
}

type _StorageSystemsInstance StorageSystemsInstance

// NewStorageSystemsInstance instantiates a new StorageSystemsInstance object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStorageSystemsInstance(id string) *StorageSystemsInstance {
	this := StorageSystemsInstance{}
	this.Id = id
	return &this
}

// NewStorageSystemsInstanceWithDefaults instantiates a new StorageSystemsInstance object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStorageSystemsInstanceWithDefaults() *StorageSystemsInstance {
	this := StorageSystemsInstance{}
	return &this
}

// GetId returns the Id field value
func (o *StorageSystemsInstance) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *StorageSystemsInstance) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *StorageSystemsInstance) SetId(v string) {
	o.Id = v
}

// GetSystemId returns the SystemId field value if set, zero value otherwise.
func (o *StorageSystemsInstance) GetSystemId() string {
	if o == nil || IsNil(o.SystemId) {
		var ret string
		return ret
	}
	return *o.SystemId
}

// GetSystemIdOk returns a tuple with the SystemId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StorageSystemsInstance) GetSystemIdOk() (*string, bool) {
	if o == nil || IsNil(o.SystemId) {
		return nil, false
	}
	return o.SystemId, true
}

// HasSystemId returns a boolean if a field has been set.
func (o *StorageSystemsInstance) HasSystemId() bool {
	if o != nil && !IsNil(o.SystemId) {
		return true
	}

	return false
}

// SetSystemId gets a reference to the given string and assigns it to the SystemId field.
func (o *StorageSystemsInstance) SetSystemId(v string) {
	o.SystemId = &v
}

// GetSystemType returns the SystemType field value if set, zero value otherwise.
func (o *StorageSystemsInstance) GetSystemType() string {
	if o == nil || IsNil(o.SystemType) {
		var ret string
		return ret
	}
	return *o.SystemType
}

// GetSystemTypeOk returns a tuple with the SystemType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StorageSystemsInstance) GetSystemTypeOk() (*string, bool) {
	if o == nil || IsNil(o.SystemType) {
		return nil, false
	}
	return o.SystemType, true
}

// HasSystemType returns a boolean if a field has been set.
func (o *StorageSystemsInstance) HasSystemType() bool {
	if o != nil && !IsNil(o.SystemType) {
		return true
	}

	return false
}

// SetSystemType gets a reference to the given string and assigns it to the SystemType field.
func (o *StorageSystemsInstance) SetSystemType(v string) {
	o.SystemType = &v
}

// GetBandwidth returns the Bandwidth field value if set, zero value otherwise.
func (o *StorageSystemsInstance) GetBandwidth() int64 {
	if o == nil || IsNil(o.Bandwidth) {
		var ret int64
		return ret
	}
	return *o.Bandwidth
}

// GetBandwidthOk returns a tuple with the Bandwidth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StorageSystemsInstance) GetBandwidthOk() (*int64, bool) {
	if o == nil || IsNil(o.Bandwidth) {
		return nil, false
	}
	return o.Bandwidth, true
}

// HasBandwidth returns a boolean if a field has been set.
func (o *StorageSystemsInstance) HasBandwidth() bool {
	if o != nil && !IsNil(o.Bandwidth) {
		return true
	}

	return false
}

// SetBandwidth gets a reference to the given int64 and assigns it to the Bandwidth field.
func (o *StorageSystemsInstance) SetBandwidth(v int64) {
	o.Bandwidth = &v
}

// GetCapacityImpact returns the CapacityImpact field value if set, zero value otherwise.
func (o *StorageSystemsInstance) GetCapacityImpact() int64 {
	if o == nil || IsNil(o.CapacityImpact) {
		var ret int64
		return ret
	}
	return *o.CapacityImpact
}

// GetCapacityImpactOk returns a tuple with the CapacityImpact field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StorageSystemsInstance) GetCapacityImpactOk() (*int64, bool) {
	if o == nil || IsNil(o.CapacityImpact) {
		return nil, false
	}
	return o.CapacityImpact, true
}

// HasCapacityImpact returns a boolean if a field has been set.
func (o *StorageSystemsInstance) HasCapacityImpact() bool {
	if o != nil && !IsNil(o.CapacityImpact) {
		return true
	}

	return false
}

// SetCapacityImpact gets a reference to the given int64 and assigns it to the CapacityImpact field.
func (o *StorageSystemsInstance) SetCapacityImpact(v int64) {
	o.CapacityImpact = &v
}

// GetCapacityIssueCount returns the CapacityIssueCount field value if set, zero value otherwise.
func (o *StorageSystemsInstance) GetCapacityIssueCount() int64 {
	if o == nil || IsNil(o.CapacityIssueCount) {
		var ret int64
		return ret
	}
	return *o.CapacityIssueCount
}

// GetCapacityIssueCountOk returns a tuple with the CapacityIssueCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StorageSystemsInstance) GetCapacityIssueCountOk() (*int64, bool) {
	if o == nil || IsNil(o.CapacityIssueCount) {
		return nil, false
	}
	return o.CapacityIssueCount, true
}

// HasCapacityIssueCount returns a boolean if a field has been set.
func (o *StorageSystemsInstance) HasCapacityIssueCount() bool {
	if o != nil && !IsNil(o.CapacityIssueCount) {
		return true
	}

	return false
}

// SetCapacityIssueCount gets a reference to the given int64 and assigns it to the CapacityIssueCount field.
func (o *StorageSystemsInstance) SetCapacityIssueCount(v int64) {
	o.CapacityIssueCount = &v
}

// GetCompressionSavings returns the CompressionSavings field value if set, zero value otherwise.
func (o *StorageSystemsInstance) GetCompressionSavings() float64 {
	if o == nil || IsNil(o.CompressionSavings) {
		var ret float64
		return ret
	}
	return *o.CompressionSavings
}

// GetCompressionSavingsOk returns a tuple with the CompressionSavings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StorageSystemsInstance) GetCompressionSavingsOk() (*float64, bool) {
	if o == nil || IsNil(o.CompressionSavings) {
		return nil, false
	}
	return o.CompressionSavings, true
}

// HasCompressionSavings returns a boolean if a field has been set.
func (o *StorageSystemsInstance) HasCompressionSavings() bool {
	if o != nil && !IsNil(o.CompressionSavings) {
		return true
	}

	return false
}

// SetCompressionSavings gets a reference to the given float64 and assigns it to the CompressionSavings field.
func (o *StorageSystemsInstance) SetCompressionSavings(v float64) {
	o.CompressionSavings = &v
}

// GetConfigurationImpact returns the ConfigurationImpact field value if set, zero value otherwise.
func (o *StorageSystemsInstance) GetConfigurationImpact() int64 {
	if o == nil || IsNil(o.ConfigurationImpact) {
		var ret int64
		return ret
	}
	return *o.ConfigurationImpact
}

// GetConfigurationImpactOk returns a tuple with the ConfigurationImpact field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StorageSystemsInstance) GetConfigurationImpactOk() (*int64, bool) {
	if o == nil || IsNil(o.ConfigurationImpact) {
		return nil, false
	}
	return o.ConfigurationImpact, true
}

// HasConfigurationImpact returns a boolean if a field has been set.
func (o *StorageSystemsInstance) HasConfigurationImpact() bool {
	if o != nil && !IsNil(o.ConfigurationImpact) {
		return true
	}

	return false
}

// SetConfigurationImpact gets a reference to the given int64 and assigns it to the ConfigurationImpact field.
func (o *StorageSystemsInstance) SetConfigurationImpact(v int64) {
	o.ConfigurationImpact = &v
}

// GetConfigurationIssueCount returns the ConfigurationIssueCount field value if set, zero value otherwise.
func (o *StorageSystemsInstance) GetConfigurationIssueCount() int64 {
	if o == nil || IsNil(o.ConfigurationIssueCount) {
		var ret int64
		return ret
	}
	return *o.ConfigurationIssueCount
}

// GetConfigurationIssueCountOk returns a tuple with the ConfigurationIssueCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StorageSystemsInstance) GetConfigurationIssueCountOk() (*int64, bool) {
	if o == nil || IsNil(o.ConfigurationIssueCount) {
		return nil, false
	}
	return o.ConfigurationIssueCount, true
}

// HasConfigurationIssueCount returns a boolean if a field has been set.
func (o *StorageSystemsInstance) HasConfigurationIssueCount() bool {
	if o != nil && !IsNil(o.ConfigurationIssueCount) {
		return true
	}

	return false
}

// SetConfigurationIssueCount gets a reference to the given int64 and assigns it to the ConfigurationIssueCount field.
func (o *StorageSystemsInstance) SetConfigurationIssueCount(v int64) {
	o.ConfigurationIssueCount = &v
}

// GetConfiguredSize returns the ConfiguredSize field value if set, zero value otherwise.
func (o *StorageSystemsInstance) GetConfiguredSize() int64 {
	if o == nil || IsNil(o.ConfiguredSize) {
		var ret int64
		return ret
	}
	return *o.ConfiguredSize
}

// GetConfiguredSizeOk returns a tuple with the ConfiguredSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StorageSystemsInstance) GetConfiguredSizeOk() (*int64, bool) {
	if o == nil || IsNil(o.ConfiguredSize) {
		return nil, false
	}
	return o.ConfiguredSize, true
}

// HasConfiguredSize returns a boolean if a field has been set.
func (o *StorageSystemsInstance) HasConfiguredSize() bool {
	if o != nil && !IsNil(o.ConfiguredSize) {
		return true
	}

	return false
}

// SetConfiguredSize gets a reference to the given int64 and assigns it to the ConfiguredSize field.
func (o *StorageSystemsInstance) SetConfiguredSize(v int64) {
	o.ConfiguredSize = &v
}

// GetConnectivityStatus returns the ConnectivityStatus field value if set, zero value otherwise.
func (o *StorageSystemsInstance) GetConnectivityStatus() string {
	if o == nil || IsNil(o.ConnectivityStatus) {
		var ret string
		return ret
	}
	return *o.ConnectivityStatus
}

// GetConnectivityStatusOk returns a tuple with the ConnectivityStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StorageSystemsInstance) GetConnectivityStatusOk() (*string, bool) {
	if o == nil || IsNil(o.ConnectivityStatus) {
		return nil, false
	}
	return o.ConnectivityStatus, true
}

// HasConnectivityStatus returns a boolean if a field has been set.
func (o *StorageSystemsInstance) HasConnectivityStatus() bool {
	if o != nil && !IsNil(o.ConnectivityStatus) {
		return true
	}

	return false
}

// SetConnectivityStatus gets a reference to the given string and assigns it to the ConnectivityStatus field.
func (o *StorageSystemsInstance) SetConnectivityStatus(v string) {
	o.ConnectivityStatus = &v
}

// GetLicenseType returns the LicenseType field value if set, zero value otherwise.
func (o *StorageSystemsInstance) GetLicenseType() string {
	if o == nil || IsNil(o.LicenseType) {
		var ret string
		return ret
	}
	return *o.LicenseType
}

// GetLicenseTypeOk returns a tuple with the LicenseType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StorageSystemsInstance) GetLicenseTypeOk() (*string, bool) {
	if o == nil || IsNil(o.LicenseType) {
		return nil, false
	}
	return o.LicenseType, true
}

// HasLicenseType returns a boolean if a field has been set.
func (o *StorageSystemsInstance) HasLicenseType() bool {
	if o != nil && !IsNil(o.LicenseType) {
		return true
	}

	return false
}

// SetLicenseType gets a reference to the given string and assigns it to the LicenseType field.
func (o *StorageSystemsInstance) SetLicenseType(v string) {
	o.LicenseType = &v
}

// GetLicenseExpirationDateTimestamp returns the LicenseExpirationDateTimestamp field value if set, zero value otherwise.
func (o *StorageSystemsInstance) GetLicenseExpirationDateTimestamp() time.Time {
	if o == nil || IsNil(o.LicenseExpirationDateTimestamp) {
		var ret time.Time
		return ret
	}
	return *o.LicenseExpirationDateTimestamp
}

// GetLicenseExpirationDateTimestampOk returns a tuple with the LicenseExpirationDateTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StorageSystemsInstance) GetLicenseExpirationDateTimestampOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LicenseExpirationDateTimestamp) {
		return nil, false
	}
	return o.LicenseExpirationDateTimestamp, true
}

// HasLicenseExpirationDateTimestamp returns a boolean if a field has been set.
func (o *StorageSystemsInstance) HasLicenseExpirationDateTimestamp() bool {
	if o != nil && !IsNil(o.LicenseExpirationDateTimestamp) {
		return true
	}

	return false
}

// SetLicenseExpirationDateTimestamp gets a reference to the given time.Time and assigns it to the LicenseExpirationDateTimestamp field.
func (o *StorageSystemsInstance) SetLicenseExpirationDateTimestamp(v time.Time) {
	o.LicenseExpirationDateTimestamp = &v
}

// GetContractCoverageType returns the ContractCoverageType field value if set, zero value otherwise.
func (o *StorageSystemsInstance) GetContractCoverageType() string {
	if o == nil || IsNil(o.ContractCoverageType) {
		var ret string
		return ret
	}
	return *o.ContractCoverageType
}

// GetContractCoverageTypeOk returns a tuple with the ContractCoverageType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StorageSystemsInstance) GetContractCoverageTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ContractCoverageType) {
		return nil, false
	}
	return o.ContractCoverageType, true
}

// HasContractCoverageType returns a boolean if a field has been set.
func (o *StorageSystemsInstance) HasContractCoverageType() bool {
	if o != nil && !IsNil(o.ContractCoverageType) {
		return true
	}

	return false
}

// SetContractCoverageType gets a reference to the given string and assigns it to the ContractCoverageType field.
func (o *StorageSystemsInstance) SetContractCoverageType(v string) {
	o.ContractCoverageType = &v
}

// GetContractExpirationDateTimestamp returns the ContractExpirationDateTimestamp field value if set, zero value otherwise.
func (o *StorageSystemsInstance) GetContractExpirationDateTimestamp() time.Time {
	if o == nil || IsNil(o.ContractExpirationDateTimestamp) {
		var ret time.Time
		return ret
	}
	return *o.ContractExpirationDateTimestamp
}

// GetContractExpirationDateTimestampOk returns a tuple with the ContractExpirationDateTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StorageSystemsInstance) GetContractExpirationDateTimestampOk() (*time.Time, bool) {
	if o == nil || IsNil(o.ContractExpirationDateTimestamp) {
		return nil, false
	}
	return o.ContractExpirationDateTimestamp, true
}

// HasContractExpirationDateTimestamp returns a boolean if a field has been set.
func (o *StorageSystemsInstance) HasContractExpirationDateTimestamp() bool {
	if o != nil && !IsNil(o.ContractExpirationDateTimestamp) {
		return true
	}

	return false
}

// SetContractExpirationDateTimestamp gets a reference to the given time.Time and assigns it to the ContractExpirationDateTimestamp field.
func (o *StorageSystemsInstance) SetContractExpirationDateTimestamp(v time.Time) {
	o.ContractExpirationDateTimestamp = &v
}

// GetDataProtectionImpact returns the DataProtectionImpact field value if set, zero value otherwise.
func (o *StorageSystemsInstance) GetDataProtectionImpact() int64 {
	if o == nil || IsNil(o.DataProtectionImpact) {
		var ret int64
		return ret
	}
	return *o.DataProtectionImpact
}

// GetDataProtectionImpactOk returns a tuple with the DataProtectionImpact field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StorageSystemsInstance) GetDataProtectionImpactOk() (*int64, bool) {
	if o == nil || IsNil(o.DataProtectionImpact) {
		return nil, false
	}
	return o.DataProtectionImpact, true
}

// HasDataProtectionImpact returns a boolean if a field has been set.
func (o *StorageSystemsInstance) HasDataProtectionImpact() bool {
	if o != nil && !IsNil(o.DataProtectionImpact) {
		return true
	}

	return false
}

// SetDataProtectionImpact gets a reference to the given int64 and assigns it to the DataProtectionImpact field.
func (o *StorageSystemsInstance) SetDataProtectionImpact(v int64) {
	o.DataProtectionImpact = &v
}

// GetDataProtectionIssueCount returns the DataProtectionIssueCount field value if set, zero value otherwise.
func (o *StorageSystemsInstance) GetDataProtectionIssueCount() int64 {
	if o == nil || IsNil(o.DataProtectionIssueCount) {
		var ret int64
		return ret
	}
	return *o.DataProtectionIssueCount
}

// GetDataProtectionIssueCountOk returns a tuple with the DataProtectionIssueCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StorageSystemsInstance) GetDataProtectionIssueCountOk() (*int64, bool) {
	if o == nil || IsNil(o.DataProtectionIssueCount) {
		return nil, false
	}
	return o.DataProtectionIssueCount, true
}

// HasDataProtectionIssueCount returns a boolean if a field has been set.
func (o *StorageSystemsInstance) HasDataProtectionIssueCount() bool {
	if o != nil && !IsNil(o.DataProtectionIssueCount) {
		return true
	}

	return false
}

// SetDataProtectionIssueCount gets a reference to the given int64 and assigns it to the DataProtectionIssueCount field.
func (o *StorageSystemsInstance) SetDataProtectionIssueCount(v int64) {
	o.DataProtectionIssueCount = &v
}

// GetDisplayIdentifier returns the DisplayIdentifier field value if set, zero value otherwise.
func (o *StorageSystemsInstance) GetDisplayIdentifier() string {
	if o == nil || IsNil(o.DisplayIdentifier) {
		var ret string
		return ret
	}
	return *o.DisplayIdentifier
}

// GetDisplayIdentifierOk returns a tuple with the DisplayIdentifier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StorageSystemsInstance) GetDisplayIdentifierOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayIdentifier) {
		return nil, false
	}
	return o.DisplayIdentifier, true
}

// HasDisplayIdentifier returns a boolean if a field has been set.
func (o *StorageSystemsInstance) HasDisplayIdentifier() bool {
	if o != nil && !IsNil(o.DisplayIdentifier) {
		return true
	}

	return false
}

// SetDisplayIdentifier gets a reference to the given string and assigns it to the DisplayIdentifier field.
func (o *StorageSystemsInstance) SetDisplayIdentifier(v string) {
	o.DisplayIdentifier = &v
}

// GetFreePercent returns the FreePercent field value if set, zero value otherwise.
func (o *StorageSystemsInstance) GetFreePercent() float64 {
	if o == nil || IsNil(o.FreePercent) {
		var ret float64
		return ret
	}
	return *o.FreePercent
}

// GetFreePercentOk returns a tuple with the FreePercent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StorageSystemsInstance) GetFreePercentOk() (*float64, bool) {
	if o == nil || IsNil(o.FreePercent) {
		return nil, false
	}
	return o.FreePercent, true
}

// HasFreePercent returns a boolean if a field has been set.
func (o *StorageSystemsInstance) HasFreePercent() bool {
	if o != nil && !IsNil(o.FreePercent) {
		return true
	}

	return false
}

// SetFreePercent gets a reference to the given float64 and assigns it to the FreePercent field.
func (o *StorageSystemsInstance) SetFreePercent(v float64) {
	o.FreePercent = &v
}

// GetFreeSize returns the FreeSize field value if set, zero value otherwise.
func (o *StorageSystemsInstance) GetFreeSize() int64 {
	if o == nil || IsNil(o.FreeSize) {
		var ret int64
		return ret
	}
	return *o.FreeSize
}

// GetFreeSizeOk returns a tuple with the FreeSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StorageSystemsInstance) GetFreeSizeOk() (*int64, bool) {
	if o == nil || IsNil(o.FreeSize) {
		return nil, false
	}
	return o.FreeSize, true
}

// HasFreeSize returns a boolean if a field has been set.
func (o *StorageSystemsInstance) HasFreeSize() bool {
	if o != nil && !IsNil(o.FreeSize) {
		return true
	}

	return false
}

// SetFreeSize gets a reference to the given int64 and assigns it to the FreeSize field.
func (o *StorageSystemsInstance) SetFreeSize(v int64) {
	o.FreeSize = &v
}

// GetHealthConnectivityStatus returns the HealthConnectivityStatus field value if set, zero value otherwise.
func (o *StorageSystemsInstance) GetHealthConnectivityStatus() string {
	if o == nil || IsNil(o.HealthConnectivityStatus) {
		var ret string
		return ret
	}
	return *o.HealthConnectivityStatus
}

// GetHealthConnectivityStatusOk returns a tuple with the HealthConnectivityStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StorageSystemsInstance) GetHealthConnectivityStatusOk() (*string, bool) {
	if o == nil || IsNil(o.HealthConnectivityStatus) {
		return nil, false
	}
	return o.HealthConnectivityStatus, true
}

// HasHealthConnectivityStatus returns a boolean if a field has been set.
func (o *StorageSystemsInstance) HasHealthConnectivityStatus() bool {
	if o != nil && !IsNil(o.HealthConnectivityStatus) {
		return true
	}

	return false
}

// SetHealthConnectivityStatus gets a reference to the given string and assigns it to the HealthConnectivityStatus field.
func (o *StorageSystemsInstance) SetHealthConnectivityStatus(v string) {
	o.HealthConnectivityStatus = &v
}

// GetHealthIssueCount returns the HealthIssueCount field value if set, zero value otherwise.
func (o *StorageSystemsInstance) GetHealthIssueCount() int64 {
	if o == nil || IsNil(o.HealthIssueCount) {
		var ret int64
		return ret
	}
	return *o.HealthIssueCount
}

// GetHealthIssueCountOk returns a tuple with the HealthIssueCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StorageSystemsInstance) GetHealthIssueCountOk() (*int64, bool) {
	if o == nil || IsNil(o.HealthIssueCount) {
		return nil, false
	}
	return o.HealthIssueCount, true
}

// HasHealthIssueCount returns a boolean if a field has been set.
func (o *StorageSystemsInstance) HasHealthIssueCount() bool {
	if o != nil && !IsNil(o.HealthIssueCount) {
		return true
	}

	return false
}

// SetHealthIssueCount gets a reference to the given int64 and assigns it to the HealthIssueCount field.
func (o *StorageSystemsInstance) SetHealthIssueCount(v int64) {
	o.HealthIssueCount = &v
}

// GetHealthScore returns the HealthScore field value if set, zero value otherwise.
func (o *StorageSystemsInstance) GetHealthScore() int64 {
	if o == nil || IsNil(o.HealthScore) {
		var ret int64
		return ret
	}
	return *o.HealthScore
}

// GetHealthScoreOk returns a tuple with the HealthScore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StorageSystemsInstance) GetHealthScoreOk() (*int64, bool) {
	if o == nil || IsNil(o.HealthScore) {
		return nil, false
	}
	return o.HealthScore, true
}

// HasHealthScore returns a boolean if a field has been set.
func (o *StorageSystemsInstance) HasHealthScore() bool {
	if o != nil && !IsNil(o.HealthScore) {
		return true
	}

	return false
}

// SetHealthScore gets a reference to the given int64 and assigns it to the HealthScore field.
func (o *StorageSystemsInstance) SetHealthScore(v int64) {
	o.HealthScore = &v
}

// GetHealthState returns the HealthState field value if set, zero value otherwise.
func (o *StorageSystemsInstance) GetHealthState() string {
	if o == nil || IsNil(o.HealthState) {
		var ret string
		return ret
	}
	return *o.HealthState
}

// GetHealthStateOk returns a tuple with the HealthState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StorageSystemsInstance) GetHealthStateOk() (*string, bool) {
	if o == nil || IsNil(o.HealthState) {
		return nil, false
	}
	return o.HealthState, true
}

// HasHealthState returns a boolean if a field has been set.
func (o *StorageSystemsInstance) HasHealthState() bool {
	if o != nil && !IsNil(o.HealthState) {
		return true
	}

	return false
}

// SetHealthState gets a reference to the given string and assigns it to the HealthState field.
func (o *StorageSystemsInstance) SetHealthState(v string) {
	o.HealthState = &v
}

// GetIops returns the Iops field value if set, zero value otherwise.
func (o *StorageSystemsInstance) GetIops() int64 {
	if o == nil || IsNil(o.Iops) {
		var ret int64
		return ret
	}
	return *o.Iops
}

// GetIopsOk returns a tuple with the Iops field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StorageSystemsInstance) GetIopsOk() (*int64, bool) {
	if o == nil || IsNil(o.Iops) {
		return nil, false
	}
	return o.Iops, true
}

// HasIops returns a boolean if a field has been set.
func (o *StorageSystemsInstance) HasIops() bool {
	if o != nil && !IsNil(o.Iops) {
		return true
	}

	return false
}

// SetIops gets a reference to the given int64 and assigns it to the Iops field.
func (o *StorageSystemsInstance) SetIops(v int64) {
	o.Iops = &v
}

// GetIpv4Address returns the Ipv4Address field value if set, zero value otherwise.
func (o *StorageSystemsInstance) GetIpv4Address() string {
	if o == nil || IsNil(o.Ipv4Address) {
		var ret string
		return ret
	}
	return *o.Ipv4Address
}

// GetIpv4AddressOk returns a tuple with the Ipv4Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StorageSystemsInstance) GetIpv4AddressOk() (*string, bool) {
	if o == nil || IsNil(o.Ipv4Address) {
		return nil, false
	}
	return o.Ipv4Address, true
}

// HasIpv4Address returns a boolean if a field has been set.
func (o *StorageSystemsInstance) HasIpv4Address() bool {
	if o != nil && !IsNil(o.Ipv4Address) {
		return true
	}

	return false
}

// SetIpv4Address gets a reference to the given string and assigns it to the Ipv4Address field.
func (o *StorageSystemsInstance) SetIpv4Address(v string) {
	o.Ipv4Address = &v
}

// GetIpv6Address returns the Ipv6Address field value if set, zero value otherwise.
func (o *StorageSystemsInstance) GetIpv6Address() string {
	if o == nil || IsNil(o.Ipv6Address) {
		var ret string
		return ret
	}
	return *o.Ipv6Address
}

// GetIpv6AddressOk returns a tuple with the Ipv6Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StorageSystemsInstance) GetIpv6AddressOk() (*string, bool) {
	if o == nil || IsNil(o.Ipv6Address) {
		return nil, false
	}
	return o.Ipv6Address, true
}

// HasIpv6Address returns a boolean if a field has been set.
func (o *StorageSystemsInstance) HasIpv6Address() bool {
	if o != nil && !IsNil(o.Ipv6Address) {
		return true
	}

	return false
}

// SetIpv6Address gets a reference to the given string and assigns it to the Ipv6Address field.
func (o *StorageSystemsInstance) SetIpv6Address(v string) {
	o.Ipv6Address = &v
}

// GetLastContactTimestamp returns the LastContactTimestamp field value if set, zero value otherwise.
func (o *StorageSystemsInstance) GetLastContactTimestamp() time.Time {
	if o == nil || IsNil(o.LastContactTimestamp) {
		var ret time.Time
		return ret
	}
	return *o.LastContactTimestamp
}

// GetLastContactTimestampOk returns a tuple with the LastContactTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StorageSystemsInstance) GetLastContactTimestampOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastContactTimestamp) {
		return nil, false
	}
	return o.LastContactTimestamp, true
}

// HasLastContactTimestamp returns a boolean if a field has been set.
func (o *StorageSystemsInstance) HasLastContactTimestamp() bool {
	if o != nil && !IsNil(o.LastContactTimestamp) {
		return true
	}

	return false
}

// SetLastContactTimestamp gets a reference to the given time.Time and assigns it to the LastContactTimestamp field.
func (o *StorageSystemsInstance) SetLastContactTimestamp(v time.Time) {
	o.LastContactTimestamp = &v
}

// GetLatency returns the Latency field value if set, zero value otherwise.
func (o *StorageSystemsInstance) GetLatency() int64 {
	if o == nil || IsNil(o.Latency) {
		var ret int64
		return ret
	}
	return *o.Latency
}

// GetLatencyOk returns a tuple with the Latency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StorageSystemsInstance) GetLatencyOk() (*int64, bool) {
	if o == nil || IsNil(o.Latency) {
		return nil, false
	}
	return o.Latency, true
}

// HasLatency returns a boolean if a field has been set.
func (o *StorageSystemsInstance) HasLatency() bool {
	if o != nil && !IsNil(o.Latency) {
		return true
	}

	return false
}

// SetLatency gets a reference to the given int64 and assigns it to the Latency field.
func (o *StorageSystemsInstance) SetLatency(v int64) {
	o.Latency = &v
}

// GetLogicalSize returns the LogicalSize field value if set, zero value otherwise.
func (o *StorageSystemsInstance) GetLogicalSize() int64 {
	if o == nil || IsNil(o.LogicalSize) {
		var ret int64
		return ret
	}
	return *o.LogicalSize
}

// GetLogicalSizeOk returns a tuple with the LogicalSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StorageSystemsInstance) GetLogicalSizeOk() (*int64, bool) {
	if o == nil || IsNil(o.LogicalSize) {
		return nil, false
	}
	return o.LogicalSize, true
}

// HasLogicalSize returns a boolean if a field has been set.
func (o *StorageSystemsInstance) HasLogicalSize() bool {
	if o != nil && !IsNil(o.LogicalSize) {
		return true
	}

	return false
}

// SetLogicalSize gets a reference to the given int64 and assigns it to the LogicalSize field.
func (o *StorageSystemsInstance) SetLogicalSize(v int64) {
	o.LogicalSize = &v
}

// GetModel returns the Model field value if set, zero value otherwise.
func (o *StorageSystemsInstance) GetModel() string {
	if o == nil || IsNil(o.Model) {
		var ret string
		return ret
	}
	return *o.Model
}

// GetModelOk returns a tuple with the Model field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StorageSystemsInstance) GetModelOk() (*string, bool) {
	if o == nil || IsNil(o.Model) {
		return nil, false
	}
	return o.Model, true
}

// HasModel returns a boolean if a field has been set.
func (o *StorageSystemsInstance) HasModel() bool {
	if o != nil && !IsNil(o.Model) {
		return true
	}

	return false
}

// SetModel gets a reference to the given string and assigns it to the Model field.
func (o *StorageSystemsInstance) SetModel(v string) {
	o.Model = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *StorageSystemsInstance) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StorageSystemsInstance) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *StorageSystemsInstance) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *StorageSystemsInstance) SetName(v string) {
	o.Name = &v
}

// GetOverallEfficiency returns the OverallEfficiency field value if set, zero value otherwise.
func (o *StorageSystemsInstance) GetOverallEfficiency() float64 {
	if o == nil || IsNil(o.OverallEfficiency) {
		var ret float64
		return ret
	}
	return *o.OverallEfficiency
}

// GetOverallEfficiencyOk returns a tuple with the OverallEfficiency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StorageSystemsInstance) GetOverallEfficiencyOk() (*float64, bool) {
	if o == nil || IsNil(o.OverallEfficiency) {
		return nil, false
	}
	return o.OverallEfficiency, true
}

// HasOverallEfficiency returns a boolean if a field has been set.
func (o *StorageSystemsInstance) HasOverallEfficiency() bool {
	if o != nil && !IsNil(o.OverallEfficiency) {
		return true
	}

	return false
}

// SetOverallEfficiency gets a reference to the given float64 and assigns it to the OverallEfficiency field.
func (o *StorageSystemsInstance) SetOverallEfficiency(v float64) {
	o.OverallEfficiency = &v
}

// GetPerformanceImpact returns the PerformanceImpact field value if set, zero value otherwise.
func (o *StorageSystemsInstance) GetPerformanceImpact() int64 {
	if o == nil || IsNil(o.PerformanceImpact) {
		var ret int64
		return ret
	}
	return *o.PerformanceImpact
}

// GetPerformanceImpactOk returns a tuple with the PerformanceImpact field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StorageSystemsInstance) GetPerformanceImpactOk() (*int64, bool) {
	if o == nil || IsNil(o.PerformanceImpact) {
		return nil, false
	}
	return o.PerformanceImpact, true
}

// HasPerformanceImpact returns a boolean if a field has been set.
func (o *StorageSystemsInstance) HasPerformanceImpact() bool {
	if o != nil && !IsNil(o.PerformanceImpact) {
		return true
	}

	return false
}

// SetPerformanceImpact gets a reference to the given int64 and assigns it to the PerformanceImpact field.
func (o *StorageSystemsInstance) SetPerformanceImpact(v int64) {
	o.PerformanceImpact = &v
}

// GetPerformanceIssueCount returns the PerformanceIssueCount field value if set, zero value otherwise.
func (o *StorageSystemsInstance) GetPerformanceIssueCount() int64 {
	if o == nil || IsNil(o.PerformanceIssueCount) {
		var ret int64
		return ret
	}
	return *o.PerformanceIssueCount
}

// GetPerformanceIssueCountOk returns a tuple with the PerformanceIssueCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StorageSystemsInstance) GetPerformanceIssueCountOk() (*int64, bool) {
	if o == nil || IsNil(o.PerformanceIssueCount) {
		return nil, false
	}
	return o.PerformanceIssueCount, true
}

// HasPerformanceIssueCount returns a boolean if a field has been set.
func (o *StorageSystemsInstance) HasPerformanceIssueCount() bool {
	if o != nil && !IsNil(o.PerformanceIssueCount) {
		return true
	}

	return false
}

// SetPerformanceIssueCount gets a reference to the given int64 and assigns it to the PerformanceIssueCount field.
func (o *StorageSystemsInstance) SetPerformanceIssueCount(v int64) {
	o.PerformanceIssueCount = &v
}

// GetSerialNumber returns the SerialNumber field value if set, zero value otherwise.
func (o *StorageSystemsInstance) GetSerialNumber() string {
	if o == nil || IsNil(o.SerialNumber) {
		var ret string
		return ret
	}
	return *o.SerialNumber
}

// GetSerialNumberOk returns a tuple with the SerialNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StorageSystemsInstance) GetSerialNumberOk() (*string, bool) {
	if o == nil || IsNil(o.SerialNumber) {
		return nil, false
	}
	return o.SerialNumber, true
}

// HasSerialNumber returns a boolean if a field has been set.
func (o *StorageSystemsInstance) HasSerialNumber() bool {
	if o != nil && !IsNil(o.SerialNumber) {
		return true
	}

	return false
}

// SetSerialNumber gets a reference to the given string and assigns it to the SerialNumber field.
func (o *StorageSystemsInstance) SetSerialNumber(v string) {
	o.SerialNumber = &v
}

// GetSiteName returns the SiteName field value if set, zero value otherwise.
func (o *StorageSystemsInstance) GetSiteName() string {
	if o == nil || IsNil(o.SiteName) {
		var ret string
		return ret
	}
	return *o.SiteName
}

// GetSiteNameOk returns a tuple with the SiteName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StorageSystemsInstance) GetSiteNameOk() (*string, bool) {
	if o == nil || IsNil(o.SiteName) {
		return nil, false
	}
	return o.SiteName, true
}

// HasSiteName returns a boolean if a field has been set.
func (o *StorageSystemsInstance) HasSiteName() bool {
	if o != nil && !IsNil(o.SiteName) {
		return true
	}

	return false
}

// SetSiteName gets a reference to the given string and assigns it to the SiteName field.
func (o *StorageSystemsInstance) SetSiteName(v string) {
	o.SiteName = &v
}

// GetSnapsSavings returns the SnapsSavings field value if set, zero value otherwise.
func (o *StorageSystemsInstance) GetSnapsSavings() float64 {
	if o == nil || IsNil(o.SnapsSavings) {
		var ret float64
		return ret
	}
	return *o.SnapsSavings
}

// GetSnapsSavingsOk returns a tuple with the SnapsSavings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StorageSystemsInstance) GetSnapsSavingsOk() (*float64, bool) {
	if o == nil || IsNil(o.SnapsSavings) {
		return nil, false
	}
	return o.SnapsSavings, true
}

// HasSnapsSavings returns a boolean if a field has been set.
func (o *StorageSystemsInstance) HasSnapsSavings() bool {
	if o != nil && !IsNil(o.SnapsSavings) {
		return true
	}

	return false
}

// SetSnapsSavings gets a reference to the given float64 and assigns it to the SnapsSavings field.
func (o *StorageSystemsInstance) SetSnapsSavings(v float64) {
	o.SnapsSavings = &v
}

// GetSystemHealthImpact returns the SystemHealthImpact field value if set, zero value otherwise.
func (o *StorageSystemsInstance) GetSystemHealthImpact() int64 {
	if o == nil || IsNil(o.SystemHealthImpact) {
		var ret int64
		return ret
	}
	return *o.SystemHealthImpact
}

// GetSystemHealthImpactOk returns a tuple with the SystemHealthImpact field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StorageSystemsInstance) GetSystemHealthImpactOk() (*int64, bool) {
	if o == nil || IsNil(o.SystemHealthImpact) {
		return nil, false
	}
	return o.SystemHealthImpact, true
}

// HasSystemHealthImpact returns a boolean if a field has been set.
func (o *StorageSystemsInstance) HasSystemHealthImpact() bool {
	if o != nil && !IsNil(o.SystemHealthImpact) {
		return true
	}

	return false
}

// SetSystemHealthImpact gets a reference to the given int64 and assigns it to the SystemHealthImpact field.
func (o *StorageSystemsInstance) SetSystemHealthImpact(v int64) {
	o.SystemHealthImpact = &v
}

// GetSystemHealthIssueCount returns the SystemHealthIssueCount field value if set, zero value otherwise.
func (o *StorageSystemsInstance) GetSystemHealthIssueCount() int64 {
	if o == nil || IsNil(o.SystemHealthIssueCount) {
		var ret int64
		return ret
	}
	return *o.SystemHealthIssueCount
}

// GetSystemHealthIssueCountOk returns a tuple with the SystemHealthIssueCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StorageSystemsInstance) GetSystemHealthIssueCountOk() (*int64, bool) {
	if o == nil || IsNil(o.SystemHealthIssueCount) {
		return nil, false
	}
	return o.SystemHealthIssueCount, true
}

// HasSystemHealthIssueCount returns a boolean if a field has been set.
func (o *StorageSystemsInstance) HasSystemHealthIssueCount() bool {
	if o != nil && !IsNil(o.SystemHealthIssueCount) {
		return true
	}

	return false
}

// SetSystemHealthIssueCount gets a reference to the given int64 and assigns it to the SystemHealthIssueCount field.
func (o *StorageSystemsInstance) SetSystemHealthIssueCount(v int64) {
	o.SystemHealthIssueCount = &v
}

// GetThinSavings returns the ThinSavings field value if set, zero value otherwise.
func (o *StorageSystemsInstance) GetThinSavings() float64 {
	if o == nil || IsNil(o.ThinSavings) {
		var ret float64
		return ret
	}
	return *o.ThinSavings
}

// GetThinSavingsOk returns a tuple with the ThinSavings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StorageSystemsInstance) GetThinSavingsOk() (*float64, bool) {
	if o == nil || IsNil(o.ThinSavings) {
		return nil, false
	}
	return o.ThinSavings, true
}

// HasThinSavings returns a boolean if a field has been set.
func (o *StorageSystemsInstance) HasThinSavings() bool {
	if o != nil && !IsNil(o.ThinSavings) {
		return true
	}

	return false
}

// SetThinSavings gets a reference to the given float64 and assigns it to the ThinSavings field.
func (o *StorageSystemsInstance) SetThinSavings(v float64) {
	o.ThinSavings = &v
}

// GetTotalSize returns the TotalSize field value if set, zero value otherwise.
func (o *StorageSystemsInstance) GetTotalSize() int64 {
	if o == nil || IsNil(o.TotalSize) {
		var ret int64
		return ret
	}
	return *o.TotalSize
}

// GetTotalSizeOk returns a tuple with the TotalSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StorageSystemsInstance) GetTotalSizeOk() (*int64, bool) {
	if o == nil || IsNil(o.TotalSize) {
		return nil, false
	}
	return o.TotalSize, true
}

// HasTotalSize returns a boolean if a field has been set.
func (o *StorageSystemsInstance) HasTotalSize() bool {
	if o != nil && !IsNil(o.TotalSize) {
		return true
	}

	return false
}

// SetTotalSize gets a reference to the given int64 and assigns it to the TotalSize field.
func (o *StorageSystemsInstance) SetTotalSize(v int64) {
	o.TotalSize = &v
}

// GetUnconfiguredSize returns the UnconfiguredSize field value if set, zero value otherwise.
func (o *StorageSystemsInstance) GetUnconfiguredSize() int64 {
	if o == nil || IsNil(o.UnconfiguredSize) {
		var ret int64
		return ret
	}
	return *o.UnconfiguredSize
}

// GetUnconfiguredSizeOk returns a tuple with the UnconfiguredSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StorageSystemsInstance) GetUnconfiguredSizeOk() (*int64, bool) {
	if o == nil || IsNil(o.UnconfiguredSize) {
		return nil, false
	}
	return o.UnconfiguredSize, true
}

// HasUnconfiguredSize returns a boolean if a field has been set.
func (o *StorageSystemsInstance) HasUnconfiguredSize() bool {
	if o != nil && !IsNil(o.UnconfiguredSize) {
		return true
	}

	return false
}

// SetUnconfiguredSize gets a reference to the given int64 and assigns it to the UnconfiguredSize field.
func (o *StorageSystemsInstance) SetUnconfiguredSize(v int64) {
	o.UnconfiguredSize = &v
}

// GetUsedPercent returns the UsedPercent field value if set, zero value otherwise.
func (o *StorageSystemsInstance) GetUsedPercent() float64 {
	if o == nil || IsNil(o.UsedPercent) {
		var ret float64
		return ret
	}
	return *o.UsedPercent
}

// GetUsedPercentOk returns a tuple with the UsedPercent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StorageSystemsInstance) GetUsedPercentOk() (*float64, bool) {
	if o == nil || IsNil(o.UsedPercent) {
		return nil, false
	}
	return o.UsedPercent, true
}

// HasUsedPercent returns a boolean if a field has been set.
func (o *StorageSystemsInstance) HasUsedPercent() bool {
	if o != nil && !IsNil(o.UsedPercent) {
		return true
	}

	return false
}

// SetUsedPercent gets a reference to the given float64 and assigns it to the UsedPercent field.
func (o *StorageSystemsInstance) SetUsedPercent(v float64) {
	o.UsedPercent = &v
}

// GetUsedSize returns the UsedSize field value if set, zero value otherwise.
func (o *StorageSystemsInstance) GetUsedSize() int64 {
	if o == nil || IsNil(o.UsedSize) {
		var ret int64
		return ret
	}
	return *o.UsedSize
}

// GetUsedSizeOk returns a tuple with the UsedSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StorageSystemsInstance) GetUsedSizeOk() (*int64, bool) {
	if o == nil || IsNil(o.UsedSize) {
		return nil, false
	}
	return o.UsedSize, true
}

// HasUsedSize returns a boolean if a field has been set.
func (o *StorageSystemsInstance) HasUsedSize() bool {
	if o != nil && !IsNil(o.UsedSize) {
		return true
	}

	return false
}

// SetUsedSize gets a reference to the given int64 and assigns it to the UsedSize field.
func (o *StorageSystemsInstance) SetUsedSize(v int64) {
	o.UsedSize = &v
}

// GetVendor returns the Vendor field value if set, zero value otherwise.
func (o *StorageSystemsInstance) GetVendor() string {
	if o == nil || IsNil(o.Vendor) {
		var ret string
		return ret
	}
	return *o.Vendor
}

// GetVendorOk returns a tuple with the Vendor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StorageSystemsInstance) GetVendorOk() (*string, bool) {
	if o == nil || IsNil(o.Vendor) {
		return nil, false
	}
	return o.Vendor, true
}

// HasVendor returns a boolean if a field has been set.
func (o *StorageSystemsInstance) HasVendor() bool {
	if o != nil && !IsNil(o.Vendor) {
		return true
	}

	return false
}

// SetVendor gets a reference to the given string and assigns it to the Vendor field.
func (o *StorageSystemsInstance) SetVendor(v string) {
	o.Vendor = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *StorageSystemsInstance) GetVersion() string {
	if o == nil || IsNil(o.Version) {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StorageSystemsInstance) GetVersionOk() (*string, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *StorageSystemsInstance) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *StorageSystemsInstance) SetVersion(v string) {
	o.Version = &v
}

// GetDeploymentDetails returns the DeploymentDetails field value if set, zero value otherwise.
func (o *StorageSystemsInstance) GetDeploymentDetails() StorageSystemsInstanceDeploymentDetails {
	if o == nil || IsNil(o.DeploymentDetails) {
		var ret StorageSystemsInstanceDeploymentDetails
		return ret
	}
	return *o.DeploymentDetails
}

// GetDeploymentDetailsOk returns a tuple with the DeploymentDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StorageSystemsInstance) GetDeploymentDetailsOk() (*StorageSystemsInstanceDeploymentDetails, bool) {
	if o == nil || IsNil(o.DeploymentDetails) {
		return nil, false
	}
	return o.DeploymentDetails, true
}

// HasDeploymentDetails returns a boolean if a field has been set.
func (o *StorageSystemsInstance) HasDeploymentDetails() bool {
	if o != nil && !IsNil(o.DeploymentDetails) {
		return true
	}

	return false
}

// SetDeploymentDetails gets a reference to the given StorageSystemsInstanceDeploymentDetails and assigns it to the DeploymentDetails field.
func (o *StorageSystemsInstance) SetDeploymentDetails(v StorageSystemsInstanceDeploymentDetails) {
	o.DeploymentDetails = &v
}

func (o StorageSystemsInstance) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o StorageSystemsInstance) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	if !IsNil(o.SystemId) {
		toSerialize["system_id"] = o.SystemId
	}
	if !IsNil(o.SystemType) {
		toSerialize["system_type"] = o.SystemType
	}
	if !IsNil(o.Bandwidth) {
		toSerialize["bandwidth"] = o.Bandwidth
	}
	if !IsNil(o.CapacityImpact) {
		toSerialize["capacity_impact"] = o.CapacityImpact
	}
	if !IsNil(o.CapacityIssueCount) {
		toSerialize["capacity_issue_count"] = o.CapacityIssueCount
	}
	if !IsNil(o.CompressionSavings) {
		toSerialize["compression_savings"] = o.CompressionSavings
	}
	if !IsNil(o.ConfigurationImpact) {
		toSerialize["configuration_impact"] = o.ConfigurationImpact
	}
	if !IsNil(o.ConfigurationIssueCount) {
		toSerialize["configuration_issue_count"] = o.ConfigurationIssueCount
	}
	if !IsNil(o.ConfiguredSize) {
		toSerialize["configured_size"] = o.ConfiguredSize
	}
	if !IsNil(o.ConnectivityStatus) {
		toSerialize["connectivity_status"] = o.ConnectivityStatus
	}
	if !IsNil(o.LicenseType) {
		toSerialize["license_type"] = o.LicenseType
	}
	if !IsNil(o.LicenseExpirationDateTimestamp) {
		toSerialize["license_expiration_date_timestamp"] = o.LicenseExpirationDateTimestamp
	}
	if !IsNil(o.ContractCoverageType) {
		toSerialize["contract_coverage_type"] = o.ContractCoverageType
	}
	if !IsNil(o.ContractExpirationDateTimestamp) {
		toSerialize["contract_expiration_date_timestamp"] = o.ContractExpirationDateTimestamp
	}
	if !IsNil(o.DataProtectionImpact) {
		toSerialize["data_protection_impact"] = o.DataProtectionImpact
	}
	if !IsNil(o.DataProtectionIssueCount) {
		toSerialize["data_protection_issue_count"] = o.DataProtectionIssueCount
	}
	if !IsNil(o.DisplayIdentifier) {
		toSerialize["display_identifier"] = o.DisplayIdentifier
	}
	if !IsNil(o.FreePercent) {
		toSerialize["free_percent"] = o.FreePercent
	}
	if !IsNil(o.FreeSize) {
		toSerialize["free_size"] = o.FreeSize
	}
	if !IsNil(o.HealthConnectivityStatus) {
		toSerialize["health_connectivity_status"] = o.HealthConnectivityStatus
	}
	if !IsNil(o.HealthIssueCount) {
		toSerialize["health_issue_count"] = o.HealthIssueCount
	}
	if !IsNil(o.HealthScore) {
		toSerialize["health_score"] = o.HealthScore
	}
	if !IsNil(o.HealthState) {
		toSerialize["health_state"] = o.HealthState
	}
	if !IsNil(o.Iops) {
		toSerialize["iops"] = o.Iops
	}
	if !IsNil(o.Ipv4Address) {
		toSerialize["ipv4_address"] = o.Ipv4Address
	}
	if !IsNil(o.Ipv6Address) {
		toSerialize["ipv6_address"] = o.Ipv6Address
	}
	if !IsNil(o.LastContactTimestamp) {
		toSerialize["last_contact_timestamp"] = o.LastContactTimestamp
	}
	if !IsNil(o.Latency) {
		toSerialize["latency"] = o.Latency
	}
	if !IsNil(o.LogicalSize) {
		toSerialize["logical_size"] = o.LogicalSize
	}
	if !IsNil(o.Model) {
		toSerialize["model"] = o.Model
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.OverallEfficiency) {
		toSerialize["overall_efficiency"] = o.OverallEfficiency
	}
	if !IsNil(o.PerformanceImpact) {
		toSerialize["performance_impact"] = o.PerformanceImpact
	}
	if !IsNil(o.PerformanceIssueCount) {
		toSerialize["performance_issue_count"] = o.PerformanceIssueCount
	}
	if !IsNil(o.SerialNumber) {
		toSerialize["serial_number"] = o.SerialNumber
	}
	if !IsNil(o.SiteName) {
		toSerialize["site_name"] = o.SiteName
	}
	if !IsNil(o.SnapsSavings) {
		toSerialize["snaps_savings"] = o.SnapsSavings
	}
	if !IsNil(o.SystemHealthImpact) {
		toSerialize["system_health_impact"] = o.SystemHealthImpact
	}
	if !IsNil(o.SystemHealthIssueCount) {
		toSerialize["system_health_issue_count"] = o.SystemHealthIssueCount
	}
	if !IsNil(o.ThinSavings) {
		toSerialize["thin_savings"] = o.ThinSavings
	}
	if !IsNil(o.TotalSize) {
		toSerialize["total_size"] = o.TotalSize
	}
	if !IsNil(o.UnconfiguredSize) {
		toSerialize["unconfigured_size"] = o.UnconfiguredSize
	}
	if !IsNil(o.UsedPercent) {
		toSerialize["used_percent"] = o.UsedPercent
	}
	if !IsNil(o.UsedSize) {
		toSerialize["used_size"] = o.UsedSize
	}
	if !IsNil(o.Vendor) {
		toSerialize["vendor"] = o.Vendor
	}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	if !IsNil(o.DeploymentDetails) {
		toSerialize["deployment_details"] = o.DeploymentDetails
	}
	return toSerialize, nil
}

func (o *StorageSystemsInstance) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varStorageSystemsInstance := _StorageSystemsInstance{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varStorageSystemsInstance)

	if err != nil {
		return err
	}

	*o = StorageSystemsInstance(varStorageSystemsInstance)

	return err
}

type NullableStorageSystemsInstance struct {
	value *StorageSystemsInstance
	isSet bool
}

func (v NullableStorageSystemsInstance) Get() *StorageSystemsInstance {
	return v.value
}

func (v *NullableStorageSystemsInstance) Set(val *StorageSystemsInstance) {
	v.value = val
	v.isSet = true
}

func (v NullableStorageSystemsInstance) IsSet() bool {
	return v.isSet
}

func (v *NullableStorageSystemsInstance) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStorageSystemsInstance(val *StorageSystemsInstance) *NullableStorageSystemsInstance {
	return &NullableStorageSystemsInstance{value: val, isSet: true}
}

func (v NullableStorageSystemsInstance) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStorageSystemsInstance) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


