/*
APEX Navigator for Multicloud Storage REST APIs

The public API definitions for APEX Navigator for Multicloud Storage

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the AwsTrustPolicyStatementInnerCondition type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AwsTrustPolicyStatementInnerCondition{}

// AwsTrustPolicyStatementInnerCondition struct for AwsTrustPolicyStatementInnerCondition
type AwsTrustPolicyStatementInnerCondition struct {
	StringEquals *AwsTrustPolicyStatementInnerConditionStringEquals `json:"StringEquals,omitempty"`
	Bool *AwsTrustPolicyStatementInnerConditionBool `json:"Bool,omitempty"`
}

// NewAwsTrustPolicyStatementInnerCondition instantiates a new AwsTrustPolicyStatementInnerCondition object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAwsTrustPolicyStatementInnerCondition() *AwsTrustPolicyStatementInnerCondition {
	this := AwsTrustPolicyStatementInnerCondition{}
	return &this
}

// NewAwsTrustPolicyStatementInnerConditionWithDefaults instantiates a new AwsTrustPolicyStatementInnerCondition object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAwsTrustPolicyStatementInnerConditionWithDefaults() *AwsTrustPolicyStatementInnerCondition {
	this := AwsTrustPolicyStatementInnerCondition{}
	return &this
}

// GetStringEquals returns the StringEquals field value if set, zero value otherwise.
func (o *AwsTrustPolicyStatementInnerCondition) GetStringEquals() AwsTrustPolicyStatementInnerConditionStringEquals {
	if o == nil || IsNil(o.StringEquals) {
		var ret AwsTrustPolicyStatementInnerConditionStringEquals
		return ret
	}
	return *o.StringEquals
}

// GetStringEqualsOk returns a tuple with the StringEquals field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsTrustPolicyStatementInnerCondition) GetStringEqualsOk() (*AwsTrustPolicyStatementInnerConditionStringEquals, bool) {
	if o == nil || IsNil(o.StringEquals) {
		return nil, false
	}
	return o.StringEquals, true
}

// HasStringEquals returns a boolean if a field has been set.
func (o *AwsTrustPolicyStatementInnerCondition) HasStringEquals() bool {
	if o != nil && !IsNil(o.StringEquals) {
		return true
	}

	return false
}

// SetStringEquals gets a reference to the given AwsTrustPolicyStatementInnerConditionStringEquals and assigns it to the StringEquals field.
func (o *AwsTrustPolicyStatementInnerCondition) SetStringEquals(v AwsTrustPolicyStatementInnerConditionStringEquals) {
	o.StringEquals = &v
}

// GetBool returns the Bool field value if set, zero value otherwise.
func (o *AwsTrustPolicyStatementInnerCondition) GetBool() AwsTrustPolicyStatementInnerConditionBool {
	if o == nil || IsNil(o.Bool) {
		var ret AwsTrustPolicyStatementInnerConditionBool
		return ret
	}
	return *o.Bool
}

// GetBoolOk returns a tuple with the Bool field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsTrustPolicyStatementInnerCondition) GetBoolOk() (*AwsTrustPolicyStatementInnerConditionBool, bool) {
	if o == nil || IsNil(o.Bool) {
		return nil, false
	}
	return o.Bool, true
}

// HasBool returns a boolean if a field has been set.
func (o *AwsTrustPolicyStatementInnerCondition) HasBool() bool {
	if o != nil && !IsNil(o.Bool) {
		return true
	}

	return false
}

// SetBool gets a reference to the given AwsTrustPolicyStatementInnerConditionBool and assigns it to the Bool field.
func (o *AwsTrustPolicyStatementInnerCondition) SetBool(v AwsTrustPolicyStatementInnerConditionBool) {
	o.Bool = &v
}

func (o AwsTrustPolicyStatementInnerCondition) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AwsTrustPolicyStatementInnerCondition) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.StringEquals) {
		toSerialize["StringEquals"] = o.StringEquals
	}
	if !IsNil(o.Bool) {
		toSerialize["Bool"] = o.Bool
	}
	return toSerialize, nil
}

type NullableAwsTrustPolicyStatementInnerCondition struct {
	value *AwsTrustPolicyStatementInnerCondition
	isSet bool
}

func (v NullableAwsTrustPolicyStatementInnerCondition) Get() *AwsTrustPolicyStatementInnerCondition {
	return v.value
}

func (v *NullableAwsTrustPolicyStatementInnerCondition) Set(val *AwsTrustPolicyStatementInnerCondition) {
	v.value = val
	v.isSet = true
}

func (v NullableAwsTrustPolicyStatementInnerCondition) IsSet() bool {
	return v.isSet
}

func (v *NullableAwsTrustPolicyStatementInnerCondition) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAwsTrustPolicyStatementInnerCondition(val *AwsTrustPolicyStatementInnerCondition) *NullableAwsTrustPolicyStatementInnerCondition {
	return &NullableAwsTrustPolicyStatementInnerCondition{value: val, isSet: true}
}

func (v NullableAwsTrustPolicyStatementInnerCondition) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAwsTrustPolicyStatementInnerCondition) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


