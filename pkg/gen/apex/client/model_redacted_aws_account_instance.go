/*
APEX Navigator for Multicloud Storage REST APIs

The public API definitions for APEX Navigator for Multicloud Storage

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the RedactedAwsAccountInstance type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RedactedAwsAccountInstance{}

// RedactedAwsAccountInstance An individual AWS account, excluding sensitive data.
type RedactedAwsAccountInstance struct {
	// The id represents the aws account id
	Id *string `json:"id,omitempty"`
	AwsAccountAlias *string `json:"aws_account_alias,omitempty"`
	Status *string `json:"status,omitempty"`
}

// NewRedactedAwsAccountInstance instantiates a new RedactedAwsAccountInstance object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRedactedAwsAccountInstance() *RedactedAwsAccountInstance {
	this := RedactedAwsAccountInstance{}
	return &this
}

// NewRedactedAwsAccountInstanceWithDefaults instantiates a new RedactedAwsAccountInstance object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRedactedAwsAccountInstanceWithDefaults() *RedactedAwsAccountInstance {
	this := RedactedAwsAccountInstance{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *RedactedAwsAccountInstance) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RedactedAwsAccountInstance) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *RedactedAwsAccountInstance) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *RedactedAwsAccountInstance) SetId(v string) {
	o.Id = &v
}

// GetAwsAccountAlias returns the AwsAccountAlias field value if set, zero value otherwise.
func (o *RedactedAwsAccountInstance) GetAwsAccountAlias() string {
	if o == nil || IsNil(o.AwsAccountAlias) {
		var ret string
		return ret
	}
	return *o.AwsAccountAlias
}

// GetAwsAccountAliasOk returns a tuple with the AwsAccountAlias field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RedactedAwsAccountInstance) GetAwsAccountAliasOk() (*string, bool) {
	if o == nil || IsNil(o.AwsAccountAlias) {
		return nil, false
	}
	return o.AwsAccountAlias, true
}

// HasAwsAccountAlias returns a boolean if a field has been set.
func (o *RedactedAwsAccountInstance) HasAwsAccountAlias() bool {
	if o != nil && !IsNil(o.AwsAccountAlias) {
		return true
	}

	return false
}

// SetAwsAccountAlias gets a reference to the given string and assigns it to the AwsAccountAlias field.
func (o *RedactedAwsAccountInstance) SetAwsAccountAlias(v string) {
	o.AwsAccountAlias = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *RedactedAwsAccountInstance) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RedactedAwsAccountInstance) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *RedactedAwsAccountInstance) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *RedactedAwsAccountInstance) SetStatus(v string) {
	o.Status = &v
}

func (o RedactedAwsAccountInstance) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RedactedAwsAccountInstance) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.AwsAccountAlias) {
		toSerialize["aws_account_alias"] = o.AwsAccountAlias
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	return toSerialize, nil
}

type NullableRedactedAwsAccountInstance struct {
	value *RedactedAwsAccountInstance
	isSet bool
}

func (v NullableRedactedAwsAccountInstance) Get() *RedactedAwsAccountInstance {
	return v.value
}

func (v *NullableRedactedAwsAccountInstance) Set(val *RedactedAwsAccountInstance) {
	v.value = val
	v.isSet = true
}

func (v NullableRedactedAwsAccountInstance) IsSet() bool {
	return v.isSet
}

func (v *NullableRedactedAwsAccountInstance) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRedactedAwsAccountInstance(val *RedactedAwsAccountInstance) *NullableRedactedAwsAccountInstance {
	return &NullableRedactedAwsAccountInstance{value: val, isSet: true}
}

func (v NullableRedactedAwsAccountInstance) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRedactedAwsAccountInstance) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


