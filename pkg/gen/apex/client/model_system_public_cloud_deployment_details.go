/*
APEX Navigator for Multicloud Storage REST APIs

The public API definitions for APEX Navigator for Multicloud Storage

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the SystemPublicCloudDeploymentDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SystemPublicCloudDeploymentDetails{}

// SystemPublicCloudDeploymentDetails Public cloud deployment details.
type SystemPublicCloudDeploymentDetails struct {
	DeploymentType *SystemDeploymentTypeEnum `json:"deployment_type,omitempty"`
	CloudType *CloudProviderEnum `json:"cloud_type,omitempty"`
	// Cloud provider account where the storage system resides.
	CloudAccount *string `json:"cloud_account,omitempty"`
	// Cloud provider region where the storage system resides.
	CloudRegion *string `json:"cloud_region,omitempty"`
	AvailabilityZoneTopology *AvailabilityZoneTopologyEnum `json:"availability_zone_topology,omitempty"`
	// Cloud virtual private environment identifier.
	VirtualPrivateCloud *string `json:"virtual_private_cloud,omitempty"`
	// Management IPv4 or IPv6 address or DNS name of the storage system in cloud.
	CloudManagementAddress *string `json:"cloud_management_address,omitempty"`
	// Minimum IOPS requested during the deployment time - Unit: IO/s
	MinimumIops *int64 `json:"minimum_iops,omitempty"`
	// Minimum capacity requested during the deployment time - Unit: bytes
	MinimumCapacity *int64 `json:"minimum_capacity,omitempty"`
	// Tier type requested during the deployment time.
	TierType *string `json:"tier_type,omitempty"`
}

// NewSystemPublicCloudDeploymentDetails instantiates a new SystemPublicCloudDeploymentDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSystemPublicCloudDeploymentDetails() *SystemPublicCloudDeploymentDetails {
	this := SystemPublicCloudDeploymentDetails{}
	var deploymentType SystemDeploymentTypeEnum = SYSTEMDEPLOYMENTTYPEENUM_ONPREM
	this.DeploymentType = &deploymentType
	var cloudType CloudProviderEnum = CLOUDPROVIDERENUM_AWS
	this.CloudType = &cloudType
	return &this
}

// NewSystemPublicCloudDeploymentDetailsWithDefaults instantiates a new SystemPublicCloudDeploymentDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSystemPublicCloudDeploymentDetailsWithDefaults() *SystemPublicCloudDeploymentDetails {
	this := SystemPublicCloudDeploymentDetails{}
	var deploymentType SystemDeploymentTypeEnum = SYSTEMDEPLOYMENTTYPEENUM_ONPREM
	this.DeploymentType = &deploymentType
	var cloudType CloudProviderEnum = CLOUDPROVIDERENUM_AWS
	this.CloudType = &cloudType
	return &this
}

// GetDeploymentType returns the DeploymentType field value if set, zero value otherwise.
func (o *SystemPublicCloudDeploymentDetails) GetDeploymentType() SystemDeploymentTypeEnum {
	if o == nil || IsNil(o.DeploymentType) {
		var ret SystemDeploymentTypeEnum
		return ret
	}
	return *o.DeploymentType
}

// GetDeploymentTypeOk returns a tuple with the DeploymentType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemPublicCloudDeploymentDetails) GetDeploymentTypeOk() (*SystemDeploymentTypeEnum, bool) {
	if o == nil || IsNil(o.DeploymentType) {
		return nil, false
	}
	return o.DeploymentType, true
}

// HasDeploymentType returns a boolean if a field has been set.
func (o *SystemPublicCloudDeploymentDetails) HasDeploymentType() bool {
	if o != nil && !IsNil(o.DeploymentType) {
		return true
	}

	return false
}

// SetDeploymentType gets a reference to the given SystemDeploymentTypeEnum and assigns it to the DeploymentType field.
func (o *SystemPublicCloudDeploymentDetails) SetDeploymentType(v SystemDeploymentTypeEnum) {
	o.DeploymentType = &v
}

// GetCloudType returns the CloudType field value if set, zero value otherwise.
func (o *SystemPublicCloudDeploymentDetails) GetCloudType() CloudProviderEnum {
	if o == nil || IsNil(o.CloudType) {
		var ret CloudProviderEnum
		return ret
	}
	return *o.CloudType
}

// GetCloudTypeOk returns a tuple with the CloudType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemPublicCloudDeploymentDetails) GetCloudTypeOk() (*CloudProviderEnum, bool) {
	if o == nil || IsNil(o.CloudType) {
		return nil, false
	}
	return o.CloudType, true
}

// HasCloudType returns a boolean if a field has been set.
func (o *SystemPublicCloudDeploymentDetails) HasCloudType() bool {
	if o != nil && !IsNil(o.CloudType) {
		return true
	}

	return false
}

// SetCloudType gets a reference to the given CloudProviderEnum and assigns it to the CloudType field.
func (o *SystemPublicCloudDeploymentDetails) SetCloudType(v CloudProviderEnum) {
	o.CloudType = &v
}

// GetCloudAccount returns the CloudAccount field value if set, zero value otherwise.
func (o *SystemPublicCloudDeploymentDetails) GetCloudAccount() string {
	if o == nil || IsNil(o.CloudAccount) {
		var ret string
		return ret
	}
	return *o.CloudAccount
}

// GetCloudAccountOk returns a tuple with the CloudAccount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemPublicCloudDeploymentDetails) GetCloudAccountOk() (*string, bool) {
	if o == nil || IsNil(o.CloudAccount) {
		return nil, false
	}
	return o.CloudAccount, true
}

// HasCloudAccount returns a boolean if a field has been set.
func (o *SystemPublicCloudDeploymentDetails) HasCloudAccount() bool {
	if o != nil && !IsNil(o.CloudAccount) {
		return true
	}

	return false
}

// SetCloudAccount gets a reference to the given string and assigns it to the CloudAccount field.
func (o *SystemPublicCloudDeploymentDetails) SetCloudAccount(v string) {
	o.CloudAccount = &v
}

// GetCloudRegion returns the CloudRegion field value if set, zero value otherwise.
func (o *SystemPublicCloudDeploymentDetails) GetCloudRegion() string {
	if o == nil || IsNil(o.CloudRegion) {
		var ret string
		return ret
	}
	return *o.CloudRegion
}

// GetCloudRegionOk returns a tuple with the CloudRegion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemPublicCloudDeploymentDetails) GetCloudRegionOk() (*string, bool) {
	if o == nil || IsNil(o.CloudRegion) {
		return nil, false
	}
	return o.CloudRegion, true
}

// HasCloudRegion returns a boolean if a field has been set.
func (o *SystemPublicCloudDeploymentDetails) HasCloudRegion() bool {
	if o != nil && !IsNil(o.CloudRegion) {
		return true
	}

	return false
}

// SetCloudRegion gets a reference to the given string and assigns it to the CloudRegion field.
func (o *SystemPublicCloudDeploymentDetails) SetCloudRegion(v string) {
	o.CloudRegion = &v
}

// GetAvailabilityZoneTopology returns the AvailabilityZoneTopology field value if set, zero value otherwise.
func (o *SystemPublicCloudDeploymentDetails) GetAvailabilityZoneTopology() AvailabilityZoneTopologyEnum {
	if o == nil || IsNil(o.AvailabilityZoneTopology) {
		var ret AvailabilityZoneTopologyEnum
		return ret
	}
	return *o.AvailabilityZoneTopology
}

// GetAvailabilityZoneTopologyOk returns a tuple with the AvailabilityZoneTopology field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemPublicCloudDeploymentDetails) GetAvailabilityZoneTopologyOk() (*AvailabilityZoneTopologyEnum, bool) {
	if o == nil || IsNil(o.AvailabilityZoneTopology) {
		return nil, false
	}
	return o.AvailabilityZoneTopology, true
}

// HasAvailabilityZoneTopology returns a boolean if a field has been set.
func (o *SystemPublicCloudDeploymentDetails) HasAvailabilityZoneTopology() bool {
	if o != nil && !IsNil(o.AvailabilityZoneTopology) {
		return true
	}

	return false
}

// SetAvailabilityZoneTopology gets a reference to the given AvailabilityZoneTopologyEnum and assigns it to the AvailabilityZoneTopology field.
func (o *SystemPublicCloudDeploymentDetails) SetAvailabilityZoneTopology(v AvailabilityZoneTopologyEnum) {
	o.AvailabilityZoneTopology = &v
}

// GetVirtualPrivateCloud returns the VirtualPrivateCloud field value if set, zero value otherwise.
func (o *SystemPublicCloudDeploymentDetails) GetVirtualPrivateCloud() string {
	if o == nil || IsNil(o.VirtualPrivateCloud) {
		var ret string
		return ret
	}
	return *o.VirtualPrivateCloud
}

// GetVirtualPrivateCloudOk returns a tuple with the VirtualPrivateCloud field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemPublicCloudDeploymentDetails) GetVirtualPrivateCloudOk() (*string, bool) {
	if o == nil || IsNil(o.VirtualPrivateCloud) {
		return nil, false
	}
	return o.VirtualPrivateCloud, true
}

// HasVirtualPrivateCloud returns a boolean if a field has been set.
func (o *SystemPublicCloudDeploymentDetails) HasVirtualPrivateCloud() bool {
	if o != nil && !IsNil(o.VirtualPrivateCloud) {
		return true
	}

	return false
}

// SetVirtualPrivateCloud gets a reference to the given string and assigns it to the VirtualPrivateCloud field.
func (o *SystemPublicCloudDeploymentDetails) SetVirtualPrivateCloud(v string) {
	o.VirtualPrivateCloud = &v
}

// GetCloudManagementAddress returns the CloudManagementAddress field value if set, zero value otherwise.
func (o *SystemPublicCloudDeploymentDetails) GetCloudManagementAddress() string {
	if o == nil || IsNil(o.CloudManagementAddress) {
		var ret string
		return ret
	}
	return *o.CloudManagementAddress
}

// GetCloudManagementAddressOk returns a tuple with the CloudManagementAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemPublicCloudDeploymentDetails) GetCloudManagementAddressOk() (*string, bool) {
	if o == nil || IsNil(o.CloudManagementAddress) {
		return nil, false
	}
	return o.CloudManagementAddress, true
}

// HasCloudManagementAddress returns a boolean if a field has been set.
func (o *SystemPublicCloudDeploymentDetails) HasCloudManagementAddress() bool {
	if o != nil && !IsNil(o.CloudManagementAddress) {
		return true
	}

	return false
}

// SetCloudManagementAddress gets a reference to the given string and assigns it to the CloudManagementAddress field.
func (o *SystemPublicCloudDeploymentDetails) SetCloudManagementAddress(v string) {
	o.CloudManagementAddress = &v
}

// GetMinimumIops returns the MinimumIops field value if set, zero value otherwise.
func (o *SystemPublicCloudDeploymentDetails) GetMinimumIops() int64 {
	if o == nil || IsNil(o.MinimumIops) {
		var ret int64
		return ret
	}
	return *o.MinimumIops
}

// GetMinimumIopsOk returns a tuple with the MinimumIops field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemPublicCloudDeploymentDetails) GetMinimumIopsOk() (*int64, bool) {
	if o == nil || IsNil(o.MinimumIops) {
		return nil, false
	}
	return o.MinimumIops, true
}

// HasMinimumIops returns a boolean if a field has been set.
func (o *SystemPublicCloudDeploymentDetails) HasMinimumIops() bool {
	if o != nil && !IsNil(o.MinimumIops) {
		return true
	}

	return false
}

// SetMinimumIops gets a reference to the given int64 and assigns it to the MinimumIops field.
func (o *SystemPublicCloudDeploymentDetails) SetMinimumIops(v int64) {
	o.MinimumIops = &v
}

// GetMinimumCapacity returns the MinimumCapacity field value if set, zero value otherwise.
func (o *SystemPublicCloudDeploymentDetails) GetMinimumCapacity() int64 {
	if o == nil || IsNil(o.MinimumCapacity) {
		var ret int64
		return ret
	}
	return *o.MinimumCapacity
}

// GetMinimumCapacityOk returns a tuple with the MinimumCapacity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemPublicCloudDeploymentDetails) GetMinimumCapacityOk() (*int64, bool) {
	if o == nil || IsNil(o.MinimumCapacity) {
		return nil, false
	}
	return o.MinimumCapacity, true
}

// HasMinimumCapacity returns a boolean if a field has been set.
func (o *SystemPublicCloudDeploymentDetails) HasMinimumCapacity() bool {
	if o != nil && !IsNil(o.MinimumCapacity) {
		return true
	}

	return false
}

// SetMinimumCapacity gets a reference to the given int64 and assigns it to the MinimumCapacity field.
func (o *SystemPublicCloudDeploymentDetails) SetMinimumCapacity(v int64) {
	o.MinimumCapacity = &v
}

// GetTierType returns the TierType field value if set, zero value otherwise.
func (o *SystemPublicCloudDeploymentDetails) GetTierType() string {
	if o == nil || IsNil(o.TierType) {
		var ret string
		return ret
	}
	return *o.TierType
}

// GetTierTypeOk returns a tuple with the TierType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemPublicCloudDeploymentDetails) GetTierTypeOk() (*string, bool) {
	if o == nil || IsNil(o.TierType) {
		return nil, false
	}
	return o.TierType, true
}

// HasTierType returns a boolean if a field has been set.
func (o *SystemPublicCloudDeploymentDetails) HasTierType() bool {
	if o != nil && !IsNil(o.TierType) {
		return true
	}

	return false
}

// SetTierType gets a reference to the given string and assigns it to the TierType field.
func (o *SystemPublicCloudDeploymentDetails) SetTierType(v string) {
	o.TierType = &v
}

func (o SystemPublicCloudDeploymentDetails) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SystemPublicCloudDeploymentDetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DeploymentType) {
		toSerialize["deployment_type"] = o.DeploymentType
	}
	if !IsNil(o.CloudType) {
		toSerialize["cloud_type"] = o.CloudType
	}
	if !IsNil(o.CloudAccount) {
		toSerialize["cloud_account"] = o.CloudAccount
	}
	if !IsNil(o.CloudRegion) {
		toSerialize["cloud_region"] = o.CloudRegion
	}
	if !IsNil(o.AvailabilityZoneTopology) {
		toSerialize["availability_zone_topology"] = o.AvailabilityZoneTopology
	}
	if !IsNil(o.VirtualPrivateCloud) {
		toSerialize["virtual_private_cloud"] = o.VirtualPrivateCloud
	}
	if !IsNil(o.CloudManagementAddress) {
		toSerialize["cloud_management_address"] = o.CloudManagementAddress
	}
	if !IsNil(o.MinimumIops) {
		toSerialize["minimum_iops"] = o.MinimumIops
	}
	if !IsNil(o.MinimumCapacity) {
		toSerialize["minimum_capacity"] = o.MinimumCapacity
	}
	if !IsNil(o.TierType) {
		toSerialize["tier_type"] = o.TierType
	}
	return toSerialize, nil
}

type NullableSystemPublicCloudDeploymentDetails struct {
	value *SystemPublicCloudDeploymentDetails
	isSet bool
}

func (v NullableSystemPublicCloudDeploymentDetails) Get() *SystemPublicCloudDeploymentDetails {
	return v.value
}

func (v *NullableSystemPublicCloudDeploymentDetails) Set(val *SystemPublicCloudDeploymentDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableSystemPublicCloudDeploymentDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableSystemPublicCloudDeploymentDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSystemPublicCloudDeploymentDetails(val *SystemPublicCloudDeploymentDetails) *NullableSystemPublicCloudDeploymentDetails {
	return &NullableSystemPublicCloudDeploymentDetails{value: val, isSet: true}
}

func (v NullableSystemPublicCloudDeploymentDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSystemPublicCloudDeploymentDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


