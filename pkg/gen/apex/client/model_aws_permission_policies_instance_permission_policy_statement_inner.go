/*
APEX Navigator for Multicloud Storage REST APIs

The public API definitions for APEX Navigator for Multicloud Storage

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the AwsPermissionPoliciesInstancePermissionPolicyStatementInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AwsPermissionPoliciesInstancePermissionPolicyStatementInner{}

// AwsPermissionPoliciesInstancePermissionPolicyStatementInner struct for AwsPermissionPoliciesInstancePermissionPolicyStatementInner
type AwsPermissionPoliciesInstancePermissionPolicyStatementInner struct {
	Sid *string `json:"Sid,omitempty"`
	Effect *string `json:"Effect,omitempty"`
	Action []string `json:"Action,omitempty"`
	Resource *string `json:"Resource,omitempty"`
	Condition *AwsPermissionPoliciesInstancePermissionPolicyStatementInnerCondition `json:"Condition,omitempty"`
}

// NewAwsPermissionPoliciesInstancePermissionPolicyStatementInner instantiates a new AwsPermissionPoliciesInstancePermissionPolicyStatementInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAwsPermissionPoliciesInstancePermissionPolicyStatementInner() *AwsPermissionPoliciesInstancePermissionPolicyStatementInner {
	this := AwsPermissionPoliciesInstancePermissionPolicyStatementInner{}
	return &this
}

// NewAwsPermissionPoliciesInstancePermissionPolicyStatementInnerWithDefaults instantiates a new AwsPermissionPoliciesInstancePermissionPolicyStatementInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAwsPermissionPoliciesInstancePermissionPolicyStatementInnerWithDefaults() *AwsPermissionPoliciesInstancePermissionPolicyStatementInner {
	this := AwsPermissionPoliciesInstancePermissionPolicyStatementInner{}
	return &this
}

// GetSid returns the Sid field value if set, zero value otherwise.
func (o *AwsPermissionPoliciesInstancePermissionPolicyStatementInner) GetSid() string {
	if o == nil || IsNil(o.Sid) {
		var ret string
		return ret
	}
	return *o.Sid
}

// GetSidOk returns a tuple with the Sid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsPermissionPoliciesInstancePermissionPolicyStatementInner) GetSidOk() (*string, bool) {
	if o == nil || IsNil(o.Sid) {
		return nil, false
	}
	return o.Sid, true
}

// HasSid returns a boolean if a field has been set.
func (o *AwsPermissionPoliciesInstancePermissionPolicyStatementInner) HasSid() bool {
	if o != nil && !IsNil(o.Sid) {
		return true
	}

	return false
}

// SetSid gets a reference to the given string and assigns it to the Sid field.
func (o *AwsPermissionPoliciesInstancePermissionPolicyStatementInner) SetSid(v string) {
	o.Sid = &v
}

// GetEffect returns the Effect field value if set, zero value otherwise.
func (o *AwsPermissionPoliciesInstancePermissionPolicyStatementInner) GetEffect() string {
	if o == nil || IsNil(o.Effect) {
		var ret string
		return ret
	}
	return *o.Effect
}

// GetEffectOk returns a tuple with the Effect field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsPermissionPoliciesInstancePermissionPolicyStatementInner) GetEffectOk() (*string, bool) {
	if o == nil || IsNil(o.Effect) {
		return nil, false
	}
	return o.Effect, true
}

// HasEffect returns a boolean if a field has been set.
func (o *AwsPermissionPoliciesInstancePermissionPolicyStatementInner) HasEffect() bool {
	if o != nil && !IsNil(o.Effect) {
		return true
	}

	return false
}

// SetEffect gets a reference to the given string and assigns it to the Effect field.
func (o *AwsPermissionPoliciesInstancePermissionPolicyStatementInner) SetEffect(v string) {
	o.Effect = &v
}

// GetAction returns the Action field value if set, zero value otherwise.
func (o *AwsPermissionPoliciesInstancePermissionPolicyStatementInner) GetAction() []string {
	if o == nil || IsNil(o.Action) {
		var ret []string
		return ret
	}
	return o.Action
}

// GetActionOk returns a tuple with the Action field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsPermissionPoliciesInstancePermissionPolicyStatementInner) GetActionOk() ([]string, bool) {
	if o == nil || IsNil(o.Action) {
		return nil, false
	}
	return o.Action, true
}

// HasAction returns a boolean if a field has been set.
func (o *AwsPermissionPoliciesInstancePermissionPolicyStatementInner) HasAction() bool {
	if o != nil && !IsNil(o.Action) {
		return true
	}

	return false
}

// SetAction gets a reference to the given []string and assigns it to the Action field.
func (o *AwsPermissionPoliciesInstancePermissionPolicyStatementInner) SetAction(v []string) {
	o.Action = v
}

// GetResource returns the Resource field value if set, zero value otherwise.
func (o *AwsPermissionPoliciesInstancePermissionPolicyStatementInner) GetResource() string {
	if o == nil || IsNil(o.Resource) {
		var ret string
		return ret
	}
	return *o.Resource
}

// GetResourceOk returns a tuple with the Resource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsPermissionPoliciesInstancePermissionPolicyStatementInner) GetResourceOk() (*string, bool) {
	if o == nil || IsNil(o.Resource) {
		return nil, false
	}
	return o.Resource, true
}

// HasResource returns a boolean if a field has been set.
func (o *AwsPermissionPoliciesInstancePermissionPolicyStatementInner) HasResource() bool {
	if o != nil && !IsNil(o.Resource) {
		return true
	}

	return false
}

// SetResource gets a reference to the given string and assigns it to the Resource field.
func (o *AwsPermissionPoliciesInstancePermissionPolicyStatementInner) SetResource(v string) {
	o.Resource = &v
}

// GetCondition returns the Condition field value if set, zero value otherwise.
func (o *AwsPermissionPoliciesInstancePermissionPolicyStatementInner) GetCondition() AwsPermissionPoliciesInstancePermissionPolicyStatementInnerCondition {
	if o == nil || IsNil(o.Condition) {
		var ret AwsPermissionPoliciesInstancePermissionPolicyStatementInnerCondition
		return ret
	}
	return *o.Condition
}

// GetConditionOk returns a tuple with the Condition field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsPermissionPoliciesInstancePermissionPolicyStatementInner) GetConditionOk() (*AwsPermissionPoliciesInstancePermissionPolicyStatementInnerCondition, bool) {
	if o == nil || IsNil(o.Condition) {
		return nil, false
	}
	return o.Condition, true
}

// HasCondition returns a boolean if a field has been set.
func (o *AwsPermissionPoliciesInstancePermissionPolicyStatementInner) HasCondition() bool {
	if o != nil && !IsNil(o.Condition) {
		return true
	}

	return false
}

// SetCondition gets a reference to the given AwsPermissionPoliciesInstancePermissionPolicyStatementInnerCondition and assigns it to the Condition field.
func (o *AwsPermissionPoliciesInstancePermissionPolicyStatementInner) SetCondition(v AwsPermissionPoliciesInstancePermissionPolicyStatementInnerCondition) {
	o.Condition = &v
}

func (o AwsPermissionPoliciesInstancePermissionPolicyStatementInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AwsPermissionPoliciesInstancePermissionPolicyStatementInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Sid) {
		toSerialize["Sid"] = o.Sid
	}
	if !IsNil(o.Effect) {
		toSerialize["Effect"] = o.Effect
	}
	if !IsNil(o.Action) {
		toSerialize["Action"] = o.Action
	}
	if !IsNil(o.Resource) {
		toSerialize["Resource"] = o.Resource
	}
	if !IsNil(o.Condition) {
		toSerialize["Condition"] = o.Condition
	}
	return toSerialize, nil
}

type NullableAwsPermissionPoliciesInstancePermissionPolicyStatementInner struct {
	value *AwsPermissionPoliciesInstancePermissionPolicyStatementInner
	isSet bool
}

func (v NullableAwsPermissionPoliciesInstancePermissionPolicyStatementInner) Get() *AwsPermissionPoliciesInstancePermissionPolicyStatementInner {
	return v.value
}

func (v *NullableAwsPermissionPoliciesInstancePermissionPolicyStatementInner) Set(val *AwsPermissionPoliciesInstancePermissionPolicyStatementInner) {
	v.value = val
	v.isSet = true
}

func (v NullableAwsPermissionPoliciesInstancePermissionPolicyStatementInner) IsSet() bool {
	return v.isSet
}

func (v *NullableAwsPermissionPoliciesInstancePermissionPolicyStatementInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAwsPermissionPoliciesInstancePermissionPolicyStatementInner(val *AwsPermissionPoliciesInstancePermissionPolicyStatementInner) *NullableAwsPermissionPoliciesInstancePermissionPolicyStatementInner {
	return &NullableAwsPermissionPoliciesInstancePermissionPolicyStatementInner{value: val, isSet: true}
}

func (v NullableAwsPermissionPoliciesInstancePermissionPolicyStatementInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAwsPermissionPoliciesInstancePermissionPolicyStatementInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


