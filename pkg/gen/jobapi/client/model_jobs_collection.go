/*
APEX Orchestration Platform - Job Management System (JMS) API

Provides management and visibility for APEX Orchestration Platform Jobs

API version: IGNORED - see resource tag's x-api-version for the specific version of this resource.
Contact: apex.mars@dell.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the JobsCollection type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &JobsCollection{}

// JobsCollection The collection of jobs
type JobsCollection struct {
	Results []JobsInstance `json:"results,omitempty"`
}

// NewJobsCollection instantiates a new JobsCollection object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewJobsCollection() *JobsCollection {
	this := JobsCollection{}
	return &this
}

// NewJobsCollectionWithDefaults instantiates a new JobsCollection object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewJobsCollectionWithDefaults() *JobsCollection {
	this := JobsCollection{}
	return &this
}

// GetResults returns the Results field value if set, zero value otherwise.
func (o *JobsCollection) GetResults() []JobsInstance {
	if o == nil || IsNil(o.Results) {
		var ret []JobsInstance
		return ret
	}
	return o.Results
}

// GetResultsOk returns a tuple with the Results field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsCollection) GetResultsOk() ([]JobsInstance, bool) {
	if o == nil || IsNil(o.Results) {
		return nil, false
	}
	return o.Results, true
}

// HasResults returns a boolean if a field has been set.
func (o *JobsCollection) HasResults() bool {
	if o != nil && !IsNil(o.Results) {
		return true
	}

	return false
}

// SetResults gets a reference to the given []JobsInstance and assigns it to the Results field.
func (o *JobsCollection) SetResults(v []JobsInstance) {
	o.Results = v
}

func (o JobsCollection) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o JobsCollection) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Results) {
		toSerialize["results"] = o.Results
	}
	return toSerialize, nil
}

type NullableJobsCollection struct {
	value *JobsCollection
	isSet bool
}

func (v NullableJobsCollection) Get() *JobsCollection {
	return v.value
}

func (v *NullableJobsCollection) Set(val *JobsCollection) {
	v.value = val
	v.isSet = true
}

func (v NullableJobsCollection) IsSet() bool {
	return v.isSet
}

func (v *NullableJobsCollection) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableJobsCollection(val *JobsCollection) *NullableJobsCollection {
	return &NullableJobsCollection{value: val, isSet: true}
}

func (v NullableJobsCollection) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableJobsCollection) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


