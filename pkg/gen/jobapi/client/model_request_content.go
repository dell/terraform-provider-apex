/*
APEX Orchestration Platform - Job Management System (JMS) API

Provides management and visibility for APEX Orchestration Platform Jobs

API version: IGNORED - see resource tag's x-api-version for the specific version of this resource.
Contact: apex.mars@dell.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the RequestContent type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RequestContent{}

// RequestContent Generic request object. This is used as a generic type for request bodies that job instances preserve for clients to query in the future. 
type RequestContent struct {
	// This is the name of the OpenAPI definition of the specific request body in the request_body property. For example \"LDAPCreate\", \"LocalAccountModify\", etc... 
	OpenapiType *string `json:"openapi_type,omitempty"`
	// The request body that invoked this job.
	Body map[string]interface{} `json:"body,omitempty"`
}

// NewRequestContent instantiates a new RequestContent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRequestContent() *RequestContent {
	this := RequestContent{}
	return &this
}

// NewRequestContentWithDefaults instantiates a new RequestContent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRequestContentWithDefaults() *RequestContent {
	this := RequestContent{}
	return &this
}

// GetOpenapiType returns the OpenapiType field value if set, zero value otherwise.
func (o *RequestContent) GetOpenapiType() string {
	if o == nil || IsNil(o.OpenapiType) {
		var ret string
		return ret
	}
	return *o.OpenapiType
}

// GetOpenapiTypeOk returns a tuple with the OpenapiType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequestContent) GetOpenapiTypeOk() (*string, bool) {
	if o == nil || IsNil(o.OpenapiType) {
		return nil, false
	}
	return o.OpenapiType, true
}

// HasOpenapiType returns a boolean if a field has been set.
func (o *RequestContent) HasOpenapiType() bool {
	if o != nil && !IsNil(o.OpenapiType) {
		return true
	}

	return false
}

// SetOpenapiType gets a reference to the given string and assigns it to the OpenapiType field.
func (o *RequestContent) SetOpenapiType(v string) {
	o.OpenapiType = &v
}

// GetBody returns the Body field value if set, zero value otherwise.
func (o *RequestContent) GetBody() map[string]interface{} {
	if o == nil || IsNil(o.Body) {
		var ret map[string]interface{}
		return ret
	}
	return o.Body
}

// GetBodyOk returns a tuple with the Body field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequestContent) GetBodyOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Body) {
		return map[string]interface{}{}, false
	}
	return o.Body, true
}

// HasBody returns a boolean if a field has been set.
func (o *RequestContent) HasBody() bool {
	if o != nil && !IsNil(o.Body) {
		return true
	}

	return false
}

// SetBody gets a reference to the given map[string]interface{} and assigns it to the Body field.
func (o *RequestContent) SetBody(v map[string]interface{}) {
	o.Body = v
}

func (o RequestContent) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RequestContent) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.OpenapiType) {
		toSerialize["openapi_type"] = o.OpenapiType
	}
	if !IsNil(o.Body) {
		toSerialize["body"] = o.Body
	}
	return toSerialize, nil
}

type NullableRequestContent struct {
	value *RequestContent
	isSet bool
}

func (v NullableRequestContent) Get() *RequestContent {
	return v.value
}

func (v *NullableRequestContent) Set(val *RequestContent) {
	v.value = val
	v.isSet = true
}

func (v NullableRequestContent) IsSet() bool {
	return v.isSet
}

func (v *NullableRequestContent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRequestContent(val *RequestContent) *NullableRequestContent {
	return &NullableRequestContent{value: val, isSet: true}
}

func (v NullableRequestContent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRequestContent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


