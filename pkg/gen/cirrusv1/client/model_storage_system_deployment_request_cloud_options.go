/*
APEX Navigator for Multicloud Storage REST APIs

The public API definitions for APEX Navigator for Multicloud Storage

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"fmt"
)

// StorageSystemDeploymentRequestCloudOptions - struct for StorageSystemDeploymentRequestCloudOptions
type StorageSystemDeploymentRequestCloudOptions struct {
	AWSCloudOptions *AWSCloudOptions
}

// AWSCloudOptionsAsStorageSystemDeploymentRequestCloudOptions is a convenience function that returns AWSCloudOptions wrapped in StorageSystemDeploymentRequestCloudOptions
func AWSCloudOptionsAsStorageSystemDeploymentRequestCloudOptions(v *AWSCloudOptions) StorageSystemDeploymentRequestCloudOptions {
	return StorageSystemDeploymentRequestCloudOptions{
		AWSCloudOptions: v,
	}
}


// Unmarshal JSON data into one of the pointers in the struct
func (dst *StorageSystemDeploymentRequestCloudOptions) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into AWSCloudOptions
	err = newStrictDecoder(data).Decode(&dst.AWSCloudOptions)
	if err == nil {
		jsonAWSCloudOptions, _ := json.Marshal(dst.AWSCloudOptions)
		if string(jsonAWSCloudOptions) == "{}" { // empty struct
			dst.AWSCloudOptions = nil
		} else {
			match++
		}
	} else {
		dst.AWSCloudOptions = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.AWSCloudOptions = nil

		return fmt.Errorf("data matches more than one schema in oneOf(StorageSystemDeploymentRequestCloudOptions)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(StorageSystemDeploymentRequestCloudOptions)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src StorageSystemDeploymentRequestCloudOptions) MarshalJSON() ([]byte, error) {
	if src.AWSCloudOptions != nil {
		return json.Marshal(&src.AWSCloudOptions)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *StorageSystemDeploymentRequestCloudOptions) GetActualInstance() (interface{}) {
	if obj == nil {
		return nil
	}
	if obj.AWSCloudOptions != nil {
		return obj.AWSCloudOptions
	}

	// all schemas are nil
	return nil
}

type NullableStorageSystemDeploymentRequestCloudOptions struct {
	value *StorageSystemDeploymentRequestCloudOptions
	isSet bool
}

func (v NullableStorageSystemDeploymentRequestCloudOptions) Get() *StorageSystemDeploymentRequestCloudOptions {
	return v.value
}

func (v *NullableStorageSystemDeploymentRequestCloudOptions) Set(val *StorageSystemDeploymentRequestCloudOptions) {
	v.value = val
	v.isSet = true
}

func (v NullableStorageSystemDeploymentRequestCloudOptions) IsSet() bool {
	return v.isSet
}

func (v *NullableStorageSystemDeploymentRequestCloudOptions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStorageSystemDeploymentRequestCloudOptions(val *StorageSystemDeploymentRequestCloudOptions) *NullableStorageSystemDeploymentRequestCloudOptions {
	return &NullableStorageSystemDeploymentRequestCloudOptions{value: val, isSet: true}
}

func (v NullableStorageSystemDeploymentRequestCloudOptions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStorageSystemDeploymentRequestCloudOptions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


