/*
APEX Navigator for Multicloud Storage REST APIs

The public API definitions for APEX Navigator for Multicloud Storage

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the AwsTrustPolicyStatementInnerConditionBool type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AwsTrustPolicyStatementInnerConditionBool{}

// AwsTrustPolicyStatementInnerConditionBool struct for AwsTrustPolicyStatementInnerConditionBool
type AwsTrustPolicyStatementInnerConditionBool struct {
	AwsMultiFactorAuthPresent *string `json:"aws:MultiFactorAuthPresent,omitempty"`
}

// NewAwsTrustPolicyStatementInnerConditionBool instantiates a new AwsTrustPolicyStatementInnerConditionBool object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAwsTrustPolicyStatementInnerConditionBool() *AwsTrustPolicyStatementInnerConditionBool {
	this := AwsTrustPolicyStatementInnerConditionBool{}
	return &this
}

// NewAwsTrustPolicyStatementInnerConditionBoolWithDefaults instantiates a new AwsTrustPolicyStatementInnerConditionBool object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAwsTrustPolicyStatementInnerConditionBoolWithDefaults() *AwsTrustPolicyStatementInnerConditionBool {
	this := AwsTrustPolicyStatementInnerConditionBool{}
	return &this
}

// GetAwsMultiFactorAuthPresent returns the AwsMultiFactorAuthPresent field value if set, zero value otherwise.
func (o *AwsTrustPolicyStatementInnerConditionBool) GetAwsMultiFactorAuthPresent() string {
	if o == nil || IsNil(o.AwsMultiFactorAuthPresent) {
		var ret string
		return ret
	}
	return *o.AwsMultiFactorAuthPresent
}

// GetAwsMultiFactorAuthPresentOk returns a tuple with the AwsMultiFactorAuthPresent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsTrustPolicyStatementInnerConditionBool) GetAwsMultiFactorAuthPresentOk() (*string, bool) {
	if o == nil || IsNil(o.AwsMultiFactorAuthPresent) {
		return nil, false
	}
	return o.AwsMultiFactorAuthPresent, true
}

// HasAwsMultiFactorAuthPresent returns a boolean if a field has been set.
func (o *AwsTrustPolicyStatementInnerConditionBool) HasAwsMultiFactorAuthPresent() bool {
	if o != nil && !IsNil(o.AwsMultiFactorAuthPresent) {
		return true
	}

	return false
}

// SetAwsMultiFactorAuthPresent gets a reference to the given string and assigns it to the AwsMultiFactorAuthPresent field.
func (o *AwsTrustPolicyStatementInnerConditionBool) SetAwsMultiFactorAuthPresent(v string) {
	o.AwsMultiFactorAuthPresent = &v
}

func (o AwsTrustPolicyStatementInnerConditionBool) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AwsTrustPolicyStatementInnerConditionBool) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AwsMultiFactorAuthPresent) {
		toSerialize["aws:MultiFactorAuthPresent"] = o.AwsMultiFactorAuthPresent
	}
	return toSerialize, nil
}

type NullableAwsTrustPolicyStatementInnerConditionBool struct {
	value *AwsTrustPolicyStatementInnerConditionBool
	isSet bool
}

func (v NullableAwsTrustPolicyStatementInnerConditionBool) Get() *AwsTrustPolicyStatementInnerConditionBool {
	return v.value
}

func (v *NullableAwsTrustPolicyStatementInnerConditionBool) Set(val *AwsTrustPolicyStatementInnerConditionBool) {
	v.value = val
	v.isSet = true
}

func (v NullableAwsTrustPolicyStatementInnerConditionBool) IsSet() bool {
	return v.isSet
}

func (v *NullableAwsTrustPolicyStatementInnerConditionBool) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAwsTrustPolicyStatementInnerConditionBool(val *AwsTrustPolicyStatementInnerConditionBool) *NullableAwsTrustPolicyStatementInnerConditionBool {
	return &NullableAwsTrustPolicyStatementInnerConditionBool{value: val, isSet: true}
}

func (v NullableAwsTrustPolicyStatementInnerConditionBool) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAwsTrustPolicyStatementInnerConditionBool) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


