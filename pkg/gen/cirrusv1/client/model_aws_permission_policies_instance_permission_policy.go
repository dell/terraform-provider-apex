/*
APEX Navigator for Multicloud Storage REST APIs

The public API definitions for APEX Navigator for Multicloud Storage

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the AwsPermissionPoliciesInstancePermissionPolicy type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AwsPermissionPoliciesInstancePermissionPolicy{}

// AwsPermissionPoliciesInstancePermissionPolicy struct for AwsPermissionPoliciesInstancePermissionPolicy
type AwsPermissionPoliciesInstancePermissionPolicy struct {
	Version *string `json:"Version,omitempty"`
	Statement []AwsPermissionPoliciesInstancePermissionPolicyStatementInner `json:"Statement,omitempty"`
}

// NewAwsPermissionPoliciesInstancePermissionPolicy instantiates a new AwsPermissionPoliciesInstancePermissionPolicy object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAwsPermissionPoliciesInstancePermissionPolicy() *AwsPermissionPoliciesInstancePermissionPolicy {
	this := AwsPermissionPoliciesInstancePermissionPolicy{}
	return &this
}

// NewAwsPermissionPoliciesInstancePermissionPolicyWithDefaults instantiates a new AwsPermissionPoliciesInstancePermissionPolicy object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAwsPermissionPoliciesInstancePermissionPolicyWithDefaults() *AwsPermissionPoliciesInstancePermissionPolicy {
	this := AwsPermissionPoliciesInstancePermissionPolicy{}
	return &this
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *AwsPermissionPoliciesInstancePermissionPolicy) GetVersion() string {
	if o == nil || IsNil(o.Version) {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsPermissionPoliciesInstancePermissionPolicy) GetVersionOk() (*string, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *AwsPermissionPoliciesInstancePermissionPolicy) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *AwsPermissionPoliciesInstancePermissionPolicy) SetVersion(v string) {
	o.Version = &v
}

// GetStatement returns the Statement field value if set, zero value otherwise.
func (o *AwsPermissionPoliciesInstancePermissionPolicy) GetStatement() []AwsPermissionPoliciesInstancePermissionPolicyStatementInner {
	if o == nil || IsNil(o.Statement) {
		var ret []AwsPermissionPoliciesInstancePermissionPolicyStatementInner
		return ret
	}
	return o.Statement
}

// GetStatementOk returns a tuple with the Statement field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsPermissionPoliciesInstancePermissionPolicy) GetStatementOk() ([]AwsPermissionPoliciesInstancePermissionPolicyStatementInner, bool) {
	if o == nil || IsNil(o.Statement) {
		return nil, false
	}
	return o.Statement, true
}

// HasStatement returns a boolean if a field has been set.
func (o *AwsPermissionPoliciesInstancePermissionPolicy) HasStatement() bool {
	if o != nil && !IsNil(o.Statement) {
		return true
	}

	return false
}

// SetStatement gets a reference to the given []AwsPermissionPoliciesInstancePermissionPolicyStatementInner and assigns it to the Statement field.
func (o *AwsPermissionPoliciesInstancePermissionPolicy) SetStatement(v []AwsPermissionPoliciesInstancePermissionPolicyStatementInner) {
	o.Statement = v
}

func (o AwsPermissionPoliciesInstancePermissionPolicy) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AwsPermissionPoliciesInstancePermissionPolicy) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Version) {
		toSerialize["Version"] = o.Version
	}
	if !IsNil(o.Statement) {
		toSerialize["Statement"] = o.Statement
	}
	return toSerialize, nil
}

type NullableAwsPermissionPoliciesInstancePermissionPolicy struct {
	value *AwsPermissionPoliciesInstancePermissionPolicy
	isSet bool
}

func (v NullableAwsPermissionPoliciesInstancePermissionPolicy) Get() *AwsPermissionPoliciesInstancePermissionPolicy {
	return v.value
}

func (v *NullableAwsPermissionPoliciesInstancePermissionPolicy) Set(val *AwsPermissionPoliciesInstancePermissionPolicy) {
	v.value = val
	v.isSet = true
}

func (v NullableAwsPermissionPoliciesInstancePermissionPolicy) IsSet() bool {
	return v.isSet
}

func (v *NullableAwsPermissionPoliciesInstancePermissionPolicy) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAwsPermissionPoliciesInstancePermissionPolicy(val *AwsPermissionPoliciesInstancePermissionPolicy) *NullableAwsPermissionPoliciesInstancePermissionPolicy {
	return &NullableAwsPermissionPoliciesInstancePermissionPolicy{value: val, isSet: true}
}

func (v NullableAwsPermissionPoliciesInstancePermissionPolicy) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAwsPermissionPoliciesInstancePermissionPolicy) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


