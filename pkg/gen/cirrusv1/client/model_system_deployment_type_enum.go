/*
APEX Navigator for Multicloud Storage REST APIs

The public API definitions for APEX Navigator for Multicloud Storage

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"fmt"
)

// SystemDeploymentTypeEnum System deployment types (e.g. PUBLIC_CLOUD)
type SystemDeploymentTypeEnum string

// List of SystemDeploymentTypeEnum
const (
	SYSTEMDEPLOYMENTTYPEENUM_ONPREM SystemDeploymentTypeEnum = "ONPREM"
	SYSTEMDEPLOYMENTTYPEENUM_PUBLIC_CLOUD SystemDeploymentTypeEnum = "PUBLIC_CLOUD"
)

// All allowed values of SystemDeploymentTypeEnum enum
var AllowedSystemDeploymentTypeEnumEnumValues = []SystemDeploymentTypeEnum{
	"ONPREM",
	"PUBLIC_CLOUD",
}

func (v *SystemDeploymentTypeEnum) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := SystemDeploymentTypeEnum(value)
	for _, existing := range AllowedSystemDeploymentTypeEnumEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid SystemDeploymentTypeEnum", value)
}

// NewSystemDeploymentTypeEnumFromValue returns a pointer to a valid SystemDeploymentTypeEnum
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewSystemDeploymentTypeEnumFromValue(v string) (*SystemDeploymentTypeEnum, error) {
	ev := SystemDeploymentTypeEnum(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for SystemDeploymentTypeEnum: valid values are %v", v, AllowedSystemDeploymentTypeEnumEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v SystemDeploymentTypeEnum) IsValid() bool {
	for _, existing := range AllowedSystemDeploymentTypeEnumEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to SystemDeploymentTypeEnum value
func (v SystemDeploymentTypeEnum) Ptr() *SystemDeploymentTypeEnum {
	return &v
}

type NullableSystemDeploymentTypeEnum struct {
	value *SystemDeploymentTypeEnum
	isSet bool
}

func (v NullableSystemDeploymentTypeEnum) Get() *SystemDeploymentTypeEnum {
	return v.value
}

func (v *NullableSystemDeploymentTypeEnum) Set(val *SystemDeploymentTypeEnum) {
	v.value = val
	v.isSet = true
}

func (v NullableSystemDeploymentTypeEnum) IsSet() bool {
	return v.isSet
}

func (v *NullableSystemDeploymentTypeEnum) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSystemDeploymentTypeEnum(val *SystemDeploymentTypeEnum) *NullableSystemDeploymentTypeEnum {
	return &NullableSystemDeploymentTypeEnum{value: val, isSet: true}
}

func (v NullableSystemDeploymentTypeEnum) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSystemDeploymentTypeEnum) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

