/*
APEX Navigator for Multicloud Storage REST APIs

The public API definitions for APEX Navigator for Multicloud Storage

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the AwsPermissionPoliciesInstancePermissionPolicyStatementInnerConditionStringLike type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AwsPermissionPoliciesInstancePermissionPolicyStatementInnerConditionStringLike{}

// AwsPermissionPoliciesInstancePermissionPolicyStatementInnerConditionStringLike struct for AwsPermissionPoliciesInstancePermissionPolicyStatementInnerConditionStringLike
type AwsPermissionPoliciesInstancePermissionPolicyStatementInnerConditionStringLike struct {
	IamAWSServiceName []string `json:"iam:AWSServiceName,omitempty"`
}

// NewAwsPermissionPoliciesInstancePermissionPolicyStatementInnerConditionStringLike instantiates a new AwsPermissionPoliciesInstancePermissionPolicyStatementInnerConditionStringLike object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAwsPermissionPoliciesInstancePermissionPolicyStatementInnerConditionStringLike() *AwsPermissionPoliciesInstancePermissionPolicyStatementInnerConditionStringLike {
	this := AwsPermissionPoliciesInstancePermissionPolicyStatementInnerConditionStringLike{}
	return &this
}

// NewAwsPermissionPoliciesInstancePermissionPolicyStatementInnerConditionStringLikeWithDefaults instantiates a new AwsPermissionPoliciesInstancePermissionPolicyStatementInnerConditionStringLike object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAwsPermissionPoliciesInstancePermissionPolicyStatementInnerConditionStringLikeWithDefaults() *AwsPermissionPoliciesInstancePermissionPolicyStatementInnerConditionStringLike {
	this := AwsPermissionPoliciesInstancePermissionPolicyStatementInnerConditionStringLike{}
	return &this
}

// GetIamAWSServiceName returns the IamAWSServiceName field value if set, zero value otherwise.
func (o *AwsPermissionPoliciesInstancePermissionPolicyStatementInnerConditionStringLike) GetIamAWSServiceName() []string {
	if o == nil || IsNil(o.IamAWSServiceName) {
		var ret []string
		return ret
	}
	return o.IamAWSServiceName
}

// GetIamAWSServiceNameOk returns a tuple with the IamAWSServiceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsPermissionPoliciesInstancePermissionPolicyStatementInnerConditionStringLike) GetIamAWSServiceNameOk() ([]string, bool) {
	if o == nil || IsNil(o.IamAWSServiceName) {
		return nil, false
	}
	return o.IamAWSServiceName, true
}

// HasIamAWSServiceName returns a boolean if a field has been set.
func (o *AwsPermissionPoliciesInstancePermissionPolicyStatementInnerConditionStringLike) HasIamAWSServiceName() bool {
	if o != nil && !IsNil(o.IamAWSServiceName) {
		return true
	}

	return false
}

// SetIamAWSServiceName gets a reference to the given []string and assigns it to the IamAWSServiceName field.
func (o *AwsPermissionPoliciesInstancePermissionPolicyStatementInnerConditionStringLike) SetIamAWSServiceName(v []string) {
	o.IamAWSServiceName = v
}

func (o AwsPermissionPoliciesInstancePermissionPolicyStatementInnerConditionStringLike) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AwsPermissionPoliciesInstancePermissionPolicyStatementInnerConditionStringLike) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.IamAWSServiceName) {
		toSerialize["iam:AWSServiceName"] = o.IamAWSServiceName
	}
	return toSerialize, nil
}

type NullableAwsPermissionPoliciesInstancePermissionPolicyStatementInnerConditionStringLike struct {
	value *AwsPermissionPoliciesInstancePermissionPolicyStatementInnerConditionStringLike
	isSet bool
}

func (v NullableAwsPermissionPoliciesInstancePermissionPolicyStatementInnerConditionStringLike) Get() *AwsPermissionPoliciesInstancePermissionPolicyStatementInnerConditionStringLike {
	return v.value
}

func (v *NullableAwsPermissionPoliciesInstancePermissionPolicyStatementInnerConditionStringLike) Set(val *AwsPermissionPoliciesInstancePermissionPolicyStatementInnerConditionStringLike) {
	v.value = val
	v.isSet = true
}

func (v NullableAwsPermissionPoliciesInstancePermissionPolicyStatementInnerConditionStringLike) IsSet() bool {
	return v.isSet
}

func (v *NullableAwsPermissionPoliciesInstancePermissionPolicyStatementInnerConditionStringLike) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAwsPermissionPoliciesInstancePermissionPolicyStatementInnerConditionStringLike(val *AwsPermissionPoliciesInstancePermissionPolicyStatementInnerConditionStringLike) *NullableAwsPermissionPoliciesInstancePermissionPolicyStatementInnerConditionStringLike {
	return &NullableAwsPermissionPoliciesInstancePermissionPolicyStatementInnerConditionStringLike{value: val, isSet: true}
}

func (v NullableAwsPermissionPoliciesInstancePermissionPolicyStatementInnerConditionStringLike) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAwsPermissionPoliciesInstancePermissionPolicyStatementInnerConditionStringLike) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


