/*
APEX Navigator for Multicloud Storage REST APIs

The public API definitions for APEX Navigator for Multicloud Storage

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"fmt"
)

// StorageSystemDeploymentRequestStorageOptions - struct for StorageSystemDeploymentRequestStorageOptions
type StorageSystemDeploymentRequestStorageOptions struct {
	PowerFlexStorageOptions *PowerFlexStorageOptions
}

// PowerFlexStorageOptionsAsStorageSystemDeploymentRequestStorageOptions is a convenience function that returns PowerFlexStorageOptions wrapped in StorageSystemDeploymentRequestStorageOptions
func PowerFlexStorageOptionsAsStorageSystemDeploymentRequestStorageOptions(v *PowerFlexStorageOptions) StorageSystemDeploymentRequestStorageOptions {
	return StorageSystemDeploymentRequestStorageOptions{
		PowerFlexStorageOptions: v,
	}
}


// Unmarshal JSON data into one of the pointers in the struct
func (dst *StorageSystemDeploymentRequestStorageOptions) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into PowerFlexStorageOptions
	err = newStrictDecoder(data).Decode(&dst.PowerFlexStorageOptions)
	if err == nil {
		jsonPowerFlexStorageOptions, _ := json.Marshal(dst.PowerFlexStorageOptions)
		if string(jsonPowerFlexStorageOptions) == "{}" { // empty struct
			dst.PowerFlexStorageOptions = nil
		} else {
			match++
		}
	} else {
		dst.PowerFlexStorageOptions = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.PowerFlexStorageOptions = nil

		return fmt.Errorf("data matches more than one schema in oneOf(StorageSystemDeploymentRequestStorageOptions)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(StorageSystemDeploymentRequestStorageOptions)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src StorageSystemDeploymentRequestStorageOptions) MarshalJSON() ([]byte, error) {
	if src.PowerFlexStorageOptions != nil {
		return json.Marshal(&src.PowerFlexStorageOptions)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *StorageSystemDeploymentRequestStorageOptions) GetActualInstance() (interface{}) {
	if obj == nil {
		return nil
	}
	if obj.PowerFlexStorageOptions != nil {
		return obj.PowerFlexStorageOptions
	}

	// all schemas are nil
	return nil
}

type NullableStorageSystemDeploymentRequestStorageOptions struct {
	value *StorageSystemDeploymentRequestStorageOptions
	isSet bool
}

func (v NullableStorageSystemDeploymentRequestStorageOptions) Get() *StorageSystemDeploymentRequestStorageOptions {
	return v.value
}

func (v *NullableStorageSystemDeploymentRequestStorageOptions) Set(val *StorageSystemDeploymentRequestStorageOptions) {
	v.value = val
	v.isSet = true
}

func (v NullableStorageSystemDeploymentRequestStorageOptions) IsSet() bool {
	return v.isSet
}

func (v *NullableStorageSystemDeploymentRequestStorageOptions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStorageSystemDeploymentRequestStorageOptions(val *StorageSystemDeploymentRequestStorageOptions) *NullableStorageSystemDeploymentRequestStorageOptions {
	return &NullableStorageSystemDeploymentRequestStorageOptions{value: val, isSet: true}
}

func (v NullableStorageSystemDeploymentRequestStorageOptions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStorageSystemDeploymentRequestStorageOptions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


