/*
 * APEX Navigator for Multicloud Storage REST APIs
 *
 * The public API definitions for APEX Navigator for Multicloud Storage
 *
 * API version: 1.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package main

import (
	"log"
	"net/http"

	server "eos2git.cec.lab.emc.com/CIRRUS/cirrus-terraform-providers/pkg/gen/cirrusv1/server/go"
)

func main() {
	log.Printf("Server started")

	AwsAccountsAPIService := server.NewAwsAccountsAPIService()
	AwsAccountsAPIController := server.NewAwsAccountsAPIController(AwsAccountsAPIService)

	AwsPermissionPoliciesAPIService := server.NewAwsPermissionPoliciesAPIService()
	AwsPermissionPoliciesAPIController := server.NewAwsPermissionPoliciesAPIController(AwsPermissionPoliciesAPIService)

	ClonesAPIService := server.NewClonesAPIService()
	ClonesAPIController := server.NewClonesAPIController(ClonesAPIService)

	EntitlementsAPIService := server.NewEntitlementsAPIService()
	EntitlementsAPIController := server.NewEntitlementsAPIController(EntitlementsAPIService)

	HostsAPIService := server.NewHostsAPIService()
	HostsAPIController := server.NewHostsAPIController(HostsAPIService)

	LicensesAPIService := server.NewLicensesAPIService()
	LicensesAPIController := server.NewLicensesAPIController(LicensesAPIService)

	MobilityGroupsAPIService := server.NewMobilityGroupsAPIService()
	MobilityGroupsAPIController := server.NewMobilityGroupsAPIController(MobilityGroupsAPIService)

	MobilityTargetsAPIService := server.NewMobilityTargetsAPIService()
	MobilityTargetsAPIController := server.NewMobilityTargetsAPIController(MobilityTargetsAPIService)

	PoolsAPIService := server.NewPoolsAPIService()
	PoolsAPIController := server.NewPoolsAPIController(PoolsAPIService)

	StorageProductOptionsAPIService := server.NewStorageProductOptionsAPIService()
	StorageProductOptionsAPIController := server.NewStorageProductOptionsAPIController(StorageProductOptionsAPIService)

	StorageProductsAPIService := server.NewStorageProductsAPIService()
	StorageProductsAPIController := server.NewStorageProductsAPIController(StorageProductsAPIService)

	StorageSystemTokensAPIService := server.NewStorageSystemTokensAPIService()
	StorageSystemTokensAPIController := server.NewStorageSystemTokensAPIController(StorageSystemTokensAPIService)

	StorageSystemsAPIService := server.NewStorageSystemsAPIService()
	StorageSystemsAPIController := server.NewStorageSystemsAPIController(StorageSystemsAPIService)

	VolumesAPIService := server.NewVolumesAPIService()
	VolumesAPIController := server.NewVolumesAPIController(VolumesAPIService)

	router := server.NewRouter(AwsAccountsAPIController, AwsPermissionPoliciesAPIController, ClonesAPIController, EntitlementsAPIController, HostsAPIController, LicensesAPIController, MobilityGroupsAPIController, MobilityTargetsAPIController, PoolsAPIController, StorageProductOptionsAPIController, StorageProductsAPIController, StorageSystemTokensAPIController, StorageSystemsAPIController, VolumesAPIController)

	log.Fatal(http.ListenAndServe(":8080", router))
}
