/*
 * APEX Navigator for Multicloud Storage REST APIs
 *
 * The public API definitions for APEX Navigator for Multicloud Storage
 *
 * API version: 1.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package server


import (
	"fmt"
)


// CloudProviderEnum : Enum for all the supported cloud providers * AWS - Amazon Web Services 
type CloudProviderEnum string

// List of CloudProviderEnum
const (
	CLOUDPROVIDERENUM_AWS CloudProviderEnum = "AWS"
)

// AllowedCloudProviderEnumEnumValues is all the allowed values of CloudProviderEnum enum
var AllowedCloudProviderEnumEnumValues = []CloudProviderEnum{
	"AWS",
}

// validCloudProviderEnumEnumValue provides a map of CloudProviderEnums for fast verification of use input
var validCloudProviderEnumEnumValues = map[CloudProviderEnum]struct{}{
	"AWS": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v CloudProviderEnum) IsValid() bool {
	_, ok := validCloudProviderEnumEnumValues[v]
	return ok
}

// NewCloudProviderEnumFromValue returns a pointer to a valid CloudProviderEnum
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewCloudProviderEnumFromValue(v string) (CloudProviderEnum, error) {
	ev := CloudProviderEnum(v)
	if ev.IsValid() {
		return ev, nil
	} else {
		return "", fmt.Errorf("invalid value '%v' for CloudProviderEnum: valid values are %v", v, AllowedCloudProviderEnumEnumValues)
	}
}



// AssertCloudProviderEnumRequired checks if the required fields are not zero-ed
func AssertCloudProviderEnumRequired(obj CloudProviderEnum) error {
	return nil
}

// AssertCloudProviderEnumConstraints checks if the values respects the defined constraints
func AssertCloudProviderEnumConstraints(obj CloudProviderEnum) error {
	return nil
}
