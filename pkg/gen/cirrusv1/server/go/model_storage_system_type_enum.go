/*
 * APEX Navigator for Multicloud Storage REST APIs
 *
 * The public API definitions for APEX Navigator for Multicloud Storage
 *
 * API version: 1.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package server


import (
	"fmt"
)


// StorageSystemTypeEnum : The source system type (e.g.: POWERFLEX)
type StorageSystemTypeEnum string

// List of StorageSystemTypeEnum
const (
	STORAGESYSTEMTYPEENUM_POWERFLEX StorageSystemTypeEnum = "POWERFLEX"
)

// AllowedStorageSystemTypeEnumEnumValues is all the allowed values of StorageSystemTypeEnum enum
var AllowedStorageSystemTypeEnumEnumValues = []StorageSystemTypeEnum{
	"POWERFLEX",
}

// validStorageSystemTypeEnumEnumValue provides a map of StorageSystemTypeEnums for fast verification of use input
var validStorageSystemTypeEnumEnumValues = map[StorageSystemTypeEnum]struct{}{
	"POWERFLEX": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v StorageSystemTypeEnum) IsValid() bool {
	_, ok := validStorageSystemTypeEnumEnumValues[v]
	return ok
}

// NewStorageSystemTypeEnumFromValue returns a pointer to a valid StorageSystemTypeEnum
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewStorageSystemTypeEnumFromValue(v string) (StorageSystemTypeEnum, error) {
	ev := StorageSystemTypeEnum(v)
	if ev.IsValid() {
		return ev, nil
	} else {
		return "", fmt.Errorf("invalid value '%v' for StorageSystemTypeEnum: valid values are %v", v, AllowedStorageSystemTypeEnumEnumValues)
	}
}



// AssertStorageSystemTypeEnumRequired checks if the required fields are not zero-ed
func AssertStorageSystemTypeEnumRequired(obj StorageSystemTypeEnum) error {
	return nil
}

// AssertStorageSystemTypeEnumConstraints checks if the values respects the defined constraints
func AssertStorageSystemTypeEnumConstraints(obj StorageSystemTypeEnum) error {
	return nil
}
