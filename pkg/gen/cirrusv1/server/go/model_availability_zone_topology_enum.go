/*
 * APEX Navigator for Multicloud Storage REST APIs
 *
 * The public API definitions for APEX Navigator for Multicloud Storage
 *
 * API version: 1.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package server


import (
	"fmt"
)


// AvailabilityZoneTopologyEnum : This enum represents all the availability zone topology * SINGLE_AVAILABILITY_ZONE * MULTIPLE_AVAILABILITY_ZONE 
type AvailabilityZoneTopologyEnum string

// List of AvailabilityZoneTopologyEnum
const (
	AVAILABILITYZONETOPOLOGYENUM_SINGLE_AVAILABILITY_ZONE AvailabilityZoneTopologyEnum = "SINGLE_AVAILABILITY_ZONE"
	AVAILABILITYZONETOPOLOGYENUM_MULTIPLE_AVAILABILITY_ZONE AvailabilityZoneTopologyEnum = "MULTIPLE_AVAILABILITY_ZONE"
)

// AllowedAvailabilityZoneTopologyEnumEnumValues is all the allowed values of AvailabilityZoneTopologyEnum enum
var AllowedAvailabilityZoneTopologyEnumEnumValues = []AvailabilityZoneTopologyEnum{
	"SINGLE_AVAILABILITY_ZONE",
	"MULTIPLE_AVAILABILITY_ZONE",
}

// validAvailabilityZoneTopologyEnumEnumValue provides a map of AvailabilityZoneTopologyEnums for fast verification of use input
var validAvailabilityZoneTopologyEnumEnumValues = map[AvailabilityZoneTopologyEnum]struct{}{
	"SINGLE_AVAILABILITY_ZONE": {},
	"MULTIPLE_AVAILABILITY_ZONE": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v AvailabilityZoneTopologyEnum) IsValid() bool {
	_, ok := validAvailabilityZoneTopologyEnumEnumValues[v]
	return ok
}

// NewAvailabilityZoneTopologyEnumFromValue returns a pointer to a valid AvailabilityZoneTopologyEnum
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewAvailabilityZoneTopologyEnumFromValue(v string) (AvailabilityZoneTopologyEnum, error) {
	ev := AvailabilityZoneTopologyEnum(v)
	if ev.IsValid() {
		return ev, nil
	} else {
		return "", fmt.Errorf("invalid value '%v' for AvailabilityZoneTopologyEnum: valid values are %v", v, AllowedAvailabilityZoneTopologyEnumEnumValues)
	}
}



// AssertAvailabilityZoneTopologyEnumRequired checks if the required fields are not zero-ed
func AssertAvailabilityZoneTopologyEnumRequired(obj AvailabilityZoneTopologyEnum) error {
	return nil
}

// AssertAvailabilityZoneTopologyEnumConstraints checks if the values respects the defined constraints
func AssertAvailabilityZoneTopologyEnumConstraints(obj AvailabilityZoneTopologyEnum) error {
	return nil
}
