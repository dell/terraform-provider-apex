/*
 * APEX Navigator for Multicloud Storage REST APIs
 *
 * The public API definitions for APEX Navigator for Multicloud Storage
 *
 * API version: 1.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package server


import (
	"fmt"
)


// TierEnum : Enum for all the supported tier for given storage product. * BALANCED * PERFORMANCE_OPTIMIZED 
type TierEnum string

// List of TierEnum
const (
	TIERENUM_BALANCED TierEnum = "BALANCED"
	TIERENUM_PERFORMANCE_OPTIMIZED TierEnum = "PERFORMANCE_OPTIMIZED"
)

// AllowedTierEnumEnumValues is all the allowed values of TierEnum enum
var AllowedTierEnumEnumValues = []TierEnum{
	"BALANCED",
	"PERFORMANCE_OPTIMIZED",
}

// validTierEnumEnumValue provides a map of TierEnums for fast verification of use input
var validTierEnumEnumValues = map[TierEnum]struct{}{
	"BALANCED": {},
	"PERFORMANCE_OPTIMIZED": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v TierEnum) IsValid() bool {
	_, ok := validTierEnumEnumValues[v]
	return ok
}

// NewTierEnumFromValue returns a pointer to a valid TierEnum
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewTierEnumFromValue(v string) (TierEnum, error) {
	ev := TierEnum(v)
	if ev.IsValid() {
		return ev, nil
	} else {
		return "", fmt.Errorf("invalid value '%v' for TierEnum: valid values are %v", v, AllowedTierEnumEnumValues)
	}
}



// AssertTierEnumRequired checks if the required fields are not zero-ed
func AssertTierEnumRequired(obj TierEnum) error {
	return nil
}

// AssertTierEnumConstraints checks if the values respects the defined constraints
func AssertTierEnumConstraints(obj TierEnum) error {
	return nil
}
