/*
 * APEX Navigator for Multicloud Storage REST APIs
 *
 * The public API definitions for APEX Navigator for Multicloud Storage
 *
 * API version: 1.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package server




// StorageSystemDeploymentRequest - Storage system deployment request input object
type StorageSystemDeploymentRequest struct {

	// Unique name to identify the deployed system
	Name string `json:"name"`

	CloudOptions StorageSystemDeploymentRequestCloudOptions `json:"cloud_options"`

	StorageOptions StorageSystemDeploymentRequestStorageOptions `json:"storage_options"`

	// By setting this option to true, you, on your behalf of your company, agree the following will apply:  Your evaluation of Dell APEX Navigator for Multicloud is subject to and governed by Dell’s Cloud Service Offering Agreement (https://www.dell.com/learn/us/en/uscorp1/legal_terms-conditions_dellwebpage/csoa-agreement) and  the Dell APEX Navigator for Multicloud Storage Service Offering Description (https://www.dell.com/learn/us/en/uscorp1/apex-services).  Your evaluation of Dell APEX Block Storage for AWS is subject to and governed by Dell’s Software Evaluation Agreement  (https://vault.pactsafe.io/s/3cb1f636-b99f-47ab-ad13-3ce168930a55/legal.html?g=38113#contract-s12zpzeii).  Your evaluation of Dell APEX Navigator for Multicloud will be available for 90 days free of charge. At the end of the evaluation, the Dell APEX Navigator for Multicloud Storage evaluation service and associated data will remain accessible, subject to the terms identified in this paragraph, however, certain features will be limited until you order a new subscription. Payment for any required public cloud service provider infrastructure requirements is your company’s responsibility.
	IsTermsAndConditionsAgreed bool `json:"is_terms_and_conditions_agreed"`
}

// AssertStorageSystemDeploymentRequestRequired checks if the required fields are not zero-ed
func AssertStorageSystemDeploymentRequestRequired(obj StorageSystemDeploymentRequest) error {
	elements := map[string]interface{}{
		"name": obj.Name,
		"cloud_options": obj.CloudOptions,
		"storage_options": obj.StorageOptions,
		"is_terms_and_conditions_agreed": obj.IsTermsAndConditionsAgreed,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	if err := AssertStorageSystemDeploymentRequestCloudOptionsRequired(obj.CloudOptions); err != nil {
		return err
	}
	if err := AssertStorageSystemDeploymentRequestStorageOptionsRequired(obj.StorageOptions); err != nil {
		return err
	}
	return nil
}

// AssertStorageSystemDeploymentRequestConstraints checks if the values respects the defined constraints
func AssertStorageSystemDeploymentRequestConstraints(obj StorageSystemDeploymentRequest) error {
	return nil
}
