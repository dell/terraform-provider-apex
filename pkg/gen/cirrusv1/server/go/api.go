/*
 * APEX Navigator for Multicloud Storage REST APIs
 *
 * The public API definitions for APEX Navigator for Multicloud Storage
 *
 * API version: 1.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package server

import (
	"context"
	"net/http"
)



// AwsAccountsAPIRouter defines the required methods for binding the api requests to a responses for the AwsAccountsAPI
// The AwsAccountsAPIRouter implementation should parse necessary information from the http request,
// pass the data to a AwsAccountsAPIServicer to perform the required actions, then write the service results to the http response.
type AwsAccountsAPIRouter interface { 
	AwsAccountsCollection(http.ResponseWriter, *http.Request)
	AwsAccountsCreate(http.ResponseWriter, *http.Request)
	AwsAccountsDelete(http.ResponseWriter, *http.Request)
	AwsAccountsGenerateTrustPolicy(http.ResponseWriter, *http.Request)
	AwsAccountsInstance(http.ResponseWriter, *http.Request)
	AwsAccountsModify(http.ResponseWriter, *http.Request)
}
// AwsPermissionPoliciesAPIRouter defines the required methods for binding the api requests to a responses for the AwsPermissionPoliciesAPI
// The AwsPermissionPoliciesAPIRouter implementation should parse necessary information from the http request,
// pass the data to a AwsPermissionPoliciesAPIServicer to perform the required actions, then write the service results to the http response.
type AwsPermissionPoliciesAPIRouter interface { 
	AwsPermissionPoliciesCollection(http.ResponseWriter, *http.Request)
	AwsPermissionPoliciesInstance(http.ResponseWriter, *http.Request)
}
// ClonesAPIRouter defines the required methods for binding the api requests to a responses for the ClonesAPI
// The ClonesAPIRouter implementation should parse necessary information from the http request,
// pass the data to a ClonesAPIServicer to perform the required actions, then write the service results to the http response.
type ClonesAPIRouter interface { 
	ClonesCollection(http.ResponseWriter, *http.Request)
	ClonesCreate(http.ResponseWriter, *http.Request)
	ClonesDelete(http.ResponseWriter, *http.Request)
	ClonesInstance(http.ResponseWriter, *http.Request)
	ClonesMap(http.ResponseWriter, *http.Request)
	ClonesModify(http.ResponseWriter, *http.Request)
	ClonesRefresh(http.ResponseWriter, *http.Request)
	ClonesUnmap(http.ResponseWriter, *http.Request)
}
// EntitlementsAPIRouter defines the required methods for binding the api requests to a responses for the EntitlementsAPI
// The EntitlementsAPIRouter implementation should parse necessary information from the http request,
// pass the data to a EntitlementsAPIServicer to perform the required actions, then write the service results to the http response.
type EntitlementsAPIRouter interface { 
	EntitlementsCollection(http.ResponseWriter, *http.Request)
	EntitlementsInstance(http.ResponseWriter, *http.Request)
}
// HostsAPIRouter defines the required methods for binding the api requests to a responses for the HostsAPI
// The HostsAPIRouter implementation should parse necessary information from the http request,
// pass the data to a HostsAPIServicer to perform the required actions, then write the service results to the http response.
type HostsAPIRouter interface { 
	HostsCollection(http.ResponseWriter, *http.Request)
	HostsInstance(http.ResponseWriter, *http.Request)
}
// LicensesAPIRouter defines the required methods for binding the api requests to a responses for the LicensesAPI
// The LicensesAPIRouter implementation should parse necessary information from the http request,
// pass the data to a LicensesAPIServicer to perform the required actions, then write the service results to the http response.
type LicensesAPIRouter interface { 
	LicensesCollection(http.ResponseWriter, *http.Request)
	LicensesInstance(http.ResponseWriter, *http.Request)
}
// MobilityGroupsAPIRouter defines the required methods for binding the api requests to a responses for the MobilityGroupsAPI
// The MobilityGroupsAPIRouter implementation should parse necessary information from the http request,
// pass the data to a MobilityGroupsAPIServicer to perform the required actions, then write the service results to the http response.
type MobilityGroupsAPIRouter interface { 
	MobilityGroupsCollection(http.ResponseWriter, *http.Request)
	MobilityGroupsCopy(http.ResponseWriter, *http.Request)
	MobilityGroupsCreate(http.ResponseWriter, *http.Request)
	MobilityGroupsDelete(http.ResponseWriter, *http.Request)
	MobilityGroupsInstance(http.ResponseWriter, *http.Request)
	MobilityGroupsModify(http.ResponseWriter, *http.Request)
}
// MobilityTargetsAPIRouter defines the required methods for binding the api requests to a responses for the MobilityTargetsAPI
// The MobilityTargetsAPIRouter implementation should parse necessary information from the http request,
// pass the data to a MobilityTargetsAPIServicer to perform the required actions, then write the service results to the http response.
type MobilityTargetsAPIRouter interface { 
	MobilityTargetsCollection(http.ResponseWriter, *http.Request)
	MobilityTargetsCreate(http.ResponseWriter, *http.Request)
	MobilityTargetsDelete(http.ResponseWriter, *http.Request)
	MobilityTargetsInstance(http.ResponseWriter, *http.Request)
	MobilityTargetsModify(http.ResponseWriter, *http.Request)
}
// PoolsAPIRouter defines the required methods for binding the api requests to a responses for the PoolsAPI
// The PoolsAPIRouter implementation should parse necessary information from the http request,
// pass the data to a PoolsAPIServicer to perform the required actions, then write the service results to the http response.
type PoolsAPIRouter interface { 
	PoolsCollection(http.ResponseWriter, *http.Request)
	PoolsInstance(http.ResponseWriter, *http.Request)
}
// StorageProductOptionsAPIRouter defines the required methods for binding the api requests to a responses for the StorageProductOptionsAPI
// The StorageProductOptionsAPIRouter implementation should parse necessary information from the http request,
// pass the data to a StorageProductOptionsAPIServicer to perform the required actions, then write the service results to the http response.
type StorageProductOptionsAPIRouter interface { 
	StorageProductOptionsCollection(http.ResponseWriter, *http.Request)
}
// StorageProductsAPIRouter defines the required methods for binding the api requests to a responses for the StorageProductsAPI
// The StorageProductsAPIRouter implementation should parse necessary information from the http request,
// pass the data to a StorageProductsAPIServicer to perform the required actions, then write the service results to the http response.
type StorageProductsAPIRouter interface { 
	StorageProductsCollection(http.ResponseWriter, *http.Request)
}
// StorageSystemTokensAPIRouter defines the required methods for binding the api requests to a responses for the StorageSystemTokensAPI
// The StorageSystemTokensAPIRouter implementation should parse necessary information from the http request,
// pass the data to a StorageSystemTokensAPIServicer to perform the required actions, then write the service results to the http response.
type StorageSystemTokensAPIRouter interface { 
	StorageSystemTokensCreate(http.ResponseWriter, *http.Request)
	StorageSystemTokensInstance(http.ResponseWriter, *http.Request)
	StorageSystemTokensModify(http.ResponseWriter, *http.Request)
}
// StorageSystemsAPIRouter defines the required methods for binding the api requests to a responses for the StorageSystemsAPI
// The StorageSystemsAPIRouter implementation should parse necessary information from the http request,
// pass the data to a StorageSystemsAPIServicer to perform the required actions, then write the service results to the http response.
type StorageSystemsAPIRouter interface { 
	StorageSystemsCollection(http.ResponseWriter, *http.Request)
	StorageSystemsCreate(http.ResponseWriter, *http.Request)
	StorageSystemsDelete(http.ResponseWriter, *http.Request)
	StorageSystemsFinalizeTrust(http.ResponseWriter, *http.Request)
	StorageSystemsInitializeTrust(http.ResponseWriter, *http.Request)
	StorageSystemsInstance(http.ResponseWriter, *http.Request)
}
// VolumesAPIRouter defines the required methods for binding the api requests to a responses for the VolumesAPI
// The VolumesAPIRouter implementation should parse necessary information from the http request,
// pass the data to a VolumesAPIServicer to perform the required actions, then write the service results to the http response.
type VolumesAPIRouter interface { 
	VolumesCollection(http.ResponseWriter, *http.Request)
	VolumesInstance(http.ResponseWriter, *http.Request)
}


// AwsAccountsAPIServicer defines the api actions for the AwsAccountsAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type AwsAccountsAPIServicer interface { 
	AwsAccountsCollection(context.Context) (ImplResponse, error)
	AwsAccountsCreate(context.Context, bool, string, AwsAccountsCreateInput) (ImplResponse, error)
	AwsAccountsDelete(context.Context, string, bool, string) (ImplResponse, error)
	AwsAccountsGenerateTrustPolicy(context.Context, bool, string, AwsTrustPolicyInput) (ImplResponse, error)
	AwsAccountsInstance(context.Context, string) (ImplResponse, error)
	AwsAccountsModify(context.Context, string, bool, string, AwsAccountModifyInput) (ImplResponse, error)
}


// AwsPermissionPoliciesAPIServicer defines the api actions for the AwsPermissionPoliciesAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type AwsPermissionPoliciesAPIServicer interface { 
	AwsPermissionPoliciesCollection(context.Context) (ImplResponse, error)
	AwsPermissionPoliciesInstance(context.Context, string) (ImplResponse, error)
}


// ClonesAPIServicer defines the api actions for the ClonesAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type ClonesAPIServicer interface { 
	ClonesCollection(context.Context, string, string, string, int32, int32) (ImplResponse, error)
	ClonesCreate(context.Context, bool, CloneCreateInput) (ImplResponse, error)
	ClonesDelete(context.Context, string, bool, DeleteCloneInput) (ImplResponse, error)
	ClonesInstance(context.Context, string, string) (ImplResponse, error)
	ClonesMap(context.Context, string, bool, MapInput) (ImplResponse, error)
	ClonesModify(context.Context, string, bool, UpdateCloneInput) (ImplResponse, error)
	ClonesRefresh(context.Context, string, bool) (ImplResponse, error)
	ClonesUnmap(context.Context, string, bool, UnmapInput) (ImplResponse, error)
}


// EntitlementsAPIServicer defines the api actions for the EntitlementsAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type EntitlementsAPIServicer interface { 
	EntitlementsCollection(context.Context, string, string, string, int32, int32) (ImplResponse, error)
	EntitlementsInstance(context.Context, string, string) (ImplResponse, error)
}


// HostsAPIServicer defines the api actions for the HostsAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type HostsAPIServicer interface { 
	HostsCollection(context.Context, string, string, string, int32, int32) (ImplResponse, error)
	HostsInstance(context.Context, string, string) (ImplResponse, error)
}


// LicensesAPIServicer defines the api actions for the LicensesAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type LicensesAPIServicer interface { 
	LicensesCollection(context.Context, string, string, string, int32, int32) (ImplResponse, error)
	LicensesInstance(context.Context, string, string) (ImplResponse, error)
}


// MobilityGroupsAPIServicer defines the api actions for the MobilityGroupsAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type MobilityGroupsAPIServicer interface { 
	MobilityGroupsCollection(context.Context, string, string, string, int32, int32) (ImplResponse, error)
	MobilityGroupsCopy(context.Context, string, bool, StartCopyInput) (ImplResponse, error)
	MobilityGroupsCreate(context.Context, bool, SourceMobilityGroupInput) (ImplResponse, error)
	MobilityGroupsDelete(context.Context, string, bool) (ImplResponse, error)
	MobilityGroupsInstance(context.Context, string, string) (ImplResponse, error)
	MobilityGroupsModify(context.Context, string, bool, UpdateMobilityGroupInput) (ImplResponse, error)
}


// MobilityTargetsAPIServicer defines the api actions for the MobilityTargetsAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type MobilityTargetsAPIServicer interface { 
	MobilityTargetsCollection(context.Context, string, string, string, int32, int32) (ImplResponse, error)
	MobilityTargetsCreate(context.Context, bool, CreateTargetInput) (ImplResponse, error)
	MobilityTargetsDelete(context.Context, string, bool) (ImplResponse, error)
	MobilityTargetsInstance(context.Context, string, string) (ImplResponse, error)
	MobilityTargetsModify(context.Context, string, bool, UpdateMobilityTargetInput) (ImplResponse, error)
}


// PoolsAPIServicer defines the api actions for the PoolsAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type PoolsAPIServicer interface { 
	PoolsCollection(context.Context, string, string, string, int32, int32) (ImplResponse, error)
	PoolsInstance(context.Context, string, string) (ImplResponse, error)
}


// StorageProductOptionsAPIServicer defines the api actions for the StorageProductOptionsAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type StorageProductOptionsAPIServicer interface { 
	StorageProductOptionsCollection(context.Context, string, string, string, int32, int32, string) (ImplResponse, error)
}


// StorageProductsAPIServicer defines the api actions for the StorageProductsAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type StorageProductsAPIServicer interface { 
	StorageProductsCollection(context.Context, string, string, string, int32, int32, string) (ImplResponse, error)
}


// StorageSystemTokensAPIServicer defines the api actions for the StorageSystemTokensAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type StorageSystemTokensAPIServicer interface { 
	StorageSystemTokensCreate(context.Context, StorageSystemTokensCreateRequest) (ImplResponse, error)
	StorageSystemTokensInstance(context.Context, string) (ImplResponse, error)
	StorageSystemTokensModify(context.Context, string, StorageSystemTokensModifyRequest) (ImplResponse, error)
}


// StorageSystemsAPIServicer defines the api actions for the StorageSystemsAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type StorageSystemsAPIServicer interface { 
	StorageSystemsCollection(context.Context, string, string, string, int32, int32) (ImplResponse, error)
	StorageSystemsCreate(context.Context, bool, string, StorageSystemDeploymentRequest) (ImplResponse, error)
	StorageSystemsDelete(context.Context, string, bool) (ImplResponse, error)
	StorageSystemsFinalizeTrust(context.Context, string, StorageSystemsFinalizeTrustPostRequest) (ImplResponse, error)
	StorageSystemsInitializeTrust(context.Context, string) (ImplResponse, error)
	StorageSystemsInstance(context.Context, string, string) (ImplResponse, error)
}


// VolumesAPIServicer defines the api actions for the VolumesAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type VolumesAPIServicer interface { 
	VolumesCollection(context.Context, string, string, string, int32, int32) (ImplResponse, error)
	VolumesInstance(context.Context, string, string) (ImplResponse, error)
}
