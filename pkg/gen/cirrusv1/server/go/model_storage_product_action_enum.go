/*
 * APEX Navigator for Multicloud Storage REST APIs
 *
 * The public API definitions for APEX Navigator for Multicloud Storage
 *
 * API version: 1.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package server


import (
	"fmt"
)


// StorageProductActionEnum : Enum for all the supported storage products actions * DELETE * CREATE * DEPLOY 
type StorageProductActionEnum string

// List of StorageProductActionEnum
const (
	STORAGEPRODUCTACTIONENUM_DELETE StorageProductActionEnum = "DELETE"
	STORAGEPRODUCTACTIONENUM_CREATE StorageProductActionEnum = "CREATE"
	STORAGEPRODUCTACTIONENUM_DEPLOY StorageProductActionEnum = "DEPLOY"
)

// AllowedStorageProductActionEnumEnumValues is all the allowed values of StorageProductActionEnum enum
var AllowedStorageProductActionEnumEnumValues = []StorageProductActionEnum{
	"DELETE",
	"CREATE",
	"DEPLOY",
}

// validStorageProductActionEnumEnumValue provides a map of StorageProductActionEnums for fast verification of use input
var validStorageProductActionEnumEnumValues = map[StorageProductActionEnum]struct{}{
	"DELETE": {},
	"CREATE": {},
	"DEPLOY": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v StorageProductActionEnum) IsValid() bool {
	_, ok := validStorageProductActionEnumEnumValues[v]
	return ok
}

// NewStorageProductActionEnumFromValue returns a pointer to a valid StorageProductActionEnum
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewStorageProductActionEnumFromValue(v string) (StorageProductActionEnum, error) {
	ev := StorageProductActionEnum(v)
	if ev.IsValid() {
		return ev, nil
	} else {
		return "", fmt.Errorf("invalid value '%v' for StorageProductActionEnum: valid values are %v", v, AllowedStorageProductActionEnumEnumValues)
	}
}



// AssertStorageProductActionEnumRequired checks if the required fields are not zero-ed
func AssertStorageProductActionEnumRequired(obj StorageProductActionEnum) error {
	return nil
}

// AssertStorageProductActionEnumConstraints checks if the values respects the defined constraints
func AssertStorageProductActionEnumConstraints(obj StorageProductActionEnum) error {
	return nil
}
