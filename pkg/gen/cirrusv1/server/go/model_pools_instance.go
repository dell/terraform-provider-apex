/*
 * APEX Navigator for Multicloud Storage REST APIs
 *
 * The public API definitions for APEX Navigator for Multicloud Storage
 *
 * API version: 1.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package server




// PoolsInstance - The pool object.
type PoolsInstance struct {

	// Identifier of the pool.
	Id string `json:"id"`

	// Unique identifier for the device or appliance.
	SystemId string `json:"system_id,omitempty"`

	// Type of the system.
	SystemType string `json:"system_type,omitempty"`

	// Available capacity - Unit: bytes
	FreeSize int64 `json:"free_size,omitempty"`

	// Number of health issues that are present on the pool.
	IssueCount int64 `json:"issue_count,omitempty"`

	// Name of the pool.
	Name string `json:"name,omitempty"`

	// Native identifier of the pool, defined by the system.
	NativeId string `json:"native_id,omitempty"`

	// Percentage of pool capacity that is provisioned.
	SubscribedPercent float64 `json:"subscribed_percent,omitempty"`

	// Total subscribed capacity of the pool - Unit: bytes
	SubscribedSize int64 `json:"subscribed_size,omitempty"`

	// Model of the system.
	SystemModel string `json:"system_model,omitempty"`

	// Name of the system.
	SystemName string `json:"system_name,omitempty"`

	// This is an enumerated type showing a prediction of when the pool may become full. Possible values are: DAY (imminent); FULL (pool is full); WEEK (full in a week); MONTH (full in a month); QUARTER (full within a quarter); BEYOND (more than a quarter to become full); LEARNING (not enough data to perform an analysis); UNPREDICTABLE (missing or invalid data); or UNKNOWN (system error).
	TimeToFullPrediction string `json:"time_to_full_prediction,omitempty"`

	// Total capacity of the pool - Unit: bytes
	TotalSize int64 `json:"total_size,omitempty"`

	// The type of pool.
	Type string `json:"type,omitempty"`

	// Percentage of pool capacity that is being used.
	UsedPercent float64 `json:"used_percent,omitempty"`

	// Capacity of the pool that is being used - Unit: bytes
	UsedSize int64 `json:"used_size,omitempty"`
}

// AssertPoolsInstanceRequired checks if the required fields are not zero-ed
func AssertPoolsInstanceRequired(obj PoolsInstance) error {
	elements := map[string]interface{}{
		"id": obj.Id,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertPoolsInstanceConstraints checks if the values respects the defined constraints
func AssertPoolsInstanceConstraints(obj PoolsInstance) error {
	return nil
}
