/*
 * APEX Navigator for Multicloud Storage REST APIs
 *
 * The public API definitions for APEX Navigator for Multicloud Storage
 *
 * API version: 1.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package server

import (
	"net/http"
	"strings"

	"github.com/gorilla/mux"
)

// AwsPermissionPoliciesAPIController binds http requests to an api service and writes the service results to the http response
type AwsPermissionPoliciesAPIController struct {
	service AwsPermissionPoliciesAPIServicer
	errorHandler ErrorHandler
}

// AwsPermissionPoliciesAPIOption for how the controller is set up.
type AwsPermissionPoliciesAPIOption func(*AwsPermissionPoliciesAPIController)

// WithAwsPermissionPoliciesAPIErrorHandler inject ErrorHandler into controller
func WithAwsPermissionPoliciesAPIErrorHandler(h ErrorHandler) AwsPermissionPoliciesAPIOption {
	return func(c *AwsPermissionPoliciesAPIController) {
		c.errorHandler = h
	}
}

// NewAwsPermissionPoliciesAPIController creates a default api controller
func NewAwsPermissionPoliciesAPIController(s AwsPermissionPoliciesAPIServicer, opts ...AwsPermissionPoliciesAPIOption) Router {
	controller := &AwsPermissionPoliciesAPIController{
		service:      s,
		errorHandler: DefaultErrorHandler,
	}

	for _, opt := range opts {
		opt(controller)
	}

	return controller
}

// Routes returns all the api routes for the AwsPermissionPoliciesAPIController
func (c *AwsPermissionPoliciesAPIController) Routes() Routes {
	return Routes{
		"AwsPermissionPoliciesCollection": Route{
			strings.ToUpper("Get"),
			"/rest/services/storage/v1/aws-permission-policies",
			c.AwsPermissionPoliciesCollection,
		},
		"AwsPermissionPoliciesInstance": Route{
			strings.ToUpper("Get"),
			"/rest/services/storage/v1/aws-permission-policies/{permission_policy_id}",
			c.AwsPermissionPoliciesInstance,
		},
	}
}

// AwsPermissionPoliciesCollection - Get AWS permission policy
func (c *AwsPermissionPoliciesAPIController) AwsPermissionPoliciesCollection(w http.ResponseWriter, r *http.Request) {
	result, err := c.service.AwsPermissionPoliciesCollection(r.Context())
	// If an error occurred, encode the error with the status code
	if err != nil {
		c.errorHandler(w, r, err, &result)
		return
	}
	// If no error, encode the body and the result code
	EncodeJSONResponse(result.Body, &result.Code, w)
}

// AwsPermissionPoliciesInstance - Get AWS permission policy instance
func (c *AwsPermissionPoliciesAPIController) AwsPermissionPoliciesInstance(w http.ResponseWriter, r *http.Request) {
	params := mux.Vars(r)
	permissionPolicyIdParam := params["permission_policy_id"]
	if permissionPolicyIdParam == "" {
		c.errorHandler(w, r, &RequiredError{"permission_policy_id"}, nil)
		return
	}
	result, err := c.service.AwsPermissionPoliciesInstance(r.Context(), permissionPolicyIdParam)
	// If an error occurred, encode the error with the status code
	if err != nil {
		c.errorHandler(w, r, err, &result)
		return
	}
	// If no error, encode the body and the result code
	EncodeJSONResponse(result.Body, &result.Code, w)
}
