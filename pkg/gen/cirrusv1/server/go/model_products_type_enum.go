/*
 * APEX Navigator for Multicloud Storage REST APIs
 *
 * The public API definitions for APEX Navigator for Multicloud Storage
 *
 * API version: 1.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package server


import (
	"fmt"
)


// ProductsTypeEnum : Valid product (offering) types. * POWERFLEX - A PowerFlex storage system. 
type ProductsTypeEnum string

// List of ProductsTypeEnum
const (
	PRODUCTSTYPEENUM_POWERFLEX ProductsTypeEnum = "POWERFLEX"
)

// AllowedProductsTypeEnumEnumValues is all the allowed values of ProductsTypeEnum enum
var AllowedProductsTypeEnumEnumValues = []ProductsTypeEnum{
	"POWERFLEX",
}

// validProductsTypeEnumEnumValue provides a map of ProductsTypeEnums for fast verification of use input
var validProductsTypeEnumEnumValues = map[ProductsTypeEnum]struct{}{
	"POWERFLEX": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ProductsTypeEnum) IsValid() bool {
	_, ok := validProductsTypeEnumEnumValues[v]
	return ok
}

// NewProductsTypeEnumFromValue returns a pointer to a valid ProductsTypeEnum
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewProductsTypeEnumFromValue(v string) (ProductsTypeEnum, error) {
	ev := ProductsTypeEnum(v)
	if ev.IsValid() {
		return ev, nil
	} else {
		return "", fmt.Errorf("invalid value '%v' for ProductsTypeEnum: valid values are %v", v, AllowedProductsTypeEnumEnumValues)
	}
}



// AssertProductsTypeEnumRequired checks if the required fields are not zero-ed
func AssertProductsTypeEnumRequired(obj ProductsTypeEnum) error {
	return nil
}

// AssertProductsTypeEnumConstraints checks if the values respects the defined constraints
func AssertProductsTypeEnumConstraints(obj ProductsTypeEnum) error {
	return nil
}
