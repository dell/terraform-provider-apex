/*
 * APEX Navigator for Multicloud Storage REST APIs
 *
 * The public API definitions for APEX Navigator for Multicloud Storage
 *
 * API version: 1.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package server


import (
	"fmt"
)


// LicensesTypeEnum : The various types of licenses: * PERPETUAL - Perpetual licenses never expire but do not include support. * SUBSCRIPTION - Subscription licenses include support. * EVALUATION - Evaluation licenses do not include support. 
type LicensesTypeEnum string

// List of LicensesTypeEnum
const (
	LICENSESTYPEENUM_PERPETUAL LicensesTypeEnum = "PERPETUAL"
	LICENSESTYPEENUM_SUBSCRIPTION LicensesTypeEnum = "SUBSCRIPTION"
	LICENSESTYPEENUM_EVALUATION LicensesTypeEnum = "EVALUATION"
)

// AllowedLicensesTypeEnumEnumValues is all the allowed values of LicensesTypeEnum enum
var AllowedLicensesTypeEnumEnumValues = []LicensesTypeEnum{
	"PERPETUAL",
	"SUBSCRIPTION",
	"EVALUATION",
}

// validLicensesTypeEnumEnumValue provides a map of LicensesTypeEnums for fast verification of use input
var validLicensesTypeEnumEnumValues = map[LicensesTypeEnum]struct{}{
	"PERPETUAL": {},
	"SUBSCRIPTION": {},
	"EVALUATION": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v LicensesTypeEnum) IsValid() bool {
	_, ok := validLicensesTypeEnumEnumValues[v]
	return ok
}

// NewLicensesTypeEnumFromValue returns a pointer to a valid LicensesTypeEnum
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewLicensesTypeEnumFromValue(v string) (LicensesTypeEnum, error) {
	ev := LicensesTypeEnum(v)
	if ev.IsValid() {
		return ev, nil
	} else {
		return "", fmt.Errorf("invalid value '%v' for LicensesTypeEnum: valid values are %v", v, AllowedLicensesTypeEnumEnumValues)
	}
}



// AssertLicensesTypeEnumRequired checks if the required fields are not zero-ed
func AssertLicensesTypeEnumRequired(obj LicensesTypeEnum) error {
	return nil
}

// AssertLicensesTypeEnumConstraints checks if the values respects the defined constraints
func AssertLicensesTypeEnumConstraints(obj LicensesTypeEnum) error {
	return nil
}
