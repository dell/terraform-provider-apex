/*
 * APEX Navigator for Multicloud Storage REST APIs
 *
 * The public API definitions for APEX Navigator for Multicloud Storage
 *
 * API version: 1.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package server


import (
	"time"
)



// StorageSystemsInstance - The storage system.
type StorageSystemsInstance struct {

	// Identifier for the storage system.
	Id string `json:"id"`

	// Unique identifier for the device or appliance.
	SystemId string `json:"system_id,omitempty"`

	// Type of the system.
	SystemType string `json:"system_type,omitempty"`

	// The system bandwidth. Aggregated for a rolling average over the last 24 hours - Unit: bytes/s
	Bandwidth int64 `json:"bandwidth,omitempty"`

	// Impact point of highest impacting issue in the capacity health category.
	CapacityImpact int64 `json:"capacity_impact,omitempty"`

	// Total number of issues in the capacity health category.
	CapacityIssueCount int64 `json:"capacity_issue_count,omitempty"`

	// Storage efficiency ratio of data which has compression applied to it on the system.
	CompressionSavings float64 `json:"compression_savings,omitempty"`

	// Impact point of highest impacting issue in the configuration health category.
	ConfigurationImpact int64 `json:"configuration_impact,omitempty"`

	// Total number of issues in the configuration health category.
	ConfigurationIssueCount int64 `json:"configuration_issue_count,omitempty"`

	// The configured size for this system - Unit: bytes
	ConfiguredSize int64 `json:"configured_size,omitempty"`

	// Connectivity status.
	ConnectivityStatus string `json:"connectivity_status,omitempty"`

	// Type of the license on the system.
	LicenseType string `json:"license_type,omitempty"`

	// Expiration date for the license on the system.
	LicenseExpirationDateTimestamp time.Time `json:"license_expiration_date_timestamp,omitempty"`

	// Type of the service contract of the system.
	ContractCoverageType string `json:"contract_coverage_type,omitempty"`

	// Expiration date for the service contract of the system.
	ContractExpirationDateTimestamp time.Time `json:"contract_expiration_date_timestamp,omitempty"`

	// Impact point of highest impacting issue in the data protection health category.
	DataProtectionImpact int64 `json:"data_protection_impact,omitempty"`

	// Total number of issues in the data protection health category.
	DataProtectionIssueCount int64 `json:"data_protection_issue_count,omitempty"`

	// Unique identifier for the system.
	DisplayIdentifier string `json:"display_identifier,omitempty"`

	// The %free capacity.
	FreePercent float64 `json:"free_percent,omitempty"`

	// The free size value - Unit: bytes
	FreeSize int64 `json:"free_size,omitempty"`

	// Health connectivity status.
	HealthConnectivityStatus string `json:"health_connectivity_status,omitempty"`

	// Total amount of health issues.
	HealthIssueCount int64 `json:"health_issue_count,omitempty"`

	// The overall health score of the system.
	HealthScore int64 `json:"health_score,omitempty"`

	// Health state of the system.
	HealthState string `json:"health_state,omitempty"`

	// The IOPS for the system. Aggregated for a rolling average over the last 24 hours - Unit: IO/s
	Iops int64 `json:"iops,omitempty"`

	// IPv4 address of the system.
	Ipv4Address string `json:"ipv4_address,omitempty"`

	// IPv6 address of the system.
	Ipv6Address string `json:"ipv6_address,omitempty"`

	// Last time that CloudIQ received data from the system.
	LastContactTimestamp time.Time `json:"last_contact_timestamp,omitempty"`

	// The latency for the system. Aggregated for a rolling average over the last 24 hours - Unit: microseconds
	Latency int64 `json:"latency,omitempty"`

	// The logical size written - Unit: bytes
	LogicalSize int64 `json:"logical_size,omitempty"`

	// The model of the system.
	Model string `json:"model,omitempty"`

	// The user-defined name of the system.
	Name string `json:"name,omitempty"`

	// The overall system-level storage efficiency ratio based on Thin, Snapshots, Deduplication, and Data Reduction.
	OverallEfficiency float64 `json:"overall_efficiency,omitempty"`

	// Impact point of highest impacting issue in the performance health category.
	PerformanceImpact int64 `json:"performance_impact,omitempty"`

	// Total number of issues in the performance health category.
	PerformanceIssueCount int64 `json:"performance_issue_count,omitempty"`

	// The serial number for this system.
	SerialNumber string `json:"serial_number,omitempty"`

	// Name of the site where the system is registered to.
	SiteName string `json:"site_name,omitempty"`

	// The snaps savings for this system.
	SnapsSavings float64 `json:"snaps_savings,omitempty"`

	// Health impact for the system.
	SystemHealthImpact int64 `json:"system_health_impact,omitempty"`

	// Total amount of health issues for the system.
	SystemHealthIssueCount int64 `json:"system_health_issue_count,omitempty"`

	// The savings due to thin provisioning.
	ThinSavings float64 `json:"thin_savings,omitempty"`

	// The total size of the system - Unit: bytes
	TotalSize int64 `json:"total_size,omitempty"`

	// The unconfigured capacity for this system - Unit: bytes
	UnconfiguredSize int64 `json:"unconfigured_size,omitempty"`

	// Percentage of capacity used for this system.
	UsedPercent float64 `json:"used_percent,omitempty"`

	// The value of used capacity for this system - Unit: bytes
	UsedSize int64 `json:"used_size,omitempty"`

	// Name of the vendor who makes the system.
	Vendor string `json:"vendor,omitempty"`

	// Version identifier.
	Version string `json:"version,omitempty"`

	DeploymentDetails StorageSystemsInstanceDeploymentDetails `json:"deployment_details,omitempty"`
}

// AssertStorageSystemsInstanceRequired checks if the required fields are not zero-ed
func AssertStorageSystemsInstanceRequired(obj StorageSystemsInstance) error {
	elements := map[string]interface{}{
		"id": obj.Id,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	if err := AssertStorageSystemsInstanceDeploymentDetailsRequired(obj.DeploymentDetails); err != nil {
		return err
	}
	return nil
}

// AssertStorageSystemsInstanceConstraints checks if the values respects the defined constraints
func AssertStorageSystemsInstanceConstraints(obj StorageSystemsInstance) error {
	return nil
}
