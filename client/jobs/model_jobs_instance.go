/*
APEX Orchestration Platform - Job Management System (JMS) API

Provides management and visibility for APEX Orchestration Platform Jobs

API version: IGNORED - see resource tag's x-api-version for the specific version of this resource.
Contact: apex.mars@dell.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"time"
)

// checks if the JobsInstance type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &JobsInstance{}

// JobsInstance Information about a job.
type JobsInstance struct {
	// Unique identifier of the job.
	Id *string `json:"id,omitempty"`
	// Name of the job, if not provided it will default to <resource_type>.<resource_action>.
	Name *string `json:"name,omitempty"`
	Resource *ResourceRef `json:"resource,omitempty"`
	ResourceAction *ResourceActionEnum `json:"resource_action,omitempty"`
	// When resource_action==OTHER_ACTION, this value should be a single token that names a product  specific action. This should _only_ be used for resource types of OTHER_RESOURCE,  representing native APIs outside of the /dtapi REST namespace. 
	ResourceActionOtherName *string `json:"resource_action_other_name,omitempty"`
	// Description of the job.
	DescriptionL10n *string `json:"description_l10n,omitempty"`
	State *JobStateEnum `json:"state,omitempty"`
	// Whether or not the pause operation is possible on this job.
	IsPausable *bool `json:"is_pausable,omitempty"`
	// Whether or not the cancel operation is possible on this job.
	IsCancellable *bool `json:"is_cancellable,omitempty"`
	// Date and time when the job was instantiated, whether due to an external request or other reason.
	CreateTime *time.Time `json:"create_time,omitempty"`
	// Date and time when the job execution started.
	StartTime *time.Time `json:"start_time,omitempty"`
	// Date and time when the job execution completed, if succeeded, completed, or failed.
	EndTime *time.Time `json:"end_time,omitempty"`
	// Date and time when the job should start.
	RequestedStartTime *time.Time `json:"requested_start_time,omitempty"`
	// Date and time past which job execution should not be allowed to continue. If the job is  cancellable then it will be cancelled if it has not completed by this tme. Since not all  jobs can be cancelled, a job could run past the requested_end_time. 
	RequestedEndTime *time.Time `json:"requested_end_time,omitempty"`
	// Estimated completion date and time, if not completed or failed.
	EstimatedCompletionTime *time.Time `json:"estimated_completion_time,omitempty"`
	// Approximate percent complete of the job. This may be percentage relative to number of required operations and not reflect time 
	Progress *int32 `json:"progress,omitempty"`
	// Unique identifier of the parent job, if applicable.
	ParentId *string `json:"parent_id,omitempty"`
	// List of child jobs. This list can be _either_ a list of other job resource instances whose parent_id is this job, _or_ a list of jobs without id values, that are  queriable only as children of this job, but not a mix of both types. 
	Children []JobsInstance `json:"children,omitempty"`
	// Unique identifier of the root job, if applicable.  The root job is the job at the top of the parent hierarchy. 
	RootId *string `json:"root_id,omitempty"`
	// List of jobs in this family. A job family is all the jobs sharing the same root_id. Only the root job (the one with the root_id) has this property. 
	FamilyIds []string `json:"family_ids,omitempty"`
	// Unique id of the administrative user responsible for the job.
	UserId *string `json:"user_id,omitempty"`
	Request *RequestContent `json:"request,omitempty"`
	// Name of the OpenAPI object definition in the request property above. Normally will be called  <ResourceType><ResourceAction>, such as JobDelete or X509CertificateGenerateCSR. 
	RequestDefinitionName *string `json:"request_definition_name,omitempty"`
	Response *ResponseContent `json:"response,omitempty"`
	// Name of the OpenAPI object definition in the response property above. Normally will be called  <ResourceType><ResourceAction>Response, such as X509CertificateGenerateCSRResponse for 200 status responses. Null for 204 status. ErrorResponse for 4xx/5xx responses. 
	ResponseDefinitionName *string `json:"response_definition_name,omitempty"`
	ResponseStatus *HTTPStatusEnum `json:"response_status,omitempty"`
	// IP address from which the job request originated, if external to the system.
	ClientAddress *string `json:"client_address,omitempty"`
	// Start order of a given job step with respect to its siblings within the job hierarchy. Even jobs run concurrently will start in some specific order. 
	StepOrder *int32 `json:"step_order,omitempty"`
	// Indicates whether a command is internal or visible to the end user.
	IsInternal *bool `json:"is_internal,omitempty"`
	PauseMessage *ErrorMessage `json:"pause_message,omitempty"`
	// Opaque value that may be set by request originator. It is persisted with the job and may be used for:  * Filtering a job query to find an async job (whether intentional or an unintentional disconnect).  * To retry a request. If a request is made with a duplicate correlationId value, then the system must    return the result of the initial invocation with that correlationId, waiting for that initial job to    finish if necessary. This does not apply when a completed or failed jobs has already expired and    been deleted. * The platform _should_ log this value anywhere log entries occur during the execution of the request. 
	CorrelationId *string `json:"correlation_id,omitempty"`
}

// NewJobsInstance instantiates a new JobsInstance object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewJobsInstance() *JobsInstance {
	this := JobsInstance{}
	return &this
}

// NewJobsInstanceWithDefaults instantiates a new JobsInstance object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewJobsInstanceWithDefaults() *JobsInstance {
	this := JobsInstance{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *JobsInstance) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsInstance) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *JobsInstance) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *JobsInstance) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *JobsInstance) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsInstance) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *JobsInstance) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *JobsInstance) SetName(v string) {
	o.Name = &v
}

// GetResource returns the Resource field value if set, zero value otherwise.
func (o *JobsInstance) GetResource() ResourceRef {
	if o == nil || IsNil(o.Resource) {
		var ret ResourceRef
		return ret
	}
	return *o.Resource
}

// GetResourceOk returns a tuple with the Resource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsInstance) GetResourceOk() (*ResourceRef, bool) {
	if o == nil || IsNil(o.Resource) {
		return nil, false
	}
	return o.Resource, true
}

// HasResource returns a boolean if a field has been set.
func (o *JobsInstance) HasResource() bool {
	if o != nil && !IsNil(o.Resource) {
		return true
	}

	return false
}

// SetResource gets a reference to the given ResourceRef and assigns it to the Resource field.
func (o *JobsInstance) SetResource(v ResourceRef) {
	o.Resource = &v
}

// GetResourceAction returns the ResourceAction field value if set, zero value otherwise.
func (o *JobsInstance) GetResourceAction() ResourceActionEnum {
	if o == nil || IsNil(o.ResourceAction) {
		var ret ResourceActionEnum
		return ret
	}
	return *o.ResourceAction
}

// GetResourceActionOk returns a tuple with the ResourceAction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsInstance) GetResourceActionOk() (*ResourceActionEnum, bool) {
	if o == nil || IsNil(o.ResourceAction) {
		return nil, false
	}
	return o.ResourceAction, true
}

// HasResourceAction returns a boolean if a field has been set.
func (o *JobsInstance) HasResourceAction() bool {
	if o != nil && !IsNil(o.ResourceAction) {
		return true
	}

	return false
}

// SetResourceAction gets a reference to the given ResourceActionEnum and assigns it to the ResourceAction field.
func (o *JobsInstance) SetResourceAction(v ResourceActionEnum) {
	o.ResourceAction = &v
}

// GetResourceActionOtherName returns the ResourceActionOtherName field value if set, zero value otherwise.
func (o *JobsInstance) GetResourceActionOtherName() string {
	if o == nil || IsNil(o.ResourceActionOtherName) {
		var ret string
		return ret
	}
	return *o.ResourceActionOtherName
}

// GetResourceActionOtherNameOk returns a tuple with the ResourceActionOtherName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsInstance) GetResourceActionOtherNameOk() (*string, bool) {
	if o == nil || IsNil(o.ResourceActionOtherName) {
		return nil, false
	}
	return o.ResourceActionOtherName, true
}

// HasResourceActionOtherName returns a boolean if a field has been set.
func (o *JobsInstance) HasResourceActionOtherName() bool {
	if o != nil && !IsNil(o.ResourceActionOtherName) {
		return true
	}

	return false
}

// SetResourceActionOtherName gets a reference to the given string and assigns it to the ResourceActionOtherName field.
func (o *JobsInstance) SetResourceActionOtherName(v string) {
	o.ResourceActionOtherName = &v
}

// GetDescriptionL10n returns the DescriptionL10n field value if set, zero value otherwise.
func (o *JobsInstance) GetDescriptionL10n() string {
	if o == nil || IsNil(o.DescriptionL10n) {
		var ret string
		return ret
	}
	return *o.DescriptionL10n
}

// GetDescriptionL10nOk returns a tuple with the DescriptionL10n field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsInstance) GetDescriptionL10nOk() (*string, bool) {
	if o == nil || IsNil(o.DescriptionL10n) {
		return nil, false
	}
	return o.DescriptionL10n, true
}

// HasDescriptionL10n returns a boolean if a field has been set.
func (o *JobsInstance) HasDescriptionL10n() bool {
	if o != nil && !IsNil(o.DescriptionL10n) {
		return true
	}

	return false
}

// SetDescriptionL10n gets a reference to the given string and assigns it to the DescriptionL10n field.
func (o *JobsInstance) SetDescriptionL10n(v string) {
	o.DescriptionL10n = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *JobsInstance) GetState() JobStateEnum {
	if o == nil || IsNil(o.State) {
		var ret JobStateEnum
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsInstance) GetStateOk() (*JobStateEnum, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *JobsInstance) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given JobStateEnum and assigns it to the State field.
func (o *JobsInstance) SetState(v JobStateEnum) {
	o.State = &v
}

// GetIsPausable returns the IsPausable field value if set, zero value otherwise.
func (o *JobsInstance) GetIsPausable() bool {
	if o == nil || IsNil(o.IsPausable) {
		var ret bool
		return ret
	}
	return *o.IsPausable
}

// GetIsPausableOk returns a tuple with the IsPausable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsInstance) GetIsPausableOk() (*bool, bool) {
	if o == nil || IsNil(o.IsPausable) {
		return nil, false
	}
	return o.IsPausable, true
}

// HasIsPausable returns a boolean if a field has been set.
func (o *JobsInstance) HasIsPausable() bool {
	if o != nil && !IsNil(o.IsPausable) {
		return true
	}

	return false
}

// SetIsPausable gets a reference to the given bool and assigns it to the IsPausable field.
func (o *JobsInstance) SetIsPausable(v bool) {
	o.IsPausable = &v
}

// GetIsCancellable returns the IsCancellable field value if set, zero value otherwise.
func (o *JobsInstance) GetIsCancellable() bool {
	if o == nil || IsNil(o.IsCancellable) {
		var ret bool
		return ret
	}
	return *o.IsCancellable
}

// GetIsCancellableOk returns a tuple with the IsCancellable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsInstance) GetIsCancellableOk() (*bool, bool) {
	if o == nil || IsNil(o.IsCancellable) {
		return nil, false
	}
	return o.IsCancellable, true
}

// HasIsCancellable returns a boolean if a field has been set.
func (o *JobsInstance) HasIsCancellable() bool {
	if o != nil && !IsNil(o.IsCancellable) {
		return true
	}

	return false
}

// SetIsCancellable gets a reference to the given bool and assigns it to the IsCancellable field.
func (o *JobsInstance) SetIsCancellable(v bool) {
	o.IsCancellable = &v
}

// GetCreateTime returns the CreateTime field value if set, zero value otherwise.
func (o *JobsInstance) GetCreateTime() time.Time {
	if o == nil || IsNil(o.CreateTime) {
		var ret time.Time
		return ret
	}
	return *o.CreateTime
}

// GetCreateTimeOk returns a tuple with the CreateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsInstance) GetCreateTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreateTime) {
		return nil, false
	}
	return o.CreateTime, true
}

// HasCreateTime returns a boolean if a field has been set.
func (o *JobsInstance) HasCreateTime() bool {
	if o != nil && !IsNil(o.CreateTime) {
		return true
	}

	return false
}

// SetCreateTime gets a reference to the given time.Time and assigns it to the CreateTime field.
func (o *JobsInstance) SetCreateTime(v time.Time) {
	o.CreateTime = &v
}

// GetStartTime returns the StartTime field value if set, zero value otherwise.
func (o *JobsInstance) GetStartTime() time.Time {
	if o == nil || IsNil(o.StartTime) {
		var ret time.Time
		return ret
	}
	return *o.StartTime
}

// GetStartTimeOk returns a tuple with the StartTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsInstance) GetStartTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.StartTime) {
		return nil, false
	}
	return o.StartTime, true
}

// HasStartTime returns a boolean if a field has been set.
func (o *JobsInstance) HasStartTime() bool {
	if o != nil && !IsNil(o.StartTime) {
		return true
	}

	return false
}

// SetStartTime gets a reference to the given time.Time and assigns it to the StartTime field.
func (o *JobsInstance) SetStartTime(v time.Time) {
	o.StartTime = &v
}

// GetEndTime returns the EndTime field value if set, zero value otherwise.
func (o *JobsInstance) GetEndTime() time.Time {
	if o == nil || IsNil(o.EndTime) {
		var ret time.Time
		return ret
	}
	return *o.EndTime
}

// GetEndTimeOk returns a tuple with the EndTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsInstance) GetEndTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.EndTime) {
		return nil, false
	}
	return o.EndTime, true
}

// HasEndTime returns a boolean if a field has been set.
func (o *JobsInstance) HasEndTime() bool {
	if o != nil && !IsNil(o.EndTime) {
		return true
	}

	return false
}

// SetEndTime gets a reference to the given time.Time and assigns it to the EndTime field.
func (o *JobsInstance) SetEndTime(v time.Time) {
	o.EndTime = &v
}

// GetRequestedStartTime returns the RequestedStartTime field value if set, zero value otherwise.
func (o *JobsInstance) GetRequestedStartTime() time.Time {
	if o == nil || IsNil(o.RequestedStartTime) {
		var ret time.Time
		return ret
	}
	return *o.RequestedStartTime
}

// GetRequestedStartTimeOk returns a tuple with the RequestedStartTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsInstance) GetRequestedStartTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.RequestedStartTime) {
		return nil, false
	}
	return o.RequestedStartTime, true
}

// HasRequestedStartTime returns a boolean if a field has been set.
func (o *JobsInstance) HasRequestedStartTime() bool {
	if o != nil && !IsNil(o.RequestedStartTime) {
		return true
	}

	return false
}

// SetRequestedStartTime gets a reference to the given time.Time and assigns it to the RequestedStartTime field.
func (o *JobsInstance) SetRequestedStartTime(v time.Time) {
	o.RequestedStartTime = &v
}

// GetRequestedEndTime returns the RequestedEndTime field value if set, zero value otherwise.
func (o *JobsInstance) GetRequestedEndTime() time.Time {
	if o == nil || IsNil(o.RequestedEndTime) {
		var ret time.Time
		return ret
	}
	return *o.RequestedEndTime
}

// GetRequestedEndTimeOk returns a tuple with the RequestedEndTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsInstance) GetRequestedEndTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.RequestedEndTime) {
		return nil, false
	}
	return o.RequestedEndTime, true
}

// HasRequestedEndTime returns a boolean if a field has been set.
func (o *JobsInstance) HasRequestedEndTime() bool {
	if o != nil && !IsNil(o.RequestedEndTime) {
		return true
	}

	return false
}

// SetRequestedEndTime gets a reference to the given time.Time and assigns it to the RequestedEndTime field.
func (o *JobsInstance) SetRequestedEndTime(v time.Time) {
	o.RequestedEndTime = &v
}

// GetEstimatedCompletionTime returns the EstimatedCompletionTime field value if set, zero value otherwise.
func (o *JobsInstance) GetEstimatedCompletionTime() time.Time {
	if o == nil || IsNil(o.EstimatedCompletionTime) {
		var ret time.Time
		return ret
	}
	return *o.EstimatedCompletionTime
}

// GetEstimatedCompletionTimeOk returns a tuple with the EstimatedCompletionTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsInstance) GetEstimatedCompletionTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.EstimatedCompletionTime) {
		return nil, false
	}
	return o.EstimatedCompletionTime, true
}

// HasEstimatedCompletionTime returns a boolean if a field has been set.
func (o *JobsInstance) HasEstimatedCompletionTime() bool {
	if o != nil && !IsNil(o.EstimatedCompletionTime) {
		return true
	}

	return false
}

// SetEstimatedCompletionTime gets a reference to the given time.Time and assigns it to the EstimatedCompletionTime field.
func (o *JobsInstance) SetEstimatedCompletionTime(v time.Time) {
	o.EstimatedCompletionTime = &v
}

// GetProgress returns the Progress field value if set, zero value otherwise.
func (o *JobsInstance) GetProgress() int32 {
	if o == nil || IsNil(o.Progress) {
		var ret int32
		return ret
	}
	return *o.Progress
}

// GetProgressOk returns a tuple with the Progress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsInstance) GetProgressOk() (*int32, bool) {
	if o == nil || IsNil(o.Progress) {
		return nil, false
	}
	return o.Progress, true
}

// HasProgress returns a boolean if a field has been set.
func (o *JobsInstance) HasProgress() bool {
	if o != nil && !IsNil(o.Progress) {
		return true
	}

	return false
}

// SetProgress gets a reference to the given int32 and assigns it to the Progress field.
func (o *JobsInstance) SetProgress(v int32) {
	o.Progress = &v
}

// GetParentId returns the ParentId field value if set, zero value otherwise.
func (o *JobsInstance) GetParentId() string {
	if o == nil || IsNil(o.ParentId) {
		var ret string
		return ret
	}
	return *o.ParentId
}

// GetParentIdOk returns a tuple with the ParentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsInstance) GetParentIdOk() (*string, bool) {
	if o == nil || IsNil(o.ParentId) {
		return nil, false
	}
	return o.ParentId, true
}

// HasParentId returns a boolean if a field has been set.
func (o *JobsInstance) HasParentId() bool {
	if o != nil && !IsNil(o.ParentId) {
		return true
	}

	return false
}

// SetParentId gets a reference to the given string and assigns it to the ParentId field.
func (o *JobsInstance) SetParentId(v string) {
	o.ParentId = &v
}

// GetChildren returns the Children field value if set, zero value otherwise.
func (o *JobsInstance) GetChildren() []JobsInstance {
	if o == nil || IsNil(o.Children) {
		var ret []JobsInstance
		return ret
	}
	return o.Children
}

// GetChildrenOk returns a tuple with the Children field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsInstance) GetChildrenOk() ([]JobsInstance, bool) {
	if o == nil || IsNil(o.Children) {
		return nil, false
	}
	return o.Children, true
}

// HasChildren returns a boolean if a field has been set.
func (o *JobsInstance) HasChildren() bool {
	if o != nil && !IsNil(o.Children) {
		return true
	}

	return false
}

// SetChildren gets a reference to the given []JobsInstance and assigns it to the Children field.
func (o *JobsInstance) SetChildren(v []JobsInstance) {
	o.Children = v
}

// GetRootId returns the RootId field value if set, zero value otherwise.
func (o *JobsInstance) GetRootId() string {
	if o == nil || IsNil(o.RootId) {
		var ret string
		return ret
	}
	return *o.RootId
}

// GetRootIdOk returns a tuple with the RootId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsInstance) GetRootIdOk() (*string, bool) {
	if o == nil || IsNil(o.RootId) {
		return nil, false
	}
	return o.RootId, true
}

// HasRootId returns a boolean if a field has been set.
func (o *JobsInstance) HasRootId() bool {
	if o != nil && !IsNil(o.RootId) {
		return true
	}

	return false
}

// SetRootId gets a reference to the given string and assigns it to the RootId field.
func (o *JobsInstance) SetRootId(v string) {
	o.RootId = &v
}

// GetFamilyIds returns the FamilyIds field value if set, zero value otherwise.
func (o *JobsInstance) GetFamilyIds() []string {
	if o == nil || IsNil(o.FamilyIds) {
		var ret []string
		return ret
	}
	return o.FamilyIds
}

// GetFamilyIdsOk returns a tuple with the FamilyIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsInstance) GetFamilyIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.FamilyIds) {
		return nil, false
	}
	return o.FamilyIds, true
}

// HasFamilyIds returns a boolean if a field has been set.
func (o *JobsInstance) HasFamilyIds() bool {
	if o != nil && !IsNil(o.FamilyIds) {
		return true
	}

	return false
}

// SetFamilyIds gets a reference to the given []string and assigns it to the FamilyIds field.
func (o *JobsInstance) SetFamilyIds(v []string) {
	o.FamilyIds = v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *JobsInstance) GetUserId() string {
	if o == nil || IsNil(o.UserId) {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsInstance) GetUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *JobsInstance) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *JobsInstance) SetUserId(v string) {
	o.UserId = &v
}

// GetRequest returns the Request field value if set, zero value otherwise.
func (o *JobsInstance) GetRequest() RequestContent {
	if o == nil || IsNil(o.Request) {
		var ret RequestContent
		return ret
	}
	return *o.Request
}

// GetRequestOk returns a tuple with the Request field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsInstance) GetRequestOk() (*RequestContent, bool) {
	if o == nil || IsNil(o.Request) {
		return nil, false
	}
	return o.Request, true
}

// HasRequest returns a boolean if a field has been set.
func (o *JobsInstance) HasRequest() bool {
	if o != nil && !IsNil(o.Request) {
		return true
	}

	return false
}

// SetRequest gets a reference to the given RequestContent and assigns it to the Request field.
func (o *JobsInstance) SetRequest(v RequestContent) {
	o.Request = &v
}

// GetRequestDefinitionName returns the RequestDefinitionName field value if set, zero value otherwise.
func (o *JobsInstance) GetRequestDefinitionName() string {
	if o == nil || IsNil(o.RequestDefinitionName) {
		var ret string
		return ret
	}
	return *o.RequestDefinitionName
}

// GetRequestDefinitionNameOk returns a tuple with the RequestDefinitionName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsInstance) GetRequestDefinitionNameOk() (*string, bool) {
	if o == nil || IsNil(o.RequestDefinitionName) {
		return nil, false
	}
	return o.RequestDefinitionName, true
}

// HasRequestDefinitionName returns a boolean if a field has been set.
func (o *JobsInstance) HasRequestDefinitionName() bool {
	if o != nil && !IsNil(o.RequestDefinitionName) {
		return true
	}

	return false
}

// SetRequestDefinitionName gets a reference to the given string and assigns it to the RequestDefinitionName field.
func (o *JobsInstance) SetRequestDefinitionName(v string) {
	o.RequestDefinitionName = &v
}

// GetResponse returns the Response field value if set, zero value otherwise.
func (o *JobsInstance) GetResponse() ResponseContent {
	if o == nil || IsNil(o.Response) {
		var ret ResponseContent
		return ret
	}
	return *o.Response
}

// GetResponseOk returns a tuple with the Response field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsInstance) GetResponseOk() (*ResponseContent, bool) {
	if o == nil || IsNil(o.Response) {
		return nil, false
	}
	return o.Response, true
}

// HasResponse returns a boolean if a field has been set.
func (o *JobsInstance) HasResponse() bool {
	if o != nil && !IsNil(o.Response) {
		return true
	}

	return false
}

// SetResponse gets a reference to the given ResponseContent and assigns it to the Response field.
func (o *JobsInstance) SetResponse(v ResponseContent) {
	o.Response = &v
}

// GetResponseDefinitionName returns the ResponseDefinitionName field value if set, zero value otherwise.
func (o *JobsInstance) GetResponseDefinitionName() string {
	if o == nil || IsNil(o.ResponseDefinitionName) {
		var ret string
		return ret
	}
	return *o.ResponseDefinitionName
}

// GetResponseDefinitionNameOk returns a tuple with the ResponseDefinitionName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsInstance) GetResponseDefinitionNameOk() (*string, bool) {
	if o == nil || IsNil(o.ResponseDefinitionName) {
		return nil, false
	}
	return o.ResponseDefinitionName, true
}

// HasResponseDefinitionName returns a boolean if a field has been set.
func (o *JobsInstance) HasResponseDefinitionName() bool {
	if o != nil && !IsNil(o.ResponseDefinitionName) {
		return true
	}

	return false
}

// SetResponseDefinitionName gets a reference to the given string and assigns it to the ResponseDefinitionName field.
func (o *JobsInstance) SetResponseDefinitionName(v string) {
	o.ResponseDefinitionName = &v
}

// GetResponseStatus returns the ResponseStatus field value if set, zero value otherwise.
func (o *JobsInstance) GetResponseStatus() HTTPStatusEnum {
	if o == nil || IsNil(o.ResponseStatus) {
		var ret HTTPStatusEnum
		return ret
	}
	return *o.ResponseStatus
}

// GetResponseStatusOk returns a tuple with the ResponseStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsInstance) GetResponseStatusOk() (*HTTPStatusEnum, bool) {
	if o == nil || IsNil(o.ResponseStatus) {
		return nil, false
	}
	return o.ResponseStatus, true
}

// HasResponseStatus returns a boolean if a field has been set.
func (o *JobsInstance) HasResponseStatus() bool {
	if o != nil && !IsNil(o.ResponseStatus) {
		return true
	}

	return false
}

// SetResponseStatus gets a reference to the given HTTPStatusEnum and assigns it to the ResponseStatus field.
func (o *JobsInstance) SetResponseStatus(v HTTPStatusEnum) {
	o.ResponseStatus = &v
}

// GetClientAddress returns the ClientAddress field value if set, zero value otherwise.
func (o *JobsInstance) GetClientAddress() string {
	if o == nil || IsNil(o.ClientAddress) {
		var ret string
		return ret
	}
	return *o.ClientAddress
}

// GetClientAddressOk returns a tuple with the ClientAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsInstance) GetClientAddressOk() (*string, bool) {
	if o == nil || IsNil(o.ClientAddress) {
		return nil, false
	}
	return o.ClientAddress, true
}

// HasClientAddress returns a boolean if a field has been set.
func (o *JobsInstance) HasClientAddress() bool {
	if o != nil && !IsNil(o.ClientAddress) {
		return true
	}

	return false
}

// SetClientAddress gets a reference to the given string and assigns it to the ClientAddress field.
func (o *JobsInstance) SetClientAddress(v string) {
	o.ClientAddress = &v
}

// GetStepOrder returns the StepOrder field value if set, zero value otherwise.
func (o *JobsInstance) GetStepOrder() int32 {
	if o == nil || IsNil(o.StepOrder) {
		var ret int32
		return ret
	}
	return *o.StepOrder
}

// GetStepOrderOk returns a tuple with the StepOrder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsInstance) GetStepOrderOk() (*int32, bool) {
	if o == nil || IsNil(o.StepOrder) {
		return nil, false
	}
	return o.StepOrder, true
}

// HasStepOrder returns a boolean if a field has been set.
func (o *JobsInstance) HasStepOrder() bool {
	if o != nil && !IsNil(o.StepOrder) {
		return true
	}

	return false
}

// SetStepOrder gets a reference to the given int32 and assigns it to the StepOrder field.
func (o *JobsInstance) SetStepOrder(v int32) {
	o.StepOrder = &v
}

// GetIsInternal returns the IsInternal field value if set, zero value otherwise.
func (o *JobsInstance) GetIsInternal() bool {
	if o == nil || IsNil(o.IsInternal) {
		var ret bool
		return ret
	}
	return *o.IsInternal
}

// GetIsInternalOk returns a tuple with the IsInternal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsInstance) GetIsInternalOk() (*bool, bool) {
	if o == nil || IsNil(o.IsInternal) {
		return nil, false
	}
	return o.IsInternal, true
}

// HasIsInternal returns a boolean if a field has been set.
func (o *JobsInstance) HasIsInternal() bool {
	if o != nil && !IsNil(o.IsInternal) {
		return true
	}

	return false
}

// SetIsInternal gets a reference to the given bool and assigns it to the IsInternal field.
func (o *JobsInstance) SetIsInternal(v bool) {
	o.IsInternal = &v
}

// GetPauseMessage returns the PauseMessage field value if set, zero value otherwise.
func (o *JobsInstance) GetPauseMessage() ErrorMessage {
	if o == nil || IsNil(o.PauseMessage) {
		var ret ErrorMessage
		return ret
	}
	return *o.PauseMessage
}

// GetPauseMessageOk returns a tuple with the PauseMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsInstance) GetPauseMessageOk() (*ErrorMessage, bool) {
	if o == nil || IsNil(o.PauseMessage) {
		return nil, false
	}
	return o.PauseMessage, true
}

// HasPauseMessage returns a boolean if a field has been set.
func (o *JobsInstance) HasPauseMessage() bool {
	if o != nil && !IsNil(o.PauseMessage) {
		return true
	}

	return false
}

// SetPauseMessage gets a reference to the given ErrorMessage and assigns it to the PauseMessage field.
func (o *JobsInstance) SetPauseMessage(v ErrorMessage) {
	o.PauseMessage = &v
}

// GetCorrelationId returns the CorrelationId field value if set, zero value otherwise.
func (o *JobsInstance) GetCorrelationId() string {
	if o == nil || IsNil(o.CorrelationId) {
		var ret string
		return ret
	}
	return *o.CorrelationId
}

// GetCorrelationIdOk returns a tuple with the CorrelationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsInstance) GetCorrelationIdOk() (*string, bool) {
	if o == nil || IsNil(o.CorrelationId) {
		return nil, false
	}
	return o.CorrelationId, true
}

// HasCorrelationId returns a boolean if a field has been set.
func (o *JobsInstance) HasCorrelationId() bool {
	if o != nil && !IsNil(o.CorrelationId) {
		return true
	}

	return false
}

// SetCorrelationId gets a reference to the given string and assigns it to the CorrelationId field.
func (o *JobsInstance) SetCorrelationId(v string) {
	o.CorrelationId = &v
}

func (o JobsInstance) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o JobsInstance) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Resource) {
		toSerialize["resource"] = o.Resource
	}
	if !IsNil(o.ResourceAction) {
		toSerialize["resource_action"] = o.ResourceAction
	}
	if !IsNil(o.ResourceActionOtherName) {
		toSerialize["resource_action_other_name"] = o.ResourceActionOtherName
	}
	if !IsNil(o.DescriptionL10n) {
		toSerialize["description_l10n"] = o.DescriptionL10n
	}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	if !IsNil(o.IsPausable) {
		toSerialize["is_pausable"] = o.IsPausable
	}
	if !IsNil(o.IsCancellable) {
		toSerialize["is_cancellable"] = o.IsCancellable
	}
	if !IsNil(o.CreateTime) {
		toSerialize["create_time"] = o.CreateTime
	}
	if !IsNil(o.StartTime) {
		toSerialize["start_time"] = o.StartTime
	}
	if !IsNil(o.EndTime) {
		toSerialize["end_time"] = o.EndTime
	}
	if !IsNil(o.RequestedStartTime) {
		toSerialize["requested_start_time"] = o.RequestedStartTime
	}
	if !IsNil(o.RequestedEndTime) {
		toSerialize["requested_end_time"] = o.RequestedEndTime
	}
	if !IsNil(o.EstimatedCompletionTime) {
		toSerialize["estimated_completion_time"] = o.EstimatedCompletionTime
	}
	if !IsNil(o.Progress) {
		toSerialize["progress"] = o.Progress
	}
	if !IsNil(o.ParentId) {
		toSerialize["parent_id"] = o.ParentId
	}
	if !IsNil(o.Children) {
		toSerialize["children"] = o.Children
	}
	if !IsNil(o.RootId) {
		toSerialize["root_id"] = o.RootId
	}
	if !IsNil(o.FamilyIds) {
		toSerialize["family_ids"] = o.FamilyIds
	}
	if !IsNil(o.UserId) {
		toSerialize["user_id"] = o.UserId
	}
	if !IsNil(o.Request) {
		toSerialize["request"] = o.Request
	}
	if !IsNil(o.RequestDefinitionName) {
		toSerialize["request_definition_name"] = o.RequestDefinitionName
	}
	if !IsNil(o.Response) {
		toSerialize["response"] = o.Response
	}
	if !IsNil(o.ResponseDefinitionName) {
		toSerialize["response_definition_name"] = o.ResponseDefinitionName
	}
	if !IsNil(o.ResponseStatus) {
		toSerialize["response_status"] = o.ResponseStatus
	}
	if !IsNil(o.ClientAddress) {
		toSerialize["client_address"] = o.ClientAddress
	}
	if !IsNil(o.StepOrder) {
		toSerialize["step_order"] = o.StepOrder
	}
	if !IsNil(o.IsInternal) {
		toSerialize["is_internal"] = o.IsInternal
	}
	if !IsNil(o.PauseMessage) {
		toSerialize["pause_message"] = o.PauseMessage
	}
	if !IsNil(o.CorrelationId) {
		toSerialize["correlation_id"] = o.CorrelationId
	}
	return toSerialize, nil
}

type NullableJobsInstance struct {
	value *JobsInstance
	isSet bool
}

func (v NullableJobsInstance) Get() *JobsInstance {
	return v.value
}

func (v *NullableJobsInstance) Set(val *JobsInstance) {
	v.value = val
	v.isSet = true
}

func (v NullableJobsInstance) IsSet() bool {
	return v.isSet
}

func (v *NullableJobsInstance) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableJobsInstance(val *JobsInstance) *NullableJobsInstance {
	return &NullableJobsInstance{value: val, isSet: true}
}

func (v NullableJobsInstance) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableJobsInstance) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


