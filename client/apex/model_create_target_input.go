/*
APEX Navigator for Multicloud Storage REST APIs

The public API definitions for APEX Navigator for Multicloud Storage

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateTargetInput type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateTargetInput{}

// CreateTargetInput Input for creating a mobility target
type CreateTargetInput struct {
	CreateTargetBaseInput
	// ID of the source mobility group
	SourceMobilityGroupId string `json:"source_mobility_group_id"`
}

type _CreateTargetInput CreateTargetInput

// NewCreateTargetInput instantiates a new CreateTargetInput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateTargetInput(sourceMobilityGroupId string, name string, systemId string, systemType StorageSystemTypeEnum, targetSystemOptions TargetSystemOptions) *CreateTargetInput {
	this := CreateTargetInput{}
	this.Name = name
	this.SystemId = systemId
	this.SystemType = systemType
	this.TargetSystemOptions = targetSystemOptions
	this.SourceMobilityGroupId = sourceMobilityGroupId
	return &this
}

// NewCreateTargetInputWithDefaults instantiates a new CreateTargetInput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateTargetInputWithDefaults() *CreateTargetInput {
	this := CreateTargetInput{}
	return &this
}

// GetSourceMobilityGroupId returns the SourceMobilityGroupId field value
func (o *CreateTargetInput) GetSourceMobilityGroupId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SourceMobilityGroupId
}

// GetSourceMobilityGroupIdOk returns a tuple with the SourceMobilityGroupId field value
// and a boolean to check if the value has been set.
func (o *CreateTargetInput) GetSourceMobilityGroupIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SourceMobilityGroupId, true
}

// SetSourceMobilityGroupId sets field value
func (o *CreateTargetInput) SetSourceMobilityGroupId(v string) {
	o.SourceMobilityGroupId = v
}

func (o CreateTargetInput) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateTargetInput) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	serializedCreateTargetBaseInput, errCreateTargetBaseInput := json.Marshal(o.CreateTargetBaseInput)
	if errCreateTargetBaseInput != nil {
		return map[string]interface{}{}, errCreateTargetBaseInput
	}
	errCreateTargetBaseInput = json.Unmarshal([]byte(serializedCreateTargetBaseInput), &toSerialize)
	if errCreateTargetBaseInput != nil {
		return map[string]interface{}{}, errCreateTargetBaseInput
	}
	toSerialize["source_mobility_group_id"] = o.SourceMobilityGroupId
	return toSerialize, nil
}

func (o *CreateTargetInput) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"source_mobility_group_id",
		"name",
		"system_id",
		"system_type",
		"target_system_options",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateTargetInput := _CreateTargetInput{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateTargetInput)

	if err != nil {
		return err
	}

	*o = CreateTargetInput(varCreateTargetInput)

	return err
}

type NullableCreateTargetInput struct {
	value *CreateTargetInput
	isSet bool
}

func (v NullableCreateTargetInput) Get() *CreateTargetInput {
	return v.value
}

func (v *NullableCreateTargetInput) Set(val *CreateTargetInput) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateTargetInput) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateTargetInput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateTargetInput(val *CreateTargetInput) *NullableCreateTargetInput {
	return &NullableCreateTargetInput{value: val, isSet: true}
}

func (v NullableCreateTargetInput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateTargetInput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


