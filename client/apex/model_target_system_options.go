/*
APEX Navigator for Multicloud Storage REST APIs

The public API definitions for APEX Navigator for Multicloud Storage

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the TargetSystemOptions type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TargetSystemOptions{}

// TargetSystemOptions TargetSystemOptions
type TargetSystemOptions struct {
	// Storage pool to use for allocsting target volumes
	StoragePool *string `json:"storage_pool,omitempty"`
}

// NewTargetSystemOptions instantiates a new TargetSystemOptions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTargetSystemOptions() *TargetSystemOptions {
	this := TargetSystemOptions{}
	return &this
}

// NewTargetSystemOptionsWithDefaults instantiates a new TargetSystemOptions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTargetSystemOptionsWithDefaults() *TargetSystemOptions {
	this := TargetSystemOptions{}
	return &this
}

// GetStoragePool returns the StoragePool field value if set, zero value otherwise.
func (o *TargetSystemOptions) GetStoragePool() string {
	if o == nil || IsNil(o.StoragePool) {
		var ret string
		return ret
	}
	return *o.StoragePool
}

// GetStoragePoolOk returns a tuple with the StoragePool field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetSystemOptions) GetStoragePoolOk() (*string, bool) {
	if o == nil || IsNil(o.StoragePool) {
		return nil, false
	}
	return o.StoragePool, true
}

// HasStoragePool returns a boolean if a field has been set.
func (o *TargetSystemOptions) HasStoragePool() bool {
	if o != nil && !IsNil(o.StoragePool) {
		return true
	}

	return false
}

// SetStoragePool gets a reference to the given string and assigns it to the StoragePool field.
func (o *TargetSystemOptions) SetStoragePool(v string) {
	o.StoragePool = &v
}

func (o TargetSystemOptions) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TargetSystemOptions) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.StoragePool) {
		toSerialize["storage_pool"] = o.StoragePool
	}
	return toSerialize, nil
}

type NullableTargetSystemOptions struct {
	value *TargetSystemOptions
	isSet bool
}

func (v NullableTargetSystemOptions) Get() *TargetSystemOptions {
	return v.value
}

func (v *NullableTargetSystemOptions) Set(val *TargetSystemOptions) {
	v.value = val
	v.isSet = true
}

func (v NullableTargetSystemOptions) IsSet() bool {
	return v.isSet
}

func (v *NullableTargetSystemOptions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTargetSystemOptions(val *TargetSystemOptions) *NullableTargetSystemOptions {
	return &NullableTargetSystemOptions{value: val, isSet: true}
}

func (v NullableTargetSystemOptions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTargetSystemOptions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


