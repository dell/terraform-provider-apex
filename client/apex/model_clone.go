/*
APEX Navigator for Multicloud Storage REST APIs

The public API definitions for APEX Navigator for Multicloud Storage

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the Clone type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Clone{}

// Clone This is a clone of the storage objects on a remote system/destination.
type Clone struct {
	//  Identifier of the cloned object.
	Id string `json:"id"`
	// Name of the clone.
	Name string `json:"name"`
	// Description of the clone.
	Description string `json:"description"`
	MobilityTargetId *string `json:"mobility_target_id,omitempty"`
	// When the clone was created
	CreationTimestamp string `json:"creation_timestamp"`
	// When the clone was last updated
	RefreshTimestamp string `json:"refresh_timestamp"`
	ImageTimestamp string `json:"image_timestamp"`
	// A list of storage object identifiers representing the copied instance on the destination/target for which a clone is created. 
	CloneVolumes []CloneMobilityMember `json:"clone_volumes"`
	// A list of the hosts/SDCs mapped to the clone
	HostMappings []CloneToHostMapping `json:"host_mappings"`
}

type _Clone Clone

// NewClone instantiates a new Clone object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClone(id string, name string, description string, creationTimestamp string, refreshTimestamp string, imageTimestamp string, cloneVolumes []CloneMobilityMember, hostMappings []CloneToHostMapping) *Clone {
	this := Clone{}
	this.Id = id
	this.Name = name
	this.Description = description
	this.CreationTimestamp = creationTimestamp
	this.RefreshTimestamp = refreshTimestamp
	this.ImageTimestamp = imageTimestamp
	this.CloneVolumes = cloneVolumes
	this.HostMappings = hostMappings
	return &this
}

// NewCloneWithDefaults instantiates a new Clone object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCloneWithDefaults() *Clone {
	this := Clone{}
	return &this
}

// GetId returns the Id field value
func (o *Clone) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *Clone) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *Clone) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value
func (o *Clone) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *Clone) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *Clone) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value
func (o *Clone) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *Clone) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *Clone) SetDescription(v string) {
	o.Description = v
}

// GetMobilityTargetId returns the MobilityTargetId field value if set, zero value otherwise.
func (o *Clone) GetMobilityTargetId() string {
	if o == nil || IsNil(o.MobilityTargetId) {
		var ret string
		return ret
	}
	return *o.MobilityTargetId
}

// GetMobilityTargetIdOk returns a tuple with the MobilityTargetId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Clone) GetMobilityTargetIdOk() (*string, bool) {
	if o == nil || IsNil(o.MobilityTargetId) {
		return nil, false
	}
	return o.MobilityTargetId, true
}

// HasMobilityTargetId returns a boolean if a field has been set.
func (o *Clone) HasMobilityTargetId() bool {
	if o != nil && !IsNil(o.MobilityTargetId) {
		return true
	}

	return false
}

// SetMobilityTargetId gets a reference to the given string and assigns it to the MobilityTargetId field.
func (o *Clone) SetMobilityTargetId(v string) {
	o.MobilityTargetId = &v
}

// GetCreationTimestamp returns the CreationTimestamp field value
func (o *Clone) GetCreationTimestamp() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreationTimestamp
}

// GetCreationTimestampOk returns a tuple with the CreationTimestamp field value
// and a boolean to check if the value has been set.
func (o *Clone) GetCreationTimestampOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreationTimestamp, true
}

// SetCreationTimestamp sets field value
func (o *Clone) SetCreationTimestamp(v string) {
	o.CreationTimestamp = v
}

// GetRefreshTimestamp returns the RefreshTimestamp field value
func (o *Clone) GetRefreshTimestamp() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RefreshTimestamp
}

// GetRefreshTimestampOk returns a tuple with the RefreshTimestamp field value
// and a boolean to check if the value has been set.
func (o *Clone) GetRefreshTimestampOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RefreshTimestamp, true
}

// SetRefreshTimestamp sets field value
func (o *Clone) SetRefreshTimestamp(v string) {
	o.RefreshTimestamp = v
}

// GetImageTimestamp returns the ImageTimestamp field value
func (o *Clone) GetImageTimestamp() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ImageTimestamp
}

// GetImageTimestampOk returns a tuple with the ImageTimestamp field value
// and a boolean to check if the value has been set.
func (o *Clone) GetImageTimestampOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ImageTimestamp, true
}

// SetImageTimestamp sets field value
func (o *Clone) SetImageTimestamp(v string) {
	o.ImageTimestamp = v
}

// GetCloneVolumes returns the CloneVolumes field value
func (o *Clone) GetCloneVolumes() []CloneMobilityMember {
	if o == nil {
		var ret []CloneMobilityMember
		return ret
	}

	return o.CloneVolumes
}

// GetCloneVolumesOk returns a tuple with the CloneVolumes field value
// and a boolean to check if the value has been set.
func (o *Clone) GetCloneVolumesOk() ([]CloneMobilityMember, bool) {
	if o == nil {
		return nil, false
	}
	return o.CloneVolumes, true
}

// SetCloneVolumes sets field value
func (o *Clone) SetCloneVolumes(v []CloneMobilityMember) {
	o.CloneVolumes = v
}

// GetHostMappings returns the HostMappings field value
func (o *Clone) GetHostMappings() []CloneToHostMapping {
	if o == nil {
		var ret []CloneToHostMapping
		return ret
	}

	return o.HostMappings
}

// GetHostMappingsOk returns a tuple with the HostMappings field value
// and a boolean to check if the value has been set.
func (o *Clone) GetHostMappingsOk() ([]CloneToHostMapping, bool) {
	if o == nil {
		return nil, false
	}
	return o.HostMappings, true
}

// SetHostMappings sets field value
func (o *Clone) SetHostMappings(v []CloneToHostMapping) {
	o.HostMappings = v
}

func (o Clone) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Clone) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["name"] = o.Name
	toSerialize["description"] = o.Description
	if !IsNil(o.MobilityTargetId) {
		toSerialize["mobility_target_id"] = o.MobilityTargetId
	}
	toSerialize["creation_timestamp"] = o.CreationTimestamp
	toSerialize["refresh_timestamp"] = o.RefreshTimestamp
	toSerialize["image_timestamp"] = o.ImageTimestamp
	toSerialize["clone_volumes"] = o.CloneVolumes
	toSerialize["host_mappings"] = o.HostMappings
	return toSerialize, nil
}

func (o *Clone) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"name",
		"description",
		"creation_timestamp",
		"refresh_timestamp",
		"image_timestamp",
		"clone_volumes",
		"host_mappings",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varClone := _Clone{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varClone)

	if err != nil {
		return err
	}

	*o = Clone(varClone)

	return err
}

type NullableClone struct {
	value *Clone
	isSet bool
}

func (v NullableClone) Get() *Clone {
	return v.value
}

func (v *NullableClone) Set(val *Clone) {
	v.value = val
	v.isSet = true
}

func (v NullableClone) IsSet() bool {
	return v.isSet
}

func (v *NullableClone) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClone(val *Clone) *NullableClone {
	return &NullableClone{value: val, isSet: true}
}

func (v NullableClone) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClone) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


