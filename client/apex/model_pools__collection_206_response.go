/*
APEX Navigator for Multicloud Storage REST APIs

The public API definitions for APEX Navigator for Multicloud Storage

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the PoolsCollection206Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PoolsCollection206Response{}

// PoolsCollection206Response struct for PoolsCollection206Response
type PoolsCollection206Response struct {
	Paging *PagingInformation `json:"paging,omitempty"`
	Results []PoolsInstance `json:"results,omitempty"`
}

// NewPoolsCollection206Response instantiates a new PoolsCollection206Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPoolsCollection206Response() *PoolsCollection206Response {
	this := PoolsCollection206Response{}
	return &this
}

// NewPoolsCollection206ResponseWithDefaults instantiates a new PoolsCollection206Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPoolsCollection206ResponseWithDefaults() *PoolsCollection206Response {
	this := PoolsCollection206Response{}
	return &this
}

// GetPaging returns the Paging field value if set, zero value otherwise.
func (o *PoolsCollection206Response) GetPaging() PagingInformation {
	if o == nil || IsNil(o.Paging) {
		var ret PagingInformation
		return ret
	}
	return *o.Paging
}

// GetPagingOk returns a tuple with the Paging field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PoolsCollection206Response) GetPagingOk() (*PagingInformation, bool) {
	if o == nil || IsNil(o.Paging) {
		return nil, false
	}
	return o.Paging, true
}

// HasPaging returns a boolean if a field has been set.
func (o *PoolsCollection206Response) HasPaging() bool {
	if o != nil && !IsNil(o.Paging) {
		return true
	}

	return false
}

// SetPaging gets a reference to the given PagingInformation and assigns it to the Paging field.
func (o *PoolsCollection206Response) SetPaging(v PagingInformation) {
	o.Paging = &v
}

// GetResults returns the Results field value if set, zero value otherwise.
func (o *PoolsCollection206Response) GetResults() []PoolsInstance {
	if o == nil || IsNil(o.Results) {
		var ret []PoolsInstance
		return ret
	}
	return o.Results
}

// GetResultsOk returns a tuple with the Results field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PoolsCollection206Response) GetResultsOk() ([]PoolsInstance, bool) {
	if o == nil || IsNil(o.Results) {
		return nil, false
	}
	return o.Results, true
}

// HasResults returns a boolean if a field has been set.
func (o *PoolsCollection206Response) HasResults() bool {
	if o != nil && !IsNil(o.Results) {
		return true
	}

	return false
}

// SetResults gets a reference to the given []PoolsInstance and assigns it to the Results field.
func (o *PoolsCollection206Response) SetResults(v []PoolsInstance) {
	o.Results = v
}

func (o PoolsCollection206Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PoolsCollection206Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Paging) {
		toSerialize["paging"] = o.Paging
	}
	if !IsNil(o.Results) {
		toSerialize["results"] = o.Results
	}
	return toSerialize, nil
}

type NullablePoolsCollection206Response struct {
	value *PoolsCollection206Response
	isSet bool
}

func (v NullablePoolsCollection206Response) Get() *PoolsCollection206Response {
	return v.value
}

func (v *NullablePoolsCollection206Response) Set(val *PoolsCollection206Response) {
	v.value = val
	v.isSet = true
}

func (v NullablePoolsCollection206Response) IsSet() bool {
	return v.isSet
}

func (v *NullablePoolsCollection206Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePoolsCollection206Response(val *PoolsCollection206Response) *NullablePoolsCollection206Response {
	return &NullablePoolsCollection206Response{value: val, isSet: true}
}

func (v NullablePoolsCollection206Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePoolsCollection206Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


