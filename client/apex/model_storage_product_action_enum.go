/*
APEX Navigator for Multicloud Storage REST APIs

The public API definitions for APEX Navigator for Multicloud Storage

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"fmt"
)

// StorageProductActionEnum Enum for all the supported storage products actions * DELETE * CREATE * DEPLOY 
type StorageProductActionEnum string

// List of StorageProductActionEnum
const (
	STORAGEPRODUCTACTIONENUM_DELETE StorageProductActionEnum = "DELETE"
	STORAGEPRODUCTACTIONENUM_CREATE StorageProductActionEnum = "CREATE"
	STORAGEPRODUCTACTIONENUM_DEPLOY StorageProductActionEnum = "DEPLOY"
)

// All allowed values of StorageProductActionEnum enum
var AllowedStorageProductActionEnumEnumValues = []StorageProductActionEnum{
	"DELETE",
	"CREATE",
	"DEPLOY",
}

func (v *StorageProductActionEnum) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := StorageProductActionEnum(value)
	for _, existing := range AllowedStorageProductActionEnumEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid StorageProductActionEnum", value)
}

// NewStorageProductActionEnumFromValue returns a pointer to a valid StorageProductActionEnum
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewStorageProductActionEnumFromValue(v string) (*StorageProductActionEnum, error) {
	ev := StorageProductActionEnum(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for StorageProductActionEnum: valid values are %v", v, AllowedStorageProductActionEnumEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v StorageProductActionEnum) IsValid() bool {
	for _, existing := range AllowedStorageProductActionEnumEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to StorageProductActionEnum value
func (v StorageProductActionEnum) Ptr() *StorageProductActionEnum {
	return &v
}

type NullableStorageProductActionEnum struct {
	value *StorageProductActionEnum
	isSet bool
}

func (v NullableStorageProductActionEnum) Get() *StorageProductActionEnum {
	return v.value
}

func (v *NullableStorageProductActionEnum) Set(val *StorageProductActionEnum) {
	v.value = val
	v.isSet = true
}

func (v NullableStorageProductActionEnum) IsSet() bool {
	return v.isSet
}

func (v *NullableStorageProductActionEnum) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStorageProductActionEnum(val *StorageProductActionEnum) *NullableStorageProductActionEnum {
	return &NullableStorageProductActionEnum{value: val, isSet: true}
}

func (v NullableStorageProductActionEnum) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStorageProductActionEnum) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

