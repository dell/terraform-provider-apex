/*
APEX Navigator for Multicloud Storage REST APIs

The public API definitions for APEX Navigator for Multicloud Storage

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the MobilityGroup type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MobilityGroup{}

// MobilityGroup Mobility group
type MobilityGroup struct {
	// Mobility group identifier
	Id string `json:"id"`
	// Mobility group name
	Name string `json:"name"`
	// Mobility group description
	Description *string `json:"description,omitempty"`
	// Identifier of the system for the mobility group members
	SystemId string `json:"system_id"`
	SystemType StorageSystemTypeEnum `json:"system_type"`
	// When the mobility group was created
	CreationTimestamp string `json:"creation_timestamp"`
	// A list of members (e.g. volumes) for source groups that the user wants to copy.  
	Members []MobilityMember `json:"members"`
}

type _MobilityGroup MobilityGroup

// NewMobilityGroup instantiates a new MobilityGroup object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMobilityGroup(id string, name string, systemId string, systemType StorageSystemTypeEnum, creationTimestamp string, members []MobilityMember) *MobilityGroup {
	this := MobilityGroup{}
	this.Id = id
	this.Name = name
	this.SystemId = systemId
	this.SystemType = systemType
	this.CreationTimestamp = creationTimestamp
	this.Members = members
	return &this
}

// NewMobilityGroupWithDefaults instantiates a new MobilityGroup object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMobilityGroupWithDefaults() *MobilityGroup {
	this := MobilityGroup{}
	return &this
}

// GetId returns the Id field value
func (o *MobilityGroup) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *MobilityGroup) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *MobilityGroup) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value
func (o *MobilityGroup) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *MobilityGroup) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *MobilityGroup) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *MobilityGroup) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobilityGroup) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *MobilityGroup) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *MobilityGroup) SetDescription(v string) {
	o.Description = &v
}

// GetSystemId returns the SystemId field value
func (o *MobilityGroup) GetSystemId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SystemId
}

// GetSystemIdOk returns a tuple with the SystemId field value
// and a boolean to check if the value has been set.
func (o *MobilityGroup) GetSystemIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SystemId, true
}

// SetSystemId sets field value
func (o *MobilityGroup) SetSystemId(v string) {
	o.SystemId = v
}

// GetSystemType returns the SystemType field value
func (o *MobilityGroup) GetSystemType() StorageSystemTypeEnum {
	if o == nil {
		var ret StorageSystemTypeEnum
		return ret
	}

	return o.SystemType
}

// GetSystemTypeOk returns a tuple with the SystemType field value
// and a boolean to check if the value has been set.
func (o *MobilityGroup) GetSystemTypeOk() (*StorageSystemTypeEnum, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SystemType, true
}

// SetSystemType sets field value
func (o *MobilityGroup) SetSystemType(v StorageSystemTypeEnum) {
	o.SystemType = v
}

// GetCreationTimestamp returns the CreationTimestamp field value
func (o *MobilityGroup) GetCreationTimestamp() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreationTimestamp
}

// GetCreationTimestampOk returns a tuple with the CreationTimestamp field value
// and a boolean to check if the value has been set.
func (o *MobilityGroup) GetCreationTimestampOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreationTimestamp, true
}

// SetCreationTimestamp sets field value
func (o *MobilityGroup) SetCreationTimestamp(v string) {
	o.CreationTimestamp = v
}

// GetMembers returns the Members field value
func (o *MobilityGroup) GetMembers() []MobilityMember {
	if o == nil {
		var ret []MobilityMember
		return ret
	}

	return o.Members
}

// GetMembersOk returns a tuple with the Members field value
// and a boolean to check if the value has been set.
func (o *MobilityGroup) GetMembersOk() ([]MobilityMember, bool) {
	if o == nil {
		return nil, false
	}
	return o.Members, true
}

// SetMembers sets field value
func (o *MobilityGroup) SetMembers(v []MobilityMember) {
	o.Members = v
}

func (o MobilityGroup) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MobilityGroup) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["name"] = o.Name
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	toSerialize["system_id"] = o.SystemId
	toSerialize["system_type"] = o.SystemType
	toSerialize["creation_timestamp"] = o.CreationTimestamp
	toSerialize["members"] = o.Members
	return toSerialize, nil
}

func (o *MobilityGroup) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"name",
		"system_id",
		"system_type",
		"creation_timestamp",
		"members",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varMobilityGroup := _MobilityGroup{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varMobilityGroup)

	if err != nil {
		return err
	}

	*o = MobilityGroup(varMobilityGroup)

	return err
}

type NullableMobilityGroup struct {
	value *MobilityGroup
	isSet bool
}

func (v NullableMobilityGroup) Get() *MobilityGroup {
	return v.value
}

func (v *NullableMobilityGroup) Set(val *MobilityGroup) {
	v.value = val
	v.isSet = true
}

func (v NullableMobilityGroup) IsSet() bool {
	return v.isSet
}

func (v *NullableMobilityGroup) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMobilityGroup(val *MobilityGroup) *NullableMobilityGroup {
	return &NullableMobilityGroup{value: val, isSet: true}
}

func (v NullableMobilityGroup) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMobilityGroup) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


