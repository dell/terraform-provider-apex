/*
APEX Navigator for Multicloud Storage REST APIs

The public API definitions for APEX Navigator for Multicloud Storage

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the AwsPermissionPoliciesInstance type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AwsPermissionPoliciesInstance{}

// AwsPermissionPoliciesInstance The response consists of permissions that allow APEX Navigator for Multicloud Storage to manage and deploy Dell storage and other resources in the customer AWS account.
type AwsPermissionPoliciesInstance struct {
	Id *string `json:"id,omitempty"`
	Version *string `json:"version,omitempty"`
	PermissionPolicy *AwsPermissionPoliciesInstancePermissionPolicy `json:"permission_policy,omitempty"`
}

// NewAwsPermissionPoliciesInstance instantiates a new AwsPermissionPoliciesInstance object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAwsPermissionPoliciesInstance() *AwsPermissionPoliciesInstance {
	this := AwsPermissionPoliciesInstance{}
	return &this
}

// NewAwsPermissionPoliciesInstanceWithDefaults instantiates a new AwsPermissionPoliciesInstance object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAwsPermissionPoliciesInstanceWithDefaults() *AwsPermissionPoliciesInstance {
	this := AwsPermissionPoliciesInstance{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *AwsPermissionPoliciesInstance) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsPermissionPoliciesInstance) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *AwsPermissionPoliciesInstance) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *AwsPermissionPoliciesInstance) SetId(v string) {
	o.Id = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *AwsPermissionPoliciesInstance) GetVersion() string {
	if o == nil || IsNil(o.Version) {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsPermissionPoliciesInstance) GetVersionOk() (*string, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *AwsPermissionPoliciesInstance) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *AwsPermissionPoliciesInstance) SetVersion(v string) {
	o.Version = &v
}

// GetPermissionPolicy returns the PermissionPolicy field value if set, zero value otherwise.
func (o *AwsPermissionPoliciesInstance) GetPermissionPolicy() AwsPermissionPoliciesInstancePermissionPolicy {
	if o == nil || IsNil(o.PermissionPolicy) {
		var ret AwsPermissionPoliciesInstancePermissionPolicy
		return ret
	}
	return *o.PermissionPolicy
}

// GetPermissionPolicyOk returns a tuple with the PermissionPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsPermissionPoliciesInstance) GetPermissionPolicyOk() (*AwsPermissionPoliciesInstancePermissionPolicy, bool) {
	if o == nil || IsNil(o.PermissionPolicy) {
		return nil, false
	}
	return o.PermissionPolicy, true
}

// HasPermissionPolicy returns a boolean if a field has been set.
func (o *AwsPermissionPoliciesInstance) HasPermissionPolicy() bool {
	if o != nil && !IsNil(o.PermissionPolicy) {
		return true
	}

	return false
}

// SetPermissionPolicy gets a reference to the given AwsPermissionPoliciesInstancePermissionPolicy and assigns it to the PermissionPolicy field.
func (o *AwsPermissionPoliciesInstance) SetPermissionPolicy(v AwsPermissionPoliciesInstancePermissionPolicy) {
	o.PermissionPolicy = &v
}

func (o AwsPermissionPoliciesInstance) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AwsPermissionPoliciesInstance) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	if !IsNil(o.PermissionPolicy) {
		toSerialize["permission_policy"] = o.PermissionPolicy
	}
	return toSerialize, nil
}

type NullableAwsPermissionPoliciesInstance struct {
	value *AwsPermissionPoliciesInstance
	isSet bool
}

func (v NullableAwsPermissionPoliciesInstance) Get() *AwsPermissionPoliciesInstance {
	return v.value
}

func (v *NullableAwsPermissionPoliciesInstance) Set(val *AwsPermissionPoliciesInstance) {
	v.value = val
	v.isSet = true
}

func (v NullableAwsPermissionPoliciesInstance) IsSet() bool {
	return v.isSet
}

func (v *NullableAwsPermissionPoliciesInstance) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAwsPermissionPoliciesInstance(val *AwsPermissionPoliciesInstance) *NullableAwsPermissionPoliciesInstance {
	return &NullableAwsPermissionPoliciesInstance{value: val, isSet: true}
}

func (v NullableAwsPermissionPoliciesInstance) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAwsPermissionPoliciesInstance) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


