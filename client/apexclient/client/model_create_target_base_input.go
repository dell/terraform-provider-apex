/*
APEX Navigator for Multicloud Storage REST APIs

The public API definitions for APEX Navigator for Multicloud Storage

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateTargetBaseInput type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateTargetBaseInput{}

// CreateTargetBaseInput Abstract input for creating a mobility target
type CreateTargetBaseInput struct {
	// Name of the mobility target
	Name string `json:"name"`
	// Description of the mobility target
	Description *string `json:"description,omitempty"`
	// Identifier of the target system
	SystemId string `json:"system_id"`
	SystemType StorageSystemTypeEnum `json:"system_type"`
	TargetSystemOptions TargetSystemOptions `json:"target_system_options"`
	// Bandwidth limit in Mbps (Mega bits per second).
	BandwidthLimit *int32 `json:"bandwidth_limit,omitempty"`
}

type _CreateTargetBaseInput CreateTargetBaseInput

// NewCreateTargetBaseInput instantiates a new CreateTargetBaseInput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateTargetBaseInput(name string, systemId string, systemType StorageSystemTypeEnum, targetSystemOptions TargetSystemOptions) *CreateTargetBaseInput {
	this := CreateTargetBaseInput{}
	this.Name = name
	this.SystemId = systemId
	this.SystemType = systemType
	this.TargetSystemOptions = targetSystemOptions
	return &this
}

// NewCreateTargetBaseInputWithDefaults instantiates a new CreateTargetBaseInput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateTargetBaseInputWithDefaults() *CreateTargetBaseInput {
	this := CreateTargetBaseInput{}
	return &this
}

// GetName returns the Name field value
func (o *CreateTargetBaseInput) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CreateTargetBaseInput) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CreateTargetBaseInput) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *CreateTargetBaseInput) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTargetBaseInput) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *CreateTargetBaseInput) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *CreateTargetBaseInput) SetDescription(v string) {
	o.Description = &v
}

// GetSystemId returns the SystemId field value
func (o *CreateTargetBaseInput) GetSystemId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SystemId
}

// GetSystemIdOk returns a tuple with the SystemId field value
// and a boolean to check if the value has been set.
func (o *CreateTargetBaseInput) GetSystemIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SystemId, true
}

// SetSystemId sets field value
func (o *CreateTargetBaseInput) SetSystemId(v string) {
	o.SystemId = v
}

// GetSystemType returns the SystemType field value
func (o *CreateTargetBaseInput) GetSystemType() StorageSystemTypeEnum {
	if o == nil {
		var ret StorageSystemTypeEnum
		return ret
	}

	return o.SystemType
}

// GetSystemTypeOk returns a tuple with the SystemType field value
// and a boolean to check if the value has been set.
func (o *CreateTargetBaseInput) GetSystemTypeOk() (*StorageSystemTypeEnum, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SystemType, true
}

// SetSystemType sets field value
func (o *CreateTargetBaseInput) SetSystemType(v StorageSystemTypeEnum) {
	o.SystemType = v
}

// GetTargetSystemOptions returns the TargetSystemOptions field value
func (o *CreateTargetBaseInput) GetTargetSystemOptions() TargetSystemOptions {
	if o == nil {
		var ret TargetSystemOptions
		return ret
	}

	return o.TargetSystemOptions
}

// GetTargetSystemOptionsOk returns a tuple with the TargetSystemOptions field value
// and a boolean to check if the value has been set.
func (o *CreateTargetBaseInput) GetTargetSystemOptionsOk() (*TargetSystemOptions, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TargetSystemOptions, true
}

// SetTargetSystemOptions sets field value
func (o *CreateTargetBaseInput) SetTargetSystemOptions(v TargetSystemOptions) {
	o.TargetSystemOptions = v
}

// GetBandwidthLimit returns the BandwidthLimit field value if set, zero value otherwise.
func (o *CreateTargetBaseInput) GetBandwidthLimit() int32 {
	if o == nil || IsNil(o.BandwidthLimit) {
		var ret int32
		return ret
	}
	return *o.BandwidthLimit
}

// GetBandwidthLimitOk returns a tuple with the BandwidthLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTargetBaseInput) GetBandwidthLimitOk() (*int32, bool) {
	if o == nil || IsNil(o.BandwidthLimit) {
		return nil, false
	}
	return o.BandwidthLimit, true
}

// HasBandwidthLimit returns a boolean if a field has been set.
func (o *CreateTargetBaseInput) HasBandwidthLimit() bool {
	if o != nil && !IsNil(o.BandwidthLimit) {
		return true
	}

	return false
}

// SetBandwidthLimit gets a reference to the given int32 and assigns it to the BandwidthLimit field.
func (o *CreateTargetBaseInput) SetBandwidthLimit(v int32) {
	o.BandwidthLimit = &v
}

func (o CreateTargetBaseInput) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateTargetBaseInput) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	toSerialize["system_id"] = o.SystemId
	toSerialize["system_type"] = o.SystemType
	toSerialize["target_system_options"] = o.TargetSystemOptions
	if !IsNil(o.BandwidthLimit) {
		toSerialize["bandwidth_limit"] = o.BandwidthLimit
	}
	return toSerialize, nil
}

func (o *CreateTargetBaseInput) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"system_id",
		"system_type",
		"target_system_options",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateTargetBaseInput := _CreateTargetBaseInput{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateTargetBaseInput)

	if err != nil {
		return err
	}

	*o = CreateTargetBaseInput(varCreateTargetBaseInput)

	return err
}

type NullableCreateTargetBaseInput struct {
	value *CreateTargetBaseInput
	isSet bool
}

func (v NullableCreateTargetBaseInput) Get() *CreateTargetBaseInput {
	return v.value
}

func (v *NullableCreateTargetBaseInput) Set(val *CreateTargetBaseInput) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateTargetBaseInput) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateTargetBaseInput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateTargetBaseInput(val *CreateTargetBaseInput) *NullableCreateTargetBaseInput {
	return &NullableCreateTargetBaseInput{value: val, isSet: true}
}

func (v NullableCreateTargetBaseInput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateTargetBaseInput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


