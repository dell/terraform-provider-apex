/*
APEX Navigator for Multicloud Storage REST APIs

The public API definitions for APEX Navigator for Multicloud Storage

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the MobilityTarget type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MobilityTarget{}

// MobilityTarget MobilityTarget
type MobilityTarget struct {
	// Idenifier of this target mobility group
	Id string `json:"id"`
	// Name of the mobility target
	Name string `json:"name"`
	// Description of the mobility target
	Description string `json:"description"`
	SystemType *StorageSystemTypeEnum `json:"system_type,omitempty"`
	// ID of the target system
	SystemId string `json:"system_id"`
	// ID of the source mobility group
	SourceMobilityGroupId string `json:"source_mobility_group_id"`
	// Timestamp from when the group was created
	CreationTimestamp string `json:"creation_timestamp"`
	// Timestamp of the last source image copied to this target
	ImageTimestamp *string `json:"image_timestamp,omitempty"`
	LastCopyJobId *string `json:"last_copy_job_id,omitempty"`
	TargetMembers []MobilityMemberMap `json:"target_members,omitempty"`
	// Bandwidth limit in Mbps (Mega bits per second).
	BandwidthLimit *int32 `json:"bandwidth_limit,omitempty"`
	Type string `json:"type"`
}

type _MobilityTarget MobilityTarget

// NewMobilityTarget instantiates a new MobilityTarget object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMobilityTarget(id string, name string, description string, systemId string, sourceMobilityGroupId string, creationTimestamp string) *MobilityTarget {
	this := MobilityTarget{}
	this.Id = id
	this.Name = name
	this.Description = description
	this.SystemId = systemId
	this.SourceMobilityGroupId = sourceMobilityGroupId
	this.CreationTimestamp = creationTimestamp
	return &this
}

// NewMobilityTargetWithDefaults instantiates a new MobilityTarget object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMobilityTargetWithDefaults() *MobilityTarget {
	this := MobilityTarget{}
	return &this
}

// GetId returns the Id field value
func (o *MobilityTarget) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *MobilityTarget) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *MobilityTarget) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value
func (o *MobilityTarget) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *MobilityTarget) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *MobilityTarget) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value
func (o *MobilityTarget) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *MobilityTarget) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *MobilityTarget) SetDescription(v string) {
	o.Description = v
}

// GetSystemType returns the SystemType field value if set, zero value otherwise.
func (o *MobilityTarget) GetSystemType() StorageSystemTypeEnum {
	if o == nil || IsNil(o.SystemType) {
		var ret StorageSystemTypeEnum
		return ret
	}
	return *o.SystemType
}

// GetSystemTypeOk returns a tuple with the SystemType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobilityTarget) GetSystemTypeOk() (*StorageSystemTypeEnum, bool) {
	if o == nil || IsNil(o.SystemType) {
		return nil, false
	}
	return o.SystemType, true
}

// HasSystemType returns a boolean if a field has been set.
func (o *MobilityTarget) HasSystemType() bool {
	if o != nil && !IsNil(o.SystemType) {
		return true
	}

	return false
}

// SetSystemType gets a reference to the given StorageSystemTypeEnum and assigns it to the SystemType field.
func (o *MobilityTarget) SetSystemType(v StorageSystemTypeEnum) {
	o.SystemType = &v
}

// GetSystemId returns the SystemId field value
func (o *MobilityTarget) GetSystemId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SystemId
}

// GetSystemIdOk returns a tuple with the SystemId field value
// and a boolean to check if the value has been set.
func (o *MobilityTarget) GetSystemIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SystemId, true
}

// SetSystemId sets field value
func (o *MobilityTarget) SetSystemId(v string) {
	o.SystemId = v
}

// GetSourceMobilityGroupId returns the SourceMobilityGroupId field value
func (o *MobilityTarget) GetSourceMobilityGroupId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SourceMobilityGroupId
}

// GetSourceMobilityGroupIdOk returns a tuple with the SourceMobilityGroupId field value
// and a boolean to check if the value has been set.
func (o *MobilityTarget) GetSourceMobilityGroupIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SourceMobilityGroupId, true
}

// SetSourceMobilityGroupId sets field value
func (o *MobilityTarget) SetSourceMobilityGroupId(v string) {
	o.SourceMobilityGroupId = v
}

// GetCreationTimestamp returns the CreationTimestamp field value
func (o *MobilityTarget) GetCreationTimestamp() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreationTimestamp
}

// GetCreationTimestampOk returns a tuple with the CreationTimestamp field value
// and a boolean to check if the value has been set.
func (o *MobilityTarget) GetCreationTimestampOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreationTimestamp, true
}

// SetCreationTimestamp sets field value
func (o *MobilityTarget) SetCreationTimestamp(v string) {
	o.CreationTimestamp = v
}

// GetImageTimestamp returns the ImageTimestamp field value if set, zero value otherwise.
func (o *MobilityTarget) GetImageTimestamp() string {
	if o == nil || IsNil(o.ImageTimestamp) {
		var ret string
		return ret
	}
	return *o.ImageTimestamp
}

// GetImageTimestampOk returns a tuple with the ImageTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobilityTarget) GetImageTimestampOk() (*string, bool) {
	if o == nil || IsNil(o.ImageTimestamp) {
		return nil, false
	}
	return o.ImageTimestamp, true
}

// HasImageTimestamp returns a boolean if a field has been set.
func (o *MobilityTarget) HasImageTimestamp() bool {
	if o != nil && !IsNil(o.ImageTimestamp) {
		return true
	}

	return false
}

// SetImageTimestamp gets a reference to the given string and assigns it to the ImageTimestamp field.
func (o *MobilityTarget) SetImageTimestamp(v string) {
	o.ImageTimestamp = &v
}

// GetLastCopyJobId returns the LastCopyJobId field value if set, zero value otherwise.
func (o *MobilityTarget) GetLastCopyJobId() string {
	if o == nil || IsNil(o.LastCopyJobId) {
		var ret string
		return ret
	}
	return *o.LastCopyJobId
}

// GetLastCopyJobIdOk returns a tuple with the LastCopyJobId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobilityTarget) GetLastCopyJobIdOk() (*string, bool) {
	if o == nil || IsNil(o.LastCopyJobId) {
		return nil, false
	}
	return o.LastCopyJobId, true
}

// HasLastCopyJobId returns a boolean if a field has been set.
func (o *MobilityTarget) HasLastCopyJobId() bool {
	if o != nil && !IsNil(o.LastCopyJobId) {
		return true
	}

	return false
}

// SetLastCopyJobId gets a reference to the given string and assigns it to the LastCopyJobId field.
func (o *MobilityTarget) SetLastCopyJobId(v string) {
	o.LastCopyJobId = &v
}

// GetTargetMembers returns the TargetMembers field value if set, zero value otherwise.
func (o *MobilityTarget) GetTargetMembers() []MobilityMemberMap {
	if o == nil || IsNil(o.TargetMembers) {
		var ret []MobilityMemberMap
		return ret
	}
	return o.TargetMembers
}

// GetTargetMembersOk returns a tuple with the TargetMembers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobilityTarget) GetTargetMembersOk() ([]MobilityMemberMap, bool) {
	if o == nil || IsNil(o.TargetMembers) {
		return nil, false
	}
	return o.TargetMembers, true
}

// HasTargetMembers returns a boolean if a field has been set.
func (o *MobilityTarget) HasTargetMembers() bool {
	if o != nil && !IsNil(o.TargetMembers) {
		return true
	}

	return false
}

// SetTargetMembers gets a reference to the given []MobilityMemberMap and assigns it to the TargetMembers field.
func (o *MobilityTarget) SetTargetMembers(v []MobilityMemberMap) {
	o.TargetMembers = v
}

// GetBandwidthLimit returns the BandwidthLimit field value if set, zero value otherwise.
func (o *MobilityTarget) GetBandwidthLimit() int32 {
	if o == nil || IsNil(o.BandwidthLimit) {
		var ret int32
		return ret
	}
	return *o.BandwidthLimit
}

// GetBandwidthLimitOk returns a tuple with the BandwidthLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobilityTarget) GetBandwidthLimitOk() (*int32, bool) {
	if o == nil || IsNil(o.BandwidthLimit) {
		return nil, false
	}
	return o.BandwidthLimit, true
}

// HasBandwidthLimit returns a boolean if a field has been set.
func (o *MobilityTarget) HasBandwidthLimit() bool {
	if o != nil && !IsNil(o.BandwidthLimit) {
		return true
	}

	return false
}

// SetBandwidthLimit gets a reference to the given int32 and assigns it to the BandwidthLimit field.
func (o *MobilityTarget) SetBandwidthLimit(v int32) {
	o.BandwidthLimit = &v
}

func (o MobilityTarget) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MobilityTarget) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["name"] = o.Name
	toSerialize["description"] = o.Description
	if !IsNil(o.SystemType) {
		toSerialize["system_type"] = o.SystemType
	}
	toSerialize["system_id"] = o.SystemId
	toSerialize["source_mobility_group_id"] = o.SourceMobilityGroupId
	toSerialize["creation_timestamp"] = o.CreationTimestamp
	if !IsNil(o.ImageTimestamp) {
		toSerialize["image_timestamp"] = o.ImageTimestamp
	}
	if !IsNil(o.LastCopyJobId) {
		toSerialize["last_copy_job_id"] = o.LastCopyJobId
	}
	if !IsNil(o.TargetMembers) {
		toSerialize["target_members"] = o.TargetMembers
	}
	if !IsNil(o.BandwidthLimit) {
		toSerialize["bandwidth_limit"] = o.BandwidthLimit
	}
	return toSerialize, nil
}

func (o *MobilityTarget) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"name",
		"description",
		"system_id",
		"source_mobility_group_id",
		"creation_timestamp",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varMobilityTarget := _MobilityTarget{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varMobilityTarget)

	if err != nil {
		return err
	}

	*o = MobilityTarget(varMobilityTarget)

	return err
}

type NullableMobilityTarget struct {
	value *MobilityTarget
	isSet bool
}

func (v NullableMobilityTarget) Get() *MobilityTarget {
	return v.value
}

func (v *NullableMobilityTarget) Set(val *MobilityTarget) {
	v.value = val
	v.isSet = true
}

func (v NullableMobilityTarget) IsSet() bool {
	return v.isSet
}

func (v *NullableMobilityTarget) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMobilityTarget(val *MobilityTarget) *NullableMobilityTarget {
	return &NullableMobilityTarget{value: val, isSet: true}
}

func (v NullableMobilityTarget) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMobilityTarget) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


