/*
APEX Navigator for Multicloud Storage REST APIs

The public API definitions for APEX Navigator for Multicloud Storage

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the UpdateMobilityTargetInput type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateMobilityTargetInput{}

// UpdateMobilityTargetInput UpdateMobilityTargetInput
type UpdateMobilityTargetInput struct {
	// New name for the mobility target
	Name *string `json:"name,omitempty"`
	// New description for the mobility target
	Description *string `json:"description,omitempty"`
	// Bandwidth limit in Mbps (Mega bits per second).
	BandwidthLimit *int32 `json:"bandwidth_limit,omitempty"`
}

// NewUpdateMobilityTargetInput instantiates a new UpdateMobilityTargetInput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateMobilityTargetInput() *UpdateMobilityTargetInput {
	this := UpdateMobilityTargetInput{}
	return &this
}

// NewUpdateMobilityTargetInputWithDefaults instantiates a new UpdateMobilityTargetInput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateMobilityTargetInputWithDefaults() *UpdateMobilityTargetInput {
	this := UpdateMobilityTargetInput{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *UpdateMobilityTargetInput) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateMobilityTargetInput) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *UpdateMobilityTargetInput) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *UpdateMobilityTargetInput) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *UpdateMobilityTargetInput) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateMobilityTargetInput) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *UpdateMobilityTargetInput) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *UpdateMobilityTargetInput) SetDescription(v string) {
	o.Description = &v
}

// GetBandwidthLimit returns the BandwidthLimit field value if set, zero value otherwise.
func (o *UpdateMobilityTargetInput) GetBandwidthLimit() int32 {
	if o == nil || IsNil(o.BandwidthLimit) {
		var ret int32
		return ret
	}
	return *o.BandwidthLimit
}

// GetBandwidthLimitOk returns a tuple with the BandwidthLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateMobilityTargetInput) GetBandwidthLimitOk() (*int32, bool) {
	if o == nil || IsNil(o.BandwidthLimit) {
		return nil, false
	}
	return o.BandwidthLimit, true
}

// HasBandwidthLimit returns a boolean if a field has been set.
func (o *UpdateMobilityTargetInput) HasBandwidthLimit() bool {
	if o != nil && !IsNil(o.BandwidthLimit) {
		return true
	}

	return false
}

// SetBandwidthLimit gets a reference to the given int32 and assigns it to the BandwidthLimit field.
func (o *UpdateMobilityTargetInput) SetBandwidthLimit(v int32) {
	o.BandwidthLimit = &v
}

func (o UpdateMobilityTargetInput) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateMobilityTargetInput) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.BandwidthLimit) {
		toSerialize["bandwidth_limit"] = o.BandwidthLimit
	}
	return toSerialize, nil
}

type NullableUpdateMobilityTargetInput struct {
	value *UpdateMobilityTargetInput
	isSet bool
}

func (v NullableUpdateMobilityTargetInput) Get() *UpdateMobilityTargetInput {
	return v.value
}

func (v *NullableUpdateMobilityTargetInput) Set(val *UpdateMobilityTargetInput) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateMobilityTargetInput) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateMobilityTargetInput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateMobilityTargetInput(val *UpdateMobilityTargetInput) *NullableUpdateMobilityTargetInput {
	return &NullableUpdateMobilityTargetInput{value: val, isSet: true}
}

func (v NullableUpdateMobilityTargetInput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateMobilityTargetInput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


