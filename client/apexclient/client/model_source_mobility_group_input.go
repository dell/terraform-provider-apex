/*
APEX Navigator for Multicloud Storage REST APIs

The public API definitions for APEX Navigator for Multicloud Storage

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the SourceMobilityGroupInput type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SourceMobilityGroupInput{}

// SourceMobilityGroupInput This is the input for creating a source mobility group.  It has the source system identifier (e.g. PowerFlex identifier) and the list of member identifiers (e.g. volume identifiers) that will be used as the source of mobility copy operations.
type SourceMobilityGroupInput struct {
	// Name of the mobility group
	Name string `json:"name"`
	// Description of the mobility group
	Description *string `json:"description,omitempty"`
	// Identifier of the source system for this mobility group
	SystemId string `json:"system_id"`
	SystemType StorageSystemTypeEnum `json:"system_type"`
	// List of the identifiers of the mobility group members  (e.g. volumes identifiers)
	Members []string `json:"members"`
}

type _SourceMobilityGroupInput SourceMobilityGroupInput

// NewSourceMobilityGroupInput instantiates a new SourceMobilityGroupInput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSourceMobilityGroupInput(name string, systemId string, systemType StorageSystemTypeEnum, members []string) *SourceMobilityGroupInput {
	this := SourceMobilityGroupInput{}
	this.Name = name
	this.SystemId = systemId
	this.SystemType = systemType
	this.Members = members
	return &this
}

// NewSourceMobilityGroupInputWithDefaults instantiates a new SourceMobilityGroupInput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSourceMobilityGroupInputWithDefaults() *SourceMobilityGroupInput {
	this := SourceMobilityGroupInput{}
	return &this
}

// GetName returns the Name field value
func (o *SourceMobilityGroupInput) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *SourceMobilityGroupInput) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *SourceMobilityGroupInput) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *SourceMobilityGroupInput) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SourceMobilityGroupInput) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *SourceMobilityGroupInput) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *SourceMobilityGroupInput) SetDescription(v string) {
	o.Description = &v
}

// GetSystemId returns the SystemId field value
func (o *SourceMobilityGroupInput) GetSystemId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SystemId
}

// GetSystemIdOk returns a tuple with the SystemId field value
// and a boolean to check if the value has been set.
func (o *SourceMobilityGroupInput) GetSystemIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SystemId, true
}

// SetSystemId sets field value
func (o *SourceMobilityGroupInput) SetSystemId(v string) {
	o.SystemId = v
}

// GetSystemType returns the SystemType field value
func (o *SourceMobilityGroupInput) GetSystemType() StorageSystemTypeEnum {
	if o == nil {
		var ret StorageSystemTypeEnum
		return ret
	}

	return o.SystemType
}

// GetSystemTypeOk returns a tuple with the SystemType field value
// and a boolean to check if the value has been set.
func (o *SourceMobilityGroupInput) GetSystemTypeOk() (*StorageSystemTypeEnum, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SystemType, true
}

// SetSystemType sets field value
func (o *SourceMobilityGroupInput) SetSystemType(v StorageSystemTypeEnum) {
	o.SystemType = v
}

// GetMembers returns the Members field value
func (o *SourceMobilityGroupInput) GetMembers() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Members
}

// GetMembersOk returns a tuple with the Members field value
// and a boolean to check if the value has been set.
func (o *SourceMobilityGroupInput) GetMembersOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Members, true
}

// SetMembers sets field value
func (o *SourceMobilityGroupInput) SetMembers(v []string) {
	o.Members = v
}

func (o SourceMobilityGroupInput) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SourceMobilityGroupInput) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	toSerialize["system_id"] = o.SystemId
	toSerialize["system_type"] = o.SystemType
	toSerialize["members"] = o.Members
	return toSerialize, nil
}

func (o *SourceMobilityGroupInput) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"system_id",
		"system_type",
		"members",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSourceMobilityGroupInput := _SourceMobilityGroupInput{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSourceMobilityGroupInput)

	if err != nil {
		return err
	}

	*o = SourceMobilityGroupInput(varSourceMobilityGroupInput)

	return err
}

type NullableSourceMobilityGroupInput struct {
	value *SourceMobilityGroupInput
	isSet bool
}

func (v NullableSourceMobilityGroupInput) Get() *SourceMobilityGroupInput {
	return v.value
}

func (v *NullableSourceMobilityGroupInput) Set(val *SourceMobilityGroupInput) {
	v.value = val
	v.isSet = true
}

func (v NullableSourceMobilityGroupInput) IsSet() bool {
	return v.isSet
}

func (v *NullableSourceMobilityGroupInput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSourceMobilityGroupInput(val *SourceMobilityGroupInput) *NullableSourceMobilityGroupInput {
	return &NullableSourceMobilityGroupInput{value: val, isSet: true}
}

func (v NullableSourceMobilityGroupInput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSourceMobilityGroupInput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


